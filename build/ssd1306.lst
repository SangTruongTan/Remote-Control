ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ssd1306.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_dmul
  19              		.global	__aeabi_ddiv
  20              		.global	__aeabi_d2f
  21              		.section	.text.ssd1306_DegToRad,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	ssd1306_DegToRad:
  28              	.LVL0:
  29              	.LFB85:
  30              		.file 1 "Core/Src/ssd1306.c"
   1:Core/Src/ssd1306.c **** #include "ssd1306.h"
   2:Core/Src/ssd1306.c **** #include <math.h>
   3:Core/Src/ssd1306.c **** #include <stdlib.h>
   4:Core/Src/ssd1306.c **** #include <string.h>  // For memcpy
   5:Core/Src/ssd1306.c **** 
   6:Core/Src/ssd1306.c **** #if defined(SSD1306_USE_I2C)
   7:Core/Src/ssd1306.c **** 
   8:Core/Src/ssd1306.c **** void ssd1306_Reset(void) {
   9:Core/Src/ssd1306.c ****     /* for I2C - do nothing */
  10:Core/Src/ssd1306.c **** }
  11:Core/Src/ssd1306.c **** 
  12:Core/Src/ssd1306.c **** // Send a byte to the command register
  13:Core/Src/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  14:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
  15:Core/Src/ssd1306.c **** }
  16:Core/Src/ssd1306.c **** 
  17:Core/Src/ssd1306.c **** // Send data
  18:Core/Src/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  19:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELA
  20:Core/Src/ssd1306.c **** }
  21:Core/Src/ssd1306.c **** 
  22:Core/Src/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
  23:Core/Src/ssd1306.c **** 
  24:Core/Src/ssd1306.c **** void ssd1306_Reset(void) {
  25:Core/Src/ssd1306.c ****     // CS = High (not selected)
  26:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
  27:Core/Src/ssd1306.c **** 
  28:Core/Src/ssd1306.c ****     // Reset the OLED
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 2


  29:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_RESET);
  30:Core/Src/ssd1306.c ****     HAL_Delay(10);
  31:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_SET);
  32:Core/Src/ssd1306.c ****     HAL_Delay(10);
  33:Core/Src/ssd1306.c **** }
  34:Core/Src/ssd1306.c **** 
  35:Core/Src/ssd1306.c **** // Send a byte to the command register
  36:Core/Src/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  37:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  38:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
  39:Core/Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1, HAL_MAX_DELAY);
  40:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  41:Core/Src/ssd1306.c **** }
  42:Core/Src/ssd1306.c **** 
  43:Core/Src/ssd1306.c **** // Send data
  44:Core/Src/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  45:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  46:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
  47:Core/Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
  48:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  49:Core/Src/ssd1306.c **** }
  50:Core/Src/ssd1306.c **** 
  51:Core/Src/ssd1306.c **** #else
  52:Core/Src/ssd1306.c **** #error "You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro"
  53:Core/Src/ssd1306.c **** #endif
  54:Core/Src/ssd1306.c **** 
  55:Core/Src/ssd1306.c **** 
  56:Core/Src/ssd1306.c **** // Screenbuffer
  57:Core/Src/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_BUFFER_SIZE];
  58:Core/Src/ssd1306.c **** 
  59:Core/Src/ssd1306.c **** // Screen object
  60:Core/Src/ssd1306.c **** static SSD1306_t SSD1306;
  61:Core/Src/ssd1306.c **** 
  62:Core/Src/ssd1306.c **** /* Fills the Screenbuffer with values from a given buffer of a fixed length */
  63:Core/Src/ssd1306.c **** SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len) {
  64:Core/Src/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
  65:Core/Src/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
  66:Core/Src/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
  67:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
  68:Core/Src/ssd1306.c ****     }
  69:Core/Src/ssd1306.c ****     return ret;
  70:Core/Src/ssd1306.c **** }
  71:Core/Src/ssd1306.c **** 
  72:Core/Src/ssd1306.c **** // Initialize the oled screen
  73:Core/Src/ssd1306.c **** void ssd1306_Init(void) {
  74:Core/Src/ssd1306.c ****     // Reset OLED
  75:Core/Src/ssd1306.c ****     ssd1306_Reset();
  76:Core/Src/ssd1306.c **** 
  77:Core/Src/ssd1306.c ****     // Wait for the screen to boot
  78:Core/Src/ssd1306.c ****     HAL_Delay(100);
  79:Core/Src/ssd1306.c **** 
  80:Core/Src/ssd1306.c ****     // Init OLED
  81:Core/Src/ssd1306.c ****     ssd1306_SetDisplayOn(0); //display off
  82:Core/Src/ssd1306.c **** 
  83:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
  84:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
  85:Core/Src/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 3


  86:Core/Src/ssd1306.c **** 
  87:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  88:Core/Src/ssd1306.c **** 
  89:Core/Src/ssd1306.c **** #ifdef SSD1306_MIRROR_VERT
  90:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xC0); // Mirror vertically
  91:Core/Src/ssd1306.c **** #else
  92:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
  93:Core/Src/ssd1306.c **** #endif
  94:Core/Src/ssd1306.c **** 
  95:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //---set low column address
  96:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
  97:Core/Src/ssd1306.c **** 
  98:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x40); //--set start line address - CHECK
  99:Core/Src/ssd1306.c **** 
 100:Core/Src/ssd1306.c ****     ssd1306_SetContrast(0xFF);
 101:Core/Src/ssd1306.c **** 
 102:Core/Src/ssd1306.c **** #ifdef SSD1306_MIRROR_HORIZ
 103:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA0); // Mirror horizontally
 104:Core/Src/ssd1306.c **** #else
 105:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 106:Core/Src/ssd1306.c **** #endif
 107:Core/Src/ssd1306.c **** 
 108:Core/Src/ssd1306.c **** #ifdef SSD1306_INVERSE_COLOR
 109:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA7); //--set inverse color
 110:Core/Src/ssd1306.c **** #else
 111:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA6); //--set normal color
 112:Core/Src/ssd1306.c **** #endif
 113:Core/Src/ssd1306.c **** 
 114:Core/Src/ssd1306.c **** // Set multiplex ratio.
 115:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 132)
 116:Core/Src/ssd1306.c ****     // Found in the Luma Python lib for SH1106.
 117:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
 118:Core/Src/ssd1306.c **** #else
 119:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 120:Core/Src/ssd1306.c **** #endif
 121:Core/Src/ssd1306.c **** 
 122:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 123:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x1F); //
 124:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 125:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 126:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 132)
 127:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x3F); // Seems to work for 128px high displays too.
 128:Core/Src/ssd1306.c **** #else
 129:Core/Src/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 130:Core/Src/ssd1306.c **** #endif
 131:Core/Src/ssd1306.c **** 
 132:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 133:Core/Src/ssd1306.c **** 
 134:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 135:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 136:Core/Src/ssd1306.c **** 
 137:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 138:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 139:Core/Src/ssd1306.c **** 
 140:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xD9); //--set pre-charge period
 141:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 142:Core/Src/ssd1306.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 4


 143:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 144:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 145:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x02);
 146:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 147:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 148:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 132)
 149:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 150:Core/Src/ssd1306.c **** #else
 151:Core/Src/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 152:Core/Src/ssd1306.c **** #endif
 153:Core/Src/ssd1306.c **** 
 154:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xDB); //--set vcomh
 155:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 156:Core/Src/ssd1306.c **** 
 157:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 158:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 159:Core/Src/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 160:Core/Src/ssd1306.c **** 
 161:Core/Src/ssd1306.c ****     // Clear screen
 162:Core/Src/ssd1306.c ****     ssd1306_Fill(Black);
 163:Core/Src/ssd1306.c ****     
 164:Core/Src/ssd1306.c ****     // Flush buffer to screen
 165:Core/Src/ssd1306.c ****     ssd1306_UpdateScreen();
 166:Core/Src/ssd1306.c ****     
 167:Core/Src/ssd1306.c ****     // Set default values for screen object
 168:Core/Src/ssd1306.c ****     SSD1306.CurrentX = 0;
 169:Core/Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 170:Core/Src/ssd1306.c ****     
 171:Core/Src/ssd1306.c ****     SSD1306.Initialized = 1;
 172:Core/Src/ssd1306.c **** }
 173:Core/Src/ssd1306.c **** 
 174:Core/Src/ssd1306.c **** // Fill the whole screen with the given color
 175:Core/Src/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) {
 176:Core/Src/ssd1306.c ****     /* Set memory */
 177:Core/Src/ssd1306.c ****     uint32_t i;
 178:Core/Src/ssd1306.c **** 
 179:Core/Src/ssd1306.c ****     for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 180:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 181:Core/Src/ssd1306.c ****     }
 182:Core/Src/ssd1306.c **** }
 183:Core/Src/ssd1306.c **** 
 184:Core/Src/ssd1306.c **** // Write the screenbuffer with changed to the screen
 185:Core/Src/ssd1306.c **** void ssd1306_UpdateScreen(void) {
 186:Core/Src/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 187:Core/Src/ssd1306.c ****     // depends on the screen height:
 188:Core/Src/ssd1306.c ****     //
 189:Core/Src/ssd1306.c ****     //  * 32px   ==  4 pages
 190:Core/Src/ssd1306.c ****     //  * 64px   ==  8 pages
 191:Core/Src/ssd1306.c ****     //  * 128px  ==  16 pages
 192:Core/Src/ssd1306.c ****     for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 193:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 194:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0x00);
 195:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0x10);
 196:Core/Src/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 197:Core/Src/ssd1306.c ****     }
 198:Core/Src/ssd1306.c **** }
 199:Core/Src/ssd1306.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 5


 200:Core/Src/ssd1306.c **** //    Draw one pixel in the screenbuffer
 201:Core/Src/ssd1306.c **** //    X => X Coordinate
 202:Core/Src/ssd1306.c **** //    Y => Y Coordinate
 203:Core/Src/ssd1306.c **** //    color => Pixel color
 204:Core/Src/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 205:Core/Src/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 206:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 207:Core/Src/ssd1306.c ****         return;
 208:Core/Src/ssd1306.c ****     }
 209:Core/Src/ssd1306.c ****    
 210:Core/Src/ssd1306.c ****     // Draw in the right color
 211:Core/Src/ssd1306.c ****     if(color == White) {
 212:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 213:Core/Src/ssd1306.c ****     } else { 
 214:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 215:Core/Src/ssd1306.c ****     }
 216:Core/Src/ssd1306.c **** }
 217:Core/Src/ssd1306.c **** 
 218:Core/Src/ssd1306.c **** // Draw 1 char to the screen buffer
 219:Core/Src/ssd1306.c **** // ch       => char om weg te schrijven
 220:Core/Src/ssd1306.c **** // Font     => Font waarmee we gaan schrijven
 221:Core/Src/ssd1306.c **** // color    => Black or White
 222:Core/Src/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 223:Core/Src/ssd1306.c ****     uint32_t i, b, j;
 224:Core/Src/ssd1306.c ****     
 225:Core/Src/ssd1306.c ****     // Check if character is valid
 226:Core/Src/ssd1306.c ****     if (ch < 32 || ch > 126)
 227:Core/Src/ssd1306.c ****         return 0;
 228:Core/Src/ssd1306.c ****     
 229:Core/Src/ssd1306.c ****     // Check remaining space on current line
 230:Core/Src/ssd1306.c ****     if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 231:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 232:Core/Src/ssd1306.c ****     {
 233:Core/Src/ssd1306.c ****         // Not enough space on current line
 234:Core/Src/ssd1306.c ****         return 0;
 235:Core/Src/ssd1306.c ****     }
 236:Core/Src/ssd1306.c ****     
 237:Core/Src/ssd1306.c ****     // Use the font to write
 238:Core/Src/ssd1306.c ****     for(i = 0; i < Font.FontHeight; i++) {
 239:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 240:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 241:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 242:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 243:Core/Src/ssd1306.c ****             } else {
 244:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!col
 245:Core/Src/ssd1306.c ****             }
 246:Core/Src/ssd1306.c ****         }
 247:Core/Src/ssd1306.c ****     }
 248:Core/Src/ssd1306.c ****     
 249:Core/Src/ssd1306.c ****     // The current space is now taken
 250:Core/Src/ssd1306.c ****     SSD1306.CurrentX += Font.FontWidth;
 251:Core/Src/ssd1306.c ****     
 252:Core/Src/ssd1306.c ****     // Return written char for validation
 253:Core/Src/ssd1306.c ****     return ch;
 254:Core/Src/ssd1306.c **** }
 255:Core/Src/ssd1306.c **** 
 256:Core/Src/ssd1306.c **** // Write full string to screenbuffer
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 6


 257:Core/Src/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 258:Core/Src/ssd1306.c ****     // Write until null-byte
 259:Core/Src/ssd1306.c ****     while (*str) {
 260:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 261:Core/Src/ssd1306.c ****             // Char could not be written
 262:Core/Src/ssd1306.c ****             return *str;
 263:Core/Src/ssd1306.c ****         }
 264:Core/Src/ssd1306.c ****         
 265:Core/Src/ssd1306.c ****         // Next char
 266:Core/Src/ssd1306.c ****         str++;
 267:Core/Src/ssd1306.c ****     }
 268:Core/Src/ssd1306.c ****     
 269:Core/Src/ssd1306.c ****     // Everything ok
 270:Core/Src/ssd1306.c ****     return *str;
 271:Core/Src/ssd1306.c **** }
 272:Core/Src/ssd1306.c **** 
 273:Core/Src/ssd1306.c **** // Position the cursor
 274:Core/Src/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 275:Core/Src/ssd1306.c ****     SSD1306.CurrentX = x;
 276:Core/Src/ssd1306.c ****     SSD1306.CurrentY = y;
 277:Core/Src/ssd1306.c **** }
 278:Core/Src/ssd1306.c **** 
 279:Core/Src/ssd1306.c **** // Draw line by Bresenhem's algorithm
 280:Core/Src/ssd1306.c **** void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 281:Core/Src/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 282:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 283:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 284:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 285:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 286:Core/Src/ssd1306.c ****   int32_t error2;
 287:Core/Src/ssd1306.c ****     
 288:Core/Src/ssd1306.c ****   ssd1306_DrawPixel(x2, y2, color);
 289:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 290:Core/Src/ssd1306.c ****     {
 291:Core/Src/ssd1306.c ****     ssd1306_DrawPixel(x1, y1, color);
 292:Core/Src/ssd1306.c ****     error2 = error * 2;
 293:Core/Src/ssd1306.c ****     if(error2 > -deltaY)
 294:Core/Src/ssd1306.c ****     {
 295:Core/Src/ssd1306.c ****       error -= deltaY;
 296:Core/Src/ssd1306.c ****       x1 += signX;
 297:Core/Src/ssd1306.c ****     }
 298:Core/Src/ssd1306.c ****     else
 299:Core/Src/ssd1306.c ****     {
 300:Core/Src/ssd1306.c ****     /*nothing to do*/
 301:Core/Src/ssd1306.c ****     }
 302:Core/Src/ssd1306.c ****         
 303:Core/Src/ssd1306.c ****     if(error2 < deltaX)
 304:Core/Src/ssd1306.c ****     {
 305:Core/Src/ssd1306.c ****       error += deltaX;
 306:Core/Src/ssd1306.c ****       y1 += signY;
 307:Core/Src/ssd1306.c ****     }
 308:Core/Src/ssd1306.c ****     else
 309:Core/Src/ssd1306.c ****     {
 310:Core/Src/ssd1306.c ****     /*nothing to do*/
 311:Core/Src/ssd1306.c ****     }
 312:Core/Src/ssd1306.c ****   }
 313:Core/Src/ssd1306.c ****   return;
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 7


 314:Core/Src/ssd1306.c **** }
 315:Core/Src/ssd1306.c **** //Draw polyline
 316:Core/Src/ssd1306.c **** void ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color) {
 317:Core/Src/ssd1306.c ****   uint16_t i;
 318:Core/Src/ssd1306.c ****   if(par_vertex != 0){
 319:Core/Src/ssd1306.c ****     for(i = 1; i < par_size; i++){
 320:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 321:Core/Src/ssd1306.c ****     }
 322:Core/Src/ssd1306.c ****   }
 323:Core/Src/ssd1306.c ****   else
 324:Core/Src/ssd1306.c ****   {
 325:Core/Src/ssd1306.c ****     /*nothing to do*/
 326:Core/Src/ssd1306.c ****   }
 327:Core/Src/ssd1306.c ****   return;
 328:Core/Src/ssd1306.c **** }
 329:Core/Src/ssd1306.c **** /*Convert Degrees to Radians*/
 330:Core/Src/ssd1306.c **** static float ssd1306_DegToRad(float par_deg) {
  31              		.loc 1 330 46 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 330 46 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
 331:Core/Src/ssd1306.c ****     return par_deg * 3.14 / 180.0;
  41              		.loc 1 331 5 is_stmt 1 view .LVU2
  42              		.loc 1 331 20 is_stmt 0 view .LVU3
  43 0002 FFF7FEFF 		bl	__aeabi_f2d
  44              	.LVL1:
  45              		.loc 1 331 20 view .LVU4
  46 0006 06A3     		adr	r3, .L3
  47 0008 D3E90023 		ldrd	r2, [r3]
  48 000c FFF7FEFF 		bl	__aeabi_dmul
  49              	.LVL2:
  50              		.loc 1 331 27 view .LVU5
  51 0010 0022     		movs	r2, #0
  52 0012 054B     		ldr	r3, .L3+8
  53 0014 FFF7FEFF 		bl	__aeabi_ddiv
  54              	.LVL3:
  55 0018 FFF7FEFF 		bl	__aeabi_d2f
  56              	.LVL4:
 332:Core/Src/ssd1306.c **** }
  57              		.loc 1 332 1 view .LVU6
  58 001c 08BD     		pop	{r3, pc}
  59              	.L4:
  60 001e 00BF     		.align	3
  61              	.L3:
  62 0020 1F85EB51 		.word	1374389535
  63 0024 B81E0940 		.word	1074339512
  64 0028 00806640 		.word	1080459264
  65              		.cfi_endproc
  66              	.LFE85:
  68              		.section	.text.ssd1306_NormalizeTo0_360,"ax",%progbits
  69              		.align	1
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 8


  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	ssd1306_NormalizeTo0_360:
  75              	.LVL5:
  76              	.LFB86:
 333:Core/Src/ssd1306.c **** /*Normalize degree to [0;360]*/
 334:Core/Src/ssd1306.c **** static uint16_t ssd1306_NormalizeTo0_360(uint16_t par_deg) {
  77              		.loc 1 334 60 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
 335:Core/Src/ssd1306.c ****   uint16_t loc_angle;
  82              		.loc 1 335 3 view .LVU8
 336:Core/Src/ssd1306.c ****   if(par_deg <= 360)
  83              		.loc 1 336 3 view .LVU9
  84              		.loc 1 336 5 is_stmt 0 view .LVU10
  85 0000 B0F5B47F 		cmp	r0, #360
  86 0004 00D9     		bls	.L6
 337:Core/Src/ssd1306.c ****   {
 338:Core/Src/ssd1306.c ****     loc_angle = par_deg;
 339:Core/Src/ssd1306.c ****   }
 340:Core/Src/ssd1306.c ****   else
 341:Core/Src/ssd1306.c ****   {
 342:Core/Src/ssd1306.c ****     loc_angle = par_deg % 360;
  87              		.loc 1 342 5 is_stmt 1 view .LVU11
  88              	.LVL6:
 343:Core/Src/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
  89              		.loc 1 343 5 view .LVU12
  90              		.loc 1 343 15 is_stmt 0 view .LVU13
  91 0006 00B1     		cbz	r0, .L8
  92              	.LVL7:
  93              	.L6:
 344:Core/Src/ssd1306.c ****   }
 345:Core/Src/ssd1306.c ****   return loc_angle;
  94              		.loc 1 345 3 is_stmt 1 view .LVU14
 346:Core/Src/ssd1306.c **** }
  95              		.loc 1 346 1 is_stmt 0 view .LVU15
  96 0008 7047     		bx	lr
  97              	.LVL8:
  98              	.L8:
 343:Core/Src/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
  99              		.loc 1 343 15 view .LVU16
 100 000a 4FF4B470 		mov	r0, #360
 101              	.LVL9:
 343:Core/Src/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
 102              		.loc 1 343 15 view .LVU17
 103 000e FBE7     		b	.L6
 104              		.cfi_endproc
 105              	.LFE86:
 107              		.section	.text.ssd1306_Reset,"ax",%progbits
 108              		.align	1
 109              		.global	ssd1306_Reset
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 9


 114              	ssd1306_Reset:
 115              	.LFB72:
   8:Core/Src/ssd1306.c ****     /* for I2C - do nothing */
 116              		.loc 1 8 26 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
  10:Core/Src/ssd1306.c **** 
 121              		.loc 1 10 1 view .LVU19
 122 0000 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE72:
 126              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
 127              		.align	1
 128              		.global	ssd1306_WriteCommand
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	ssd1306_WriteCommand:
 134              	.LVL10:
 135              	.LFB73:
  13:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 136              		.loc 1 13 41 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
  13:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 140              		.loc 1 13 41 is_stmt 0 view .LVU21
 141 0000 00B5     		push	{lr}
 142              	.LCFI1:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 14, -4
 145 0002 87B0     		sub	sp, sp, #28
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 32
 148 0004 8DF81700 		strb	r0, [sp, #23]
  14:Core/Src/ssd1306.c **** }
 149              		.loc 1 14 5 is_stmt 1 view .LVU22
 150 0008 4FF0FF33 		mov	r3, #-1
 151 000c 0293     		str	r3, [sp, #8]
 152 000e 0123     		movs	r3, #1
 153 0010 0193     		str	r3, [sp, #4]
 154 0012 0DF11702 		add	r2, sp, #23
 155 0016 0092     		str	r2, [sp]
 156 0018 0022     		movs	r2, #0
 157 001a 7821     		movs	r1, #120
 158 001c 0248     		ldr	r0, .L12
 159              	.LVL11:
  14:Core/Src/ssd1306.c **** }
 160              		.loc 1 14 5 is_stmt 0 view .LVU23
 161 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 162              	.LVL12:
  15:Core/Src/ssd1306.c **** 
 163              		.loc 1 15 1 view .LVU24
 164 0022 07B0     		add	sp, sp, #28
 165              	.LCFI3:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 10


 166              		.cfi_def_cfa_offset 4
 167              		@ sp needed
 168 0024 5DF804FB 		ldr	pc, [sp], #4
 169              	.L13:
 170              		.align	2
 171              	.L12:
 172 0028 00000000 		.word	hi2c1
 173              		.cfi_endproc
 174              	.LFE73:
 176              		.section	.text.ssd1306_WriteData,"ax",%progbits
 177              		.align	1
 178              		.global	ssd1306_WriteData
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	ssd1306_WriteData:
 184              	.LVL13:
 185              	.LFB74:
  18:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELA
 186              		.loc 1 18 59 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
  18:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELA
 190              		.loc 1 18 59 is_stmt 0 view .LVU26
 191 0000 00B5     		push	{lr}
 192              	.LCFI4:
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 14, -4
 195 0002 85B0     		sub	sp, sp, #20
 196              	.LCFI5:
 197              		.cfi_def_cfa_offset 24
  19:Core/Src/ssd1306.c **** }
 198              		.loc 1 19 5 is_stmt 1 view .LVU27
 199 0004 4FF0FF33 		mov	r3, #-1
 200 0008 0293     		str	r3, [sp, #8]
 201 000a 89B2     		uxth	r1, r1
 202              	.LVL14:
  19:Core/Src/ssd1306.c **** }
 203              		.loc 1 19 5 is_stmt 0 view .LVU28
 204 000c 0191     		str	r1, [sp, #4]
 205 000e 0090     		str	r0, [sp]
 206 0010 0123     		movs	r3, #1
 207 0012 4022     		movs	r2, #64
 208 0014 7821     		movs	r1, #120
 209 0016 0348     		ldr	r0, .L16
 210              	.LVL15:
  19:Core/Src/ssd1306.c **** }
 211              		.loc 1 19 5 view .LVU29
 212 0018 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 213              	.LVL16:
  20:Core/Src/ssd1306.c **** 
 214              		.loc 1 20 1 view .LVU30
 215 001c 05B0     		add	sp, sp, #20
 216              	.LCFI6:
 217              		.cfi_def_cfa_offset 4
 218              		@ sp needed
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 11


 219 001e 5DF804FB 		ldr	pc, [sp], #4
 220              	.L17:
 221 0022 00BF     		.align	2
 222              	.L16:
 223 0024 00000000 		.word	hi2c1
 224              		.cfi_endproc
 225              	.LFE74:
 227              		.section	.text.ssd1306_FillBuffer,"ax",%progbits
 228              		.align	1
 229              		.global	ssd1306_FillBuffer
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	ssd1306_FillBuffer:
 235              	.LVL17:
 236              	.LFB75:
  63:Core/Src/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 237              		.loc 1 63 64 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
  64:Core/Src/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 241              		.loc 1 64 5 view .LVU32
  65:Core/Src/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 242              		.loc 1 65 5 view .LVU33
  65:Core/Src/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 243              		.loc 1 65 8 is_stmt 0 view .LVU34
 244 0000 B1F5846F 		cmp	r1, #1056
 245 0004 01D9     		bls	.L25
  64:Core/Src/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 246              		.loc 1 64 21 view .LVU35
 247 0006 0120     		movs	r0, #1
 248              	.LVL18:
  69:Core/Src/ssd1306.c **** }
 249              		.loc 1 69 5 is_stmt 1 view .LVU36
  70:Core/Src/ssd1306.c **** 
 250              		.loc 1 70 1 is_stmt 0 view .LVU37
 251 0008 7047     		bx	lr
 252              	.LVL19:
 253              	.L25:
  63:Core/Src/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 254              		.loc 1 63 64 view .LVU38
 255 000a 08B5     		push	{r3, lr}
 256              	.LCFI7:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
  66:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
 260              		.loc 1 66 9 is_stmt 1 view .LVU39
 261 000c 0A46     		mov	r2, r1
 262 000e 0146     		mov	r1, r0
 263              	.LVL20:
  66:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
 264              		.loc 1 66 9 is_stmt 0 view .LVU40
 265 0010 0248     		ldr	r0, .L26
 266              	.LVL21:
  66:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 12


 267              		.loc 1 66 9 view .LVU41
 268 0012 FFF7FEFF 		bl	memcpy
 269              	.LVL22:
  67:Core/Src/ssd1306.c ****     }
 270              		.loc 1 67 9 is_stmt 1 view .LVU42
  67:Core/Src/ssd1306.c ****     }
 271              		.loc 1 67 13 is_stmt 0 view .LVU43
 272 0016 0020     		movs	r0, #0
 273              	.LVL23:
  69:Core/Src/ssd1306.c **** }
 274              		.loc 1 69 5 is_stmt 1 view .LVU44
  70:Core/Src/ssd1306.c **** 
 275              		.loc 1 70 1 is_stmt 0 view .LVU45
 276 0018 08BD     		pop	{r3, pc}
 277              	.L27:
 278 001a 00BF     		.align	2
 279              	.L26:
 280 001c 00000000 		.word	.LANCHOR0
 281              		.cfi_endproc
 282              	.LFE75:
 284              		.section	.text.ssd1306_Fill,"ax",%progbits
 285              		.align	1
 286              		.global	ssd1306_Fill
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	ssd1306_Fill:
 292              	.LVL24:
 293              	.LFB77:
 175:Core/Src/ssd1306.c ****     /* Set memory */
 294              		.loc 1 175 40 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 177:Core/Src/ssd1306.c **** 
 299              		.loc 1 177 5 view .LVU47
 179:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 300              		.loc 1 179 5 view .LVU48
 179:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 301              		.loc 1 179 11 is_stmt 0 view .LVU49
 302 0000 0023     		movs	r3, #0
 179:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 303              		.loc 1 179 5 view .LVU50
 304 0002 03E0     		b	.L29
 305              	.LVL25:
 306              	.L32:
 180:Core/Src/ssd1306.c ****     }
 307              		.loc 1 180 27 view .LVU51
 308 0004 FF21     		movs	r1, #255
 309              	.L30:
 180:Core/Src/ssd1306.c ****     }
 310              		.loc 1 180 27 discriminator 4 view .LVU52
 311 0006 054A     		ldr	r2, .L34
 312 0008 D154     		strb	r1, [r2, r3]
 179:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 313              		.loc 1 179 44 is_stmt 1 discriminator 4 view .LVU53
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 13


 179:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 314              		.loc 1 179 45 is_stmt 0 discriminator 4 view .LVU54
 315 000a 0133     		adds	r3, r3, #1
 316              	.LVL26:
 317              	.L29:
 179:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 318              		.loc 1 179 16 is_stmt 1 discriminator 2 view .LVU55
 179:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 319              		.loc 1 179 5 is_stmt 0 discriminator 2 view .LVU56
 320 000c B3F5846F 		cmp	r3, #1056
 321 0010 03D2     		bcs	.L33
 180:Core/Src/ssd1306.c ****     }
 322              		.loc 1 180 9 is_stmt 1 view .LVU57
 180:Core/Src/ssd1306.c ****     }
 323              		.loc 1 180 27 is_stmt 0 view .LVU58
 324 0012 0028     		cmp	r0, #0
 325 0014 F6D1     		bne	.L32
 326 0016 0146     		mov	r1, r0
 327 0018 F5E7     		b	.L30
 328              	.L33:
 182:Core/Src/ssd1306.c **** 
 329              		.loc 1 182 1 view .LVU59
 330 001a 7047     		bx	lr
 331              	.L35:
 332              		.align	2
 333              	.L34:
 334 001c 00000000 		.word	.LANCHOR0
 335              		.cfi_endproc
 336              	.LFE77:
 338              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 339              		.align	1
 340              		.global	ssd1306_UpdateScreen
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	ssd1306_UpdateScreen:
 346              	.LFB78:
 185:Core/Src/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 347              		.loc 1 185 33 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 10B5     		push	{r4, lr}
 352              	.LCFI8:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 356              		.loc 1 192 5 view .LVU61
 357              	.LBB2:
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 358              		.loc 1 192 9 view .LVU62
 359              	.LVL27:
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 360              		.loc 1 192 17 is_stmt 0 view .LVU63
 361 0002 0024     		movs	r4, #0
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 14


 362              		.loc 1 192 5 view .LVU64
 363 0004 14E0     		b	.L37
 364              	.LVL28:
 365              	.L38:
 193:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0x00);
 366              		.loc 1 193 9 is_stmt 1 discriminator 3 view .LVU65
 367 0006 A4F15000 		sub	r0, r4, #80
 368 000a C0B2     		uxtb	r0, r0
 369 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 370              	.LVL29:
 194:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0x10);
 371              		.loc 1 194 9 discriminator 3 view .LVU66
 372 0010 0020     		movs	r0, #0
 373 0012 FFF7FEFF 		bl	ssd1306_WriteCommand
 374              	.LVL30:
 195:Core/Src/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 375              		.loc 1 195 9 discriminator 3 view .LVU67
 376 0016 1020     		movs	r0, #16
 377 0018 FFF7FEFF 		bl	ssd1306_WriteCommand
 378              	.LVL31:
 196:Core/Src/ssd1306.c ****     }
 379              		.loc 1 196 9 discriminator 3 view .LVU68
 196:Core/Src/ssd1306.c ****     }
 380              		.loc 1 196 56 is_stmt 0 discriminator 3 view .LVU69
 381 001c 04EB4412 		add	r2, r4, r4, lsl #5
 382 0020 9300     		lsls	r3, r2, #2
 196:Core/Src/ssd1306.c ****     }
 383              		.loc 1 196 9 discriminator 3 view .LVU70
 384 0022 8421     		movs	r1, #132
 385 0024 0448     		ldr	r0, .L40
 386 0026 1844     		add	r0, r0, r3
 387 0028 FFF7FEFF 		bl	ssd1306_WriteData
 388              	.LVL32:
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 389              		.loc 1 192 46 is_stmt 1 discriminator 3 view .LVU71
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 390              		.loc 1 192 47 is_stmt 0 discriminator 3 view .LVU72
 391 002c 0134     		adds	r4, r4, #1
 392              	.LVL33:
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 393              		.loc 1 192 47 discriminator 3 view .LVU73
 394 002e E4B2     		uxtb	r4, r4
 395              	.LVL34:
 396              	.L37:
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 397              		.loc 1 192 24 is_stmt 1 discriminator 1 view .LVU74
 192:Core/Src/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 398              		.loc 1 192 5 is_stmt 0 discriminator 1 view .LVU75
 399 0030 072C     		cmp	r4, #7
 400 0032 E8D9     		bls	.L38
 401              	.LBE2:
 198:Core/Src/ssd1306.c **** 
 402              		.loc 1 198 1 view .LVU76
 403 0034 10BD     		pop	{r4, pc}
 404              	.LVL35:
 405              	.L41:
 198:Core/Src/ssd1306.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 15


 406              		.loc 1 198 1 view .LVU77
 407 0036 00BF     		.align	2
 408              	.L40:
 409 0038 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE78:
 413              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 414              		.align	1
 415              		.global	ssd1306_DrawPixel
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	ssd1306_DrawPixel:
 421              	.LVL36:
 422              	.LFB79:
 204:Core/Src/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 423              		.loc 1 204 67 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 205:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 428              		.loc 1 205 5 view .LVU79
 205:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 429              		.loc 1 205 7 is_stmt 0 view .LVU80
 430 0000 8328     		cmp	r0, #131
 431 0002 11D8     		bhi	.L42
 205:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 432              		.loc 1 205 27 discriminator 1 view .LVU81
 433 0004 3F29     		cmp	r1, #63
 434 0006 0FD8     		bhi	.L42
 211:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 435              		.loc 1 211 5 is_stmt 1 view .LVU82
 211:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 436              		.loc 1 211 7 is_stmt 0 view .LVU83
 437 0008 012A     		cmp	r2, #1
 438 000a 0ED0     		beq	.L45
 214:Core/Src/ssd1306.c ****     }
 439              		.loc 1 214 9 is_stmt 1 view .LVU84
 214:Core/Src/ssd1306.c ****     }
 440              		.loc 1 214 53 is_stmt 0 view .LVU85
 441 000c CB08     		lsrs	r3, r1, #3
 442 000e 03EB4313 		add	r3, r3, r3, lsl #5
 443 0012 00EB8300 		add	r0, r0, r3, lsl #2
 444              	.LVL37:
 214:Core/Src/ssd1306.c ****     }
 445              		.loc 1 214 66 view .LVU86
 446 0016 01F00701 		and	r1, r1, #7
 447              	.LVL38:
 214:Core/Src/ssd1306.c ****     }
 448              		.loc 1 214 60 view .LVU87
 449 001a 0123     		movs	r3, #1
 450 001c 8B40     		lsls	r3, r3, r1
 214:Core/Src/ssd1306.c ****     }
 451              		.loc 1 214 53 view .LVU88
 452 001e 0A4A     		ldr	r2, .L46
 453              	.LVL39:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 16


 214:Core/Src/ssd1306.c ****     }
 454              		.loc 1 214 53 view .LVU89
 455 0020 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 456 0022 21EA0301 		bic	r1, r1, r3
 457 0026 1154     		strb	r1, [r2, r0]
 458              	.L42:
 216:Core/Src/ssd1306.c **** 
 459              		.loc 1 216 1 view .LVU90
 460 0028 7047     		bx	lr
 461              	.LVL40:
 462              	.L45:
 212:Core/Src/ssd1306.c ****     } else { 
 463              		.loc 1 212 9 is_stmt 1 view .LVU91
 212:Core/Src/ssd1306.c ****     } else { 
 464              		.loc 1 212 53 is_stmt 0 view .LVU92
 465 002a CB08     		lsrs	r3, r1, #3
 466 002c 03EB4313 		add	r3, r3, r3, lsl #5
 467 0030 00EB8300 		add	r0, r0, r3, lsl #2
 468              	.LVL41:
 212:Core/Src/ssd1306.c ****     } else { 
 469              		.loc 1 212 64 view .LVU93
 470 0034 01F00701 		and	r1, r1, #7
 471              	.LVL42:
 212:Core/Src/ssd1306.c ****     } else { 
 472              		.loc 1 212 58 view .LVU94
 473 0038 0123     		movs	r3, #1
 474 003a 8B40     		lsls	r3, r3, r1
 212:Core/Src/ssd1306.c ****     } else { 
 475              		.loc 1 212 53 view .LVU95
 476 003c 024A     		ldr	r2, .L46
 477              	.LVL43:
 212:Core/Src/ssd1306.c ****     } else { 
 478              		.loc 1 212 53 view .LVU96
 479 003e 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 480 0040 1943     		orrs	r1, r1, r3
 481 0042 1154     		strb	r1, [r2, r0]
 482 0044 7047     		bx	lr
 483              	.L47:
 484 0046 00BF     		.align	2
 485              	.L46:
 486 0048 00000000 		.word	.LANCHOR0
 487              		.cfi_endproc
 488              	.LFE79:
 490              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 491              		.align	1
 492              		.global	ssd1306_WriteChar
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	ssd1306_WriteChar:
 498              	.LVL44:
 499              	.LFB80:
 222:Core/Src/ssd1306.c ****     uint32_t i, b, j;
 500              		.loc 1 222 68 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 8
 503              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 17


 222:Core/Src/ssd1306.c ****     uint32_t i, b, j;
 504              		.loc 1 222 68 is_stmt 0 view .LVU98
 505 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 506              	.LCFI9:
 507              		.cfi_def_cfa_offset 32
 508              		.cfi_offset 4, -32
 509              		.cfi_offset 5, -28
 510              		.cfi_offset 6, -24
 511              		.cfi_offset 7, -20
 512              		.cfi_offset 8, -16
 513              		.cfi_offset 9, -12
 514              		.cfi_offset 10, -8
 515              		.cfi_offset 14, -4
 516 0004 82B0     		sub	sp, sp, #8
 517              	.LCFI10:
 518              		.cfi_def_cfa_offset 40
 519 0006 8146     		mov	r9, r0
 520 0008 02A8     		add	r0, sp, #8
 521              	.LVL45:
 222:Core/Src/ssd1306.c ****     uint32_t i, b, j;
 522              		.loc 1 222 68 view .LVU99
 523 000a 00E90600 		stmdb	r0, {r1, r2}
 524 000e 1F46     		mov	r7, r3
 223:Core/Src/ssd1306.c ****     
 525              		.loc 1 223 5 is_stmt 1 view .LVU100
 226:Core/Src/ssd1306.c ****         return 0;
 526              		.loc 1 226 5 view .LVU101
 226:Core/Src/ssd1306.c ****         return 0;
 527              		.loc 1 226 17 is_stmt 0 view .LVU102
 528 0010 A9F12003 		sub	r3, r9, #32
 529              	.LVL46:
 226:Core/Src/ssd1306.c ****         return 0;
 530              		.loc 1 226 17 view .LVU103
 531 0014 DBB2     		uxtb	r3, r3
 226:Core/Src/ssd1306.c ****         return 0;
 532              		.loc 1 226 8 view .LVU104
 533 0016 5E2B     		cmp	r3, #94
 534 0018 40D8     		bhi	.L56
 230:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 535              		.loc 1 230 5 is_stmt 1 view .LVU105
 230:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 536              		.loc 1 230 33 is_stmt 0 view .LVU106
 537 001a 244B     		ldr	r3, .L62
 538 001c 1B88     		ldrh	r3, [r3]
 230:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 539              		.loc 1 230 49 view .LVU107
 540 001e 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
 230:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 541              		.loc 1 230 43 view .LVU108
 542 0022 3344     		add	r3, r3, r6
 230:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 543              		.loc 1 230 8 view .LVU109
 544 0024 842B     		cmp	r3, #132
 545 0026 3DDC     		bgt	.L57
 231:Core/Src/ssd1306.c ****     {
 546              		.loc 1 231 34 discriminator 1 view .LVU110
 547 0028 204B     		ldr	r3, .L62
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 18


 548 002a 5B88     		ldrh	r3, [r3, #2]
 231:Core/Src/ssd1306.c ****     {
 549              		.loc 1 231 50 discriminator 1 view .LVU111
 550 002c 9DF801A0 		ldrb	r10, [sp, #1]	@ zero_extendqisi2
 231:Core/Src/ssd1306.c ****     {
 551              		.loc 1 231 44 discriminator 1 view .LVU112
 552 0030 5344     		add	r3, r3, r10
 230:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 553              		.loc 1 230 61 discriminator 1 view .LVU113
 554 0032 402B     		cmp	r3, #64
 555 0034 38DC     		bgt	.L58
 238:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 556              		.loc 1 238 11 view .LVU114
 557 0036 0025     		movs	r5, #0
 558 0038 1FE0     		b	.L50
 559              	.LVL47:
 560              	.L52:
 244:Core/Src/ssd1306.c ****             }
 561              		.loc 1 244 17 is_stmt 1 view .LVU115
 244:Core/Src/ssd1306.c ****             }
 562              		.loc 1 244 42 is_stmt 0 view .LVU116
 563 003a 1C4B     		ldr	r3, .L62
 564 003c 1888     		ldrh	r0, [r3]
 244:Core/Src/ssd1306.c ****             }
 565              		.loc 1 244 65 view .LVU117
 566 003e 5988     		ldrh	r1, [r3, #2]
 244:Core/Src/ssd1306.c ****             }
 567              		.loc 1 244 17 view .LVU118
 568 0040 2944     		add	r1, r1, r5
 569 0042 2044     		add	r0, r0, r4
 570 0044 B7FA87F2 		clz	r2, r7
 571 0048 5209     		lsrs	r2, r2, #5
 572 004a C9B2     		uxtb	r1, r1
 573 004c C0B2     		uxtb	r0, r0
 574 004e FFF7FEFF 		bl	ssd1306_DrawPixel
 575              	.LVL48:
 576              	.L53:
 240:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 577              		.loc 1 240 40 is_stmt 1 discriminator 2 view .LVU119
 240:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 578              		.loc 1 240 41 is_stmt 0 discriminator 2 view .LVU120
 579 0052 0134     		adds	r4, r4, #1
 580              	.LVL49:
 581              	.L51:
 240:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 582              		.loc 1 240 20 is_stmt 1 discriminator 1 view .LVU121
 240:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 583              		.loc 1 240 9 is_stmt 0 discriminator 1 view .LVU122
 584 0054 A642     		cmp	r6, r4
 585 0056 0FD9     		bls	.L60
 241:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 586              		.loc 1 241 13 is_stmt 1 view .LVU123
 241:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 587              		.loc 1 241 19 is_stmt 0 view .LVU124
 588 0058 08FA04F3 		lsl	r3, r8, r4
 241:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 589              		.loc 1 241 15 view .LVU125
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 19


 590 005c 13F4004F 		tst	r3, #32768
 591 0060 EBD0     		beq	.L52
 242:Core/Src/ssd1306.c ****             } else {
 592              		.loc 1 242 17 is_stmt 1 view .LVU126
 242:Core/Src/ssd1306.c ****             } else {
 593              		.loc 1 242 42 is_stmt 0 view .LVU127
 594 0062 124B     		ldr	r3, .L62
 595 0064 1888     		ldrh	r0, [r3]
 242:Core/Src/ssd1306.c ****             } else {
 596              		.loc 1 242 65 view .LVU128
 597 0066 5988     		ldrh	r1, [r3, #2]
 242:Core/Src/ssd1306.c ****             } else {
 598              		.loc 1 242 17 view .LVU129
 599 0068 2944     		add	r1, r1, r5
 600 006a 2044     		add	r0, r0, r4
 601 006c 3A46     		mov	r2, r7
 602 006e C9B2     		uxtb	r1, r1
 603 0070 C0B2     		uxtb	r0, r0
 604 0072 FFF7FEFF 		bl	ssd1306_DrawPixel
 605              	.LVL50:
 606 0076 ECE7     		b	.L53
 607              	.L60:
 238:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 608              		.loc 1 238 37 is_stmt 1 discriminator 2 view .LVU130
 238:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 609              		.loc 1 238 38 is_stmt 0 discriminator 2 view .LVU131
 610 0078 0135     		adds	r5, r5, #1
 611              	.LVL51:
 612              	.L50:
 238:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 613              		.loc 1 238 16 is_stmt 1 discriminator 1 view .LVU132
 238:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 614              		.loc 1 238 5 is_stmt 0 discriminator 1 view .LVU133
 615 007a AA45     		cmp	r10, r5
 616 007c 08D9     		bls	.L61
 239:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 617              		.loc 1 239 9 is_stmt 1 view .LVU134
 239:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 618              		.loc 1 239 27 is_stmt 0 view .LVU135
 619 007e A9F12003 		sub	r3, r9, #32
 239:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 620              		.loc 1 239 51 view .LVU136
 621 0082 03FB0A53 		mla	r3, r3, r10, r5
 239:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 622              		.loc 1 239 22 view .LVU137
 623 0086 019A     		ldr	r2, [sp, #4]
 624 0088 32F81380 		ldrh	r8, [r2, r3, lsl #1]
 625              	.LVL52:
 240:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 626              		.loc 1 240 9 is_stmt 1 view .LVU138
 240:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 627              		.loc 1 240 15 is_stmt 0 view .LVU139
 628 008c 0024     		movs	r4, #0
 240:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 629              		.loc 1 240 9 view .LVU140
 630 008e E1E7     		b	.L51
 631              	.LVL53:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 20


 632              	.L61:
 250:Core/Src/ssd1306.c ****     
 633              		.loc 1 250 5 is_stmt 1 view .LVU141
 250:Core/Src/ssd1306.c ****     
 634              		.loc 1 250 22 is_stmt 0 view .LVU142
 635 0090 064B     		ldr	r3, .L62
 636 0092 1A88     		ldrh	r2, [r3]
 637 0094 1644     		add	r6, r6, r2
 638 0096 1E80     		strh	r6, [r3]	@ movhi
 253:Core/Src/ssd1306.c **** }
 639              		.loc 1 253 5 is_stmt 1 view .LVU143
 253:Core/Src/ssd1306.c **** }
 640              		.loc 1 253 12 is_stmt 0 view .LVU144
 641 0098 4846     		mov	r0, r9
 642 009a 00E0     		b	.L49
 643              	.LVL54:
 644              	.L56:
 227:Core/Src/ssd1306.c ****     
 645              		.loc 1 227 16 view .LVU145
 646 009c 0020     		movs	r0, #0
 647              	.L49:
 254:Core/Src/ssd1306.c **** 
 648              		.loc 1 254 1 view .LVU146
 649 009e 02B0     		add	sp, sp, #8
 650              	.LCFI11:
 651              		.cfi_remember_state
 652              		.cfi_def_cfa_offset 32
 653              		@ sp needed
 654 00a0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 655              	.L57:
 656              	.LCFI12:
 657              		.cfi_restore_state
 234:Core/Src/ssd1306.c ****     }
 658              		.loc 1 234 16 view .LVU147
 659 00a4 0020     		movs	r0, #0
 660 00a6 FAE7     		b	.L49
 661              	.L58:
 662 00a8 0020     		movs	r0, #0
 663 00aa F8E7     		b	.L49
 664              	.L63:
 665              		.align	2
 666              	.L62:
 667 00ac 00000000 		.word	.LANCHOR1
 668              		.cfi_endproc
 669              	.LFE80:
 671              		.section	.text.ssd1306_WriteString,"ax",%progbits
 672              		.align	1
 673              		.global	ssd1306_WriteString
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 678              	ssd1306_WriteString:
 679              	.LVL55:
 680              	.LFB81:
 257:Core/Src/ssd1306.c ****     // Write until null-byte
 681              		.loc 1 257 72 is_stmt 1 view -0
 682              		.cfi_startproc
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 21


 683              		@ args = 0, pretend = 0, frame = 8
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 257:Core/Src/ssd1306.c ****     // Write until null-byte
 685              		.loc 1 257 72 is_stmt 0 view .LVU149
 686 0000 30B5     		push	{r4, r5, lr}
 687              	.LCFI13:
 688              		.cfi_def_cfa_offset 12
 689              		.cfi_offset 4, -12
 690              		.cfi_offset 5, -8
 691              		.cfi_offset 14, -4
 692 0002 83B0     		sub	sp, sp, #12
 693              	.LCFI14:
 694              		.cfi_def_cfa_offset 24
 695 0004 0446     		mov	r4, r0
 696 0006 02A8     		add	r0, sp, #8
 697              	.LVL56:
 257:Core/Src/ssd1306.c ****     // Write until null-byte
 698              		.loc 1 257 72 view .LVU150
 699 0008 00E90600 		stmdb	r0, {r1, r2}
 700 000c 1D46     		mov	r5, r3
 259:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 701              		.loc 1 259 5 is_stmt 1 view .LVU151
 259:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 702              		.loc 1 259 11 is_stmt 0 view .LVU152
 703 000e 00E0     		b	.L65
 704              	.LVL57:
 705              	.L69:
 266:Core/Src/ssd1306.c ****     }
 706              		.loc 1 266 9 is_stmt 1 view .LVU153
 266:Core/Src/ssd1306.c ****     }
 707              		.loc 1 266 12 is_stmt 0 view .LVU154
 708 0010 0134     		adds	r4, r4, #1
 709              	.LVL58:
 710              	.L65:
 259:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 711              		.loc 1 259 11 is_stmt 1 view .LVU155
 259:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 712              		.loc 1 259 12 is_stmt 0 view .LVU156
 713 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 259:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 714              		.loc 1 259 11 view .LVU157
 715 0014 48B1     		cbz	r0, .L66
 260:Core/Src/ssd1306.c ****             // Char could not be written
 716              		.loc 1 260 9 is_stmt 1 view .LVU158
 260:Core/Src/ssd1306.c ****             // Char could not be written
 717              		.loc 1 260 13 is_stmt 0 view .LVU159
 718 0016 2B46     		mov	r3, r5
 719 0018 02AA     		add	r2, sp, #8
 720 001a 12E90600 		ldmdb	r2, {r1, r2}
 721 001e FFF7FEFF 		bl	ssd1306_WriteChar
 722              	.LVL59:
 723 0022 0246     		mov	r2, r0
 260:Core/Src/ssd1306.c ****             // Char could not be written
 724              		.loc 1 260 53 view .LVU160
 725 0024 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 260:Core/Src/ssd1306.c ****             // Char could not be written
 726              		.loc 1 260 12 view .LVU161
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 22


 727 0026 8242     		cmp	r2, r0
 728 0028 F2D0     		beq	.L69
 729              	.L66:
 271:Core/Src/ssd1306.c **** 
 730              		.loc 1 271 1 view .LVU162
 731 002a 03B0     		add	sp, sp, #12
 732              	.LCFI15:
 733              		.cfi_def_cfa_offset 12
 734              		@ sp needed
 735 002c 30BD     		pop	{r4, r5, pc}
 271:Core/Src/ssd1306.c **** 
 736              		.loc 1 271 1 view .LVU163
 737              		.cfi_endproc
 738              	.LFE81:
 740              		.section	.text.ssd1306_SetCursor,"ax",%progbits
 741              		.align	1
 742              		.global	ssd1306_SetCursor
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 747              	ssd1306_SetCursor:
 748              	.LVL60:
 749              	.LFB82:
 274:Core/Src/ssd1306.c ****     SSD1306.CurrentX = x;
 750              		.loc 1 274 46 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              		@ link register save eliminated.
 275:Core/Src/ssd1306.c ****     SSD1306.CurrentY = y;
 755              		.loc 1 275 5 view .LVU165
 275:Core/Src/ssd1306.c ****     SSD1306.CurrentY = y;
 756              		.loc 1 275 22 is_stmt 0 view .LVU166
 757 0000 014B     		ldr	r3, .L71
 758 0002 1880     		strh	r0, [r3]	@ movhi
 276:Core/Src/ssd1306.c **** }
 759              		.loc 1 276 5 is_stmt 1 view .LVU167
 276:Core/Src/ssd1306.c **** }
 760              		.loc 1 276 22 is_stmt 0 view .LVU168
 761 0004 5980     		strh	r1, [r3, #2]	@ movhi
 277:Core/Src/ssd1306.c **** 
 762              		.loc 1 277 1 view .LVU169
 763 0006 7047     		bx	lr
 764              	.L72:
 765              		.align	2
 766              	.L71:
 767 0008 00000000 		.word	.LANCHOR1
 768              		.cfi_endproc
 769              	.LFE82:
 771              		.section	.text.ssd1306_Line,"ax",%progbits
 772              		.align	1
 773              		.global	ssd1306_Line
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 778              	ssd1306_Line:
 779              	.LVL61:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 23


 780              	.LFB83:
 280:Core/Src/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 781              		.loc 1 280 88 is_stmt 1 view -0
 782              		.cfi_startproc
 783              		@ args = 4, pretend = 0, frame = 8
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 280:Core/Src/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 785              		.loc 1 280 88 is_stmt 0 view .LVU171
 786 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 787              	.LCFI16:
 788              		.cfi_def_cfa_offset 36
 789              		.cfi_offset 4, -36
 790              		.cfi_offset 5, -32
 791              		.cfi_offset 6, -28
 792              		.cfi_offset 7, -24
 793              		.cfi_offset 8, -20
 794              		.cfi_offset 9, -16
 795              		.cfi_offset 10, -12
 796              		.cfi_offset 11, -8
 797              		.cfi_offset 14, -4
 798 0004 83B0     		sub	sp, sp, #12
 799              	.LCFI17:
 800              		.cfi_def_cfa_offset 48
 801 0006 0446     		mov	r4, r0
 802 0008 0E46     		mov	r6, r1
 803 000a 9146     		mov	r9, r2
 804 000c 9B46     		mov	fp, r3
 805 000e 9DF830A0 		ldrb	r10, [sp, #48]	@ zero_extendqisi2
 281:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 806              		.loc 1 281 3 is_stmt 1 view .LVU172
 281:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 807              		.loc 1 281 27 is_stmt 0 view .LVU173
 808 0012 A2EB0008 		sub	r8, r2, r0
 281:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 809              		.loc 1 281 11 view .LVU174
 810 0016 B8F1000F 		cmp	r8, #0
 811 001a B8BF     		it	lt
 812 001c C8F10008 		rsblt	r8, r8, #0
 813              	.LVL62:
 282:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 814              		.loc 1 282 3 is_stmt 1 view .LVU175
 282:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 815              		.loc 1 282 27 is_stmt 0 view .LVU176
 816 0020 5F1A     		subs	r7, r3, r1
 282:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 817              		.loc 1 282 11 view .LVU177
 818 0022 002F     		cmp	r7, #0
 819 0024 B8BF     		it	lt
 820 0026 7F42     		rsblt	r7, r7, #0
 821              	.LVL63:
 283:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 822              		.loc 1 283 3 is_stmt 1 view .LVU178
 283:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 823              		.loc 1 283 34 is_stmt 0 view .LVU179
 824 0028 8242     		cmp	r2, r0
 825 002a 0DD9     		bls	.L80
 826 002c 0123     		movs	r3, #1
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 24


 827              	.LVL64:
 283:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 828              		.loc 1 283 34 view .LVU180
 829 002e 0093     		str	r3, [sp]
 830              	.L74:
 831              	.LVL65:
 284:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 832              		.loc 1 284 3 is_stmt 1 discriminator 4 view .LVU181
 284:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 833              		.loc 1 284 34 is_stmt 0 discriminator 4 view .LVU182
 834 0030 B345     		cmp	fp, r6
 835 0032 0DD9     		bls	.L81
 284:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 836              		.loc 1 284 34 view .LVU183
 837 0034 0123     		movs	r3, #1
 838 0036 0193     		str	r3, [sp, #4]
 839              	.L75:
 840              	.LVL66:
 285:Core/Src/ssd1306.c ****   int32_t error2;
 841              		.loc 1 285 3 is_stmt 1 discriminator 4 view .LVU184
 285:Core/Src/ssd1306.c ****   int32_t error2;
 842              		.loc 1 285 11 is_stmt 0 discriminator 4 view .LVU185
 843 0038 A8EB0705 		sub	r5, r8, r7
 844              	.LVL67:
 286:Core/Src/ssd1306.c ****     
 845              		.loc 1 286 3 is_stmt 1 discriminator 4 view .LVU186
 288:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 846              		.loc 1 288 3 discriminator 4 view .LVU187
 847 003c 5246     		mov	r2, r10
 848              	.LVL68:
 288:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 849              		.loc 1 288 3 is_stmt 0 discriminator 4 view .LVU188
 850 003e 5946     		mov	r1, fp
 851              	.LVL69:
 288:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 852              		.loc 1 288 3 discriminator 4 view .LVU189
 853 0040 4846     		mov	r0, r9
 854              	.LVL70:
 288:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 855              		.loc 1 288 3 discriminator 4 view .LVU190
 856 0042 FFF7FEFF 		bl	ssd1306_DrawPixel
 857              	.LVL71:
 289:Core/Src/ssd1306.c ****     {
 858              		.loc 1 289 5 is_stmt 1 discriminator 4 view .LVU191
 289:Core/Src/ssd1306.c ****     {
 859              		.loc 1 289 10 is_stmt 0 discriminator 4 view .LVU192
 860 0046 1BE0     		b	.L76
 861              	.LVL72:
 862              	.L80:
 283:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 863              		.loc 1 283 34 view .LVU193
 864 0048 4FF0FF33 		mov	r3, #-1
 865              	.LVL73:
 283:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 866              		.loc 1 283 34 view .LVU194
 867 004c 0093     		str	r3, [sp]
 868 004e EFE7     		b	.L74
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 25


 869              	.LVL74:
 870              	.L81:
 284:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 871              		.loc 1 284 34 view .LVU195
 872 0050 4FF0FF33 		mov	r3, #-1
 873 0054 0193     		str	r3, [sp, #4]
 874 0056 EFE7     		b	.L75
 875              	.LVL75:
 876              	.L79:
 291:Core/Src/ssd1306.c ****     error2 = error * 2;
 877              		.loc 1 291 5 is_stmt 1 view .LVU196
 878 0058 5246     		mov	r2, r10
 879 005a 3146     		mov	r1, r6
 880 005c 2046     		mov	r0, r4
 881 005e FFF7FEFF 		bl	ssd1306_DrawPixel
 882              	.LVL76:
 292:Core/Src/ssd1306.c ****     if(error2 > -deltaY)
 883              		.loc 1 292 5 view .LVU197
 292:Core/Src/ssd1306.c ****     if(error2 > -deltaY)
 884              		.loc 1 292 12 is_stmt 0 view .LVU198
 885 0062 6B00     		lsls	r3, r5, #1
 886              	.LVL77:
 293:Core/Src/ssd1306.c ****     {
 887              		.loc 1 293 5 is_stmt 1 view .LVU199
 293:Core/Src/ssd1306.c ****     {
 888              		.loc 1 293 17 is_stmt 0 view .LVU200
 889 0064 7A42     		rsbs	r2, r7, #0
 293:Core/Src/ssd1306.c ****     {
 890              		.loc 1 293 7 view .LVU201
 891 0066 B2EB450F 		cmp	r2, r5, lsl #1
 892 006a 03DA     		bge	.L77
 295:Core/Src/ssd1306.c ****       x1 += signX;
 893              		.loc 1 295 7 is_stmt 1 view .LVU202
 295:Core/Src/ssd1306.c ****       x1 += signX;
 894              		.loc 1 295 13 is_stmt 0 view .LVU203
 895 006c ED1B     		subs	r5, r5, r7
 896              	.LVL78:
 296:Core/Src/ssd1306.c ****     }
 897              		.loc 1 296 7 is_stmt 1 view .LVU204
 296:Core/Src/ssd1306.c ****     }
 898              		.loc 1 296 10 is_stmt 0 view .LVU205
 899 006e 009A     		ldr	r2, [sp]
 900 0070 1444     		add	r4, r4, r2
 901              	.LVL79:
 296:Core/Src/ssd1306.c ****     }
 902              		.loc 1 296 10 view .LVU206
 903 0072 E4B2     		uxtb	r4, r4
 904              	.LVL80:
 905              	.L77:
 301:Core/Src/ssd1306.c ****         
 906              		.loc 1 301 5 is_stmt 1 view .LVU207
 303:Core/Src/ssd1306.c ****     {
 907              		.loc 1 303 5 view .LVU208
 303:Core/Src/ssd1306.c ****     {
 908              		.loc 1 303 7 is_stmt 0 view .LVU209
 909 0074 9845     		cmp	r8, r3
 910 0076 03DD     		ble	.L76
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 26


 305:Core/Src/ssd1306.c ****       y1 += signY;
 911              		.loc 1 305 7 is_stmt 1 view .LVU210
 305:Core/Src/ssd1306.c ****       y1 += signY;
 912              		.loc 1 305 13 is_stmt 0 view .LVU211
 913 0078 4544     		add	r5, r5, r8
 914              	.LVL81:
 306:Core/Src/ssd1306.c ****     }
 915              		.loc 1 306 7 is_stmt 1 view .LVU212
 306:Core/Src/ssd1306.c ****     }
 916              		.loc 1 306 10 is_stmt 0 view .LVU213
 917 007a 019B     		ldr	r3, [sp, #4]
 918              	.LVL82:
 306:Core/Src/ssd1306.c ****     }
 919              		.loc 1 306 10 view .LVU214
 920 007c 1E44     		add	r6, r6, r3
 921              	.LVL83:
 306:Core/Src/ssd1306.c ****     }
 922              		.loc 1 306 10 view .LVU215
 923 007e F6B2     		uxtb	r6, r6
 924              	.LVL84:
 925              	.L76:
 311:Core/Src/ssd1306.c ****   }
 926              		.loc 1 311 5 is_stmt 1 view .LVU216
 289:Core/Src/ssd1306.c ****     {
 927              		.loc 1 289 10 view .LVU217
 928 0080 4C45     		cmp	r4, r9
 929 0082 E9D1     		bne	.L79
 289:Core/Src/ssd1306.c ****     {
 930              		.loc 1 289 22 is_stmt 0 discriminator 1 view .LVU218
 931 0084 5E45     		cmp	r6, fp
 932 0086 E7D1     		bne	.L79
 314:Core/Src/ssd1306.c **** //Draw polyline
 933              		.loc 1 314 1 view .LVU219
 934 0088 03B0     		add	sp, sp, #12
 935              	.LCFI18:
 936              		.cfi_def_cfa_offset 36
 937              	.LVL85:
 314:Core/Src/ssd1306.c **** //Draw polyline
 938              		.loc 1 314 1 view .LVU220
 939              		@ sp needed
 940 008a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 314:Core/Src/ssd1306.c **** //Draw polyline
 941              		.loc 1 314 1 view .LVU221
 942              		.cfi_endproc
 943              	.LFE83:
 945              		.section	.text.ssd1306_Polyline,"ax",%progbits
 946              		.align	1
 947              		.global	ssd1306_Polyline
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 952              	ssd1306_Polyline:
 953              	.LVL86:
 954              	.LFB84:
 316:Core/Src/ssd1306.c ****   uint16_t i;
 955              		.loc 1 316 97 is_stmt 1 view -0
 956              		.cfi_startproc
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 27


 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 317:Core/Src/ssd1306.c ****   if(par_vertex != 0){
 959              		.loc 1 317 3 view .LVU223
 318:Core/Src/ssd1306.c ****     for(i = 1; i < par_size; i++){
 960              		.loc 1 318 3 view .LVU224
 318:Core/Src/ssd1306.c ****     for(i = 1; i < par_size; i++){
 961              		.loc 1 318 5 is_stmt 0 view .LVU225
 962 0000 30B1     		cbz	r0, .L91
 316:Core/Src/ssd1306.c ****   uint16_t i;
 963              		.loc 1 316 97 view .LVU226
 964 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 965              	.LCFI19:
 966              		.cfi_def_cfa_offset 20
 967              		.cfi_offset 4, -20
 968              		.cfi_offset 5, -16
 969              		.cfi_offset 6, -12
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0004 83B0     		sub	sp, sp, #12
 973              	.LCFI20:
 974              		.cfi_def_cfa_offset 32
 975 0006 0E46     		mov	r6, r1
 976 0008 1746     		mov	r7, r2
 977 000a 0546     		mov	r5, r0
 319:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 978              		.loc 1 319 11 view .LVU227
 979 000c 0124     		movs	r4, #1
 980 000e 13E0     		b	.L84
 981              	.L91:
 982              	.LCFI21:
 983              		.cfi_def_cfa_offset 0
 984              		.cfi_restore 4
 985              		.cfi_restore 5
 986              		.cfi_restore 6
 987              		.cfi_restore 7
 988              		.cfi_restore 14
 319:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 989              		.loc 1 319 11 view .LVU228
 990 0010 7047     		bx	lr
 991              	.LVL87:
 992              	.L86:
 993              	.LCFI22:
 994              		.cfi_def_cfa_offset 32
 995              		.cfi_offset 4, -20
 996              		.cfi_offset 5, -16
 997              		.cfi_offset 6, -12
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 320:Core/Src/ssd1306.c ****     }
 1000              		.loc 1 320 7 is_stmt 1 discriminator 3 view .LVU229
 320:Core/Src/ssd1306.c ****     }
 1001              		.loc 1 320 30 is_stmt 0 discriminator 3 view .LVU230
 1002 0012 04F10040 		add	r0, r4, #-2147483648
 1003 0016 0138     		subs	r0, r0, #1
 1004 0018 05EB400C 		add	ip, r5, r0, lsl #1
 320:Core/Src/ssd1306.c ****     }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 28


 1005              		.loc 1 320 72 discriminator 3 view .LVU231
 1006 001c 05EB4403 		add	r3, r5, r4, lsl #1
 320:Core/Src/ssd1306.c ****     }
 1007              		.loc 1 320 7 discriminator 3 view .LVU232
 1008 0020 0097     		str	r7, [sp]
 1009 0022 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1010 0024 15F81420 		ldrb	r2, [r5, r4, lsl #1]	@ zero_extendqisi2
 1011 0028 9CF80110 		ldrb	r1, [ip, #1]	@ zero_extendqisi2
 1012 002c 15F81000 		ldrb	r0, [r5, r0, lsl #1]	@ zero_extendqisi2
 1013 0030 FFF7FEFF 		bl	ssd1306_Line
 1014              	.LVL88:
 319:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1015              		.loc 1 319 30 is_stmt 1 discriminator 3 view .LVU233
 319:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1016              		.loc 1 319 31 is_stmt 0 discriminator 3 view .LVU234
 1017 0034 0134     		adds	r4, r4, #1
 1018              	.LVL89:
 319:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1019              		.loc 1 319 31 discriminator 3 view .LVU235
 1020 0036 A4B2     		uxth	r4, r4
 1021              	.LVL90:
 1022              	.L84:
 319:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1023              		.loc 1 319 16 is_stmt 1 discriminator 1 view .LVU236
 319:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1024              		.loc 1 319 5 is_stmt 0 discriminator 1 view .LVU237
 1025 0038 B442     		cmp	r4, r6
 1026 003a EAD3     		bcc	.L86
 328:Core/Src/ssd1306.c **** /*Convert Degrees to Radians*/
 1027              		.loc 1 328 1 view .LVU238
 1028 003c 03B0     		add	sp, sp, #12
 1029              	.LCFI23:
 1030              		.cfi_def_cfa_offset 20
 1031              		@ sp needed
 1032 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 328:Core/Src/ssd1306.c **** /*Convert Degrees to Radians*/
 1033              		.loc 1 328 1 view .LVU239
 1034              		.cfi_endproc
 1035              	.LFE84:
 1037              		.global	__aeabi_ui2f
 1038              		.global	__aeabi_fdiv
 1039              		.global	__aeabi_fmul
 1040              		.global	__aeabi_i2d
 1041              		.global	__aeabi_d2iz
 1042              		.section	.text.ssd1306_DrawArc,"ax",%progbits
 1043              		.align	1
 1044              		.global	ssd1306_DrawArc
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1049              	ssd1306_DrawArc:
 1050              	.LVL91:
 1051              	.LFB87:
 347:Core/Src/ssd1306.c **** /*DrawArc. Draw angle is beginning from 4 quart of trigonometric circle (3pi/2)
 348:Core/Src/ssd1306.c ****  * start_angle in degree
 349:Core/Src/ssd1306.c ****  * sweep in degree
 350:Core/Src/ssd1306.c ****  */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 29


 351:Core/Src/ssd1306.c **** void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SS
 1052              		.loc 1 351 119 is_stmt 1 view -0
 1053              		.cfi_startproc
 1054              		@ args = 8, pretend = 0, frame = 32
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              		.loc 1 351 119 is_stmt 0 view .LVU241
 1057 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1058              	.LCFI24:
 1059              		.cfi_def_cfa_offset 36
 1060              		.cfi_offset 4, -36
 1061              		.cfi_offset 5, -32
 1062              		.cfi_offset 6, -28
 1063              		.cfi_offset 7, -24
 1064              		.cfi_offset 8, -20
 1065              		.cfi_offset 9, -16
 1066              		.cfi_offset 10, -12
 1067              		.cfi_offset 11, -8
 1068              		.cfi_offset 14, -4
 1069 0004 8BB0     		sub	sp, sp, #44
 1070              	.LCFI25:
 1071              		.cfi_def_cfa_offset 80
 1072 0006 8146     		mov	r9, r0
 1073 0008 8B46     		mov	fp, r1
 1074 000a 0792     		str	r2, [sp, #28]
 1075 000c 1D46     		mov	r5, r3
 1076 000e 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 1077              	.LVL92:
 1078              		.loc 1 351 119 view .LVU242
 1079 0012 0893     		str	r3, [sp, #32]
 352:Core/Src/ssd1306.c ****     #define CIRCLE_APPROXIMATION_SEGMENTS 36
 353:Core/Src/ssd1306.c ****     float approx_degree;
 1080              		.loc 1 353 5 is_stmt 1 view .LVU243
 354:Core/Src/ssd1306.c ****     uint32_t approx_segments;
 1081              		.loc 1 354 5 view .LVU244
 355:Core/Src/ssd1306.c ****     uint8_t xp1,xp2;
 1082              		.loc 1 355 5 view .LVU245
 356:Core/Src/ssd1306.c ****     uint8_t yp1,yp2;
 1083              		.loc 1 356 5 view .LVU246
 357:Core/Src/ssd1306.c ****     uint32_t count = 0;
 1084              		.loc 1 357 5 view .LVU247
 1085              	.LVL93:
 358:Core/Src/ssd1306.c ****     uint32_t loc_sweep = 0;
 1086              		.loc 1 358 5 view .LVU248
 359:Core/Src/ssd1306.c ****     float rad;
 1087              		.loc 1 359 5 view .LVU249
 360:Core/Src/ssd1306.c **** 
 361:Core/Src/ssd1306.c ****     loc_sweep = ssd1306_NormalizeTo0_360(sweep);
 1088              		.loc 1 361 5 view .LVU250
 1089              		.loc 1 361 17 is_stmt 0 view .LVU251
 1090 0014 BDF85000 		ldrh	r0, [sp, #80]
 1091              	.LVL94:
 1092              		.loc 1 361 17 view .LVU252
 1093 0018 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1094              	.LVL95:
 1095              		.loc 1 361 17 view .LVU253
 1096 001c 0446     		mov	r4, r0
 1097              	.LVL96:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 30


 362:Core/Src/ssd1306.c **** 
 363:Core/Src/ssd1306.c ****     count = (ssd1306_NormalizeTo0_360(start_angle) * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1098              		.loc 1 363 5 is_stmt 1 view .LVU254
 1099              		.loc 1 363 14 is_stmt 0 view .LVU255
 1100 001e 2846     		mov	r0, r5
 1101              	.LVL97:
 1102              		.loc 1 363 14 view .LVU256
 1103 0020 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1104              	.LVL98:
 1105              		.loc 1 363 85 view .LVU257
 1106 0024 444B     		ldr	r3, .L99
 1107 0026 83FB003A 		smull	r3, r10, r3, r0
 1108 002a C017     		asrs	r0, r0, #31
 1109 002c C0EBAA0A 		rsb	r10, r0, r10, asr #2
 1110              	.LVL99:
 364:Core/Src/ssd1306.c ****     approx_segments = (loc_sweep * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1111              		.loc 1 364 5 is_stmt 1 view .LVU258
 1112              		.loc 1 364 34 is_stmt 0 view .LVU259
 1113 0030 04EBC403 		add	r3, r4, r4, lsl #3
 1114              		.loc 1 364 21 view .LVU260
 1115 0034 C3F35C03 		ubfx	r3, r3, #1, #29
 1116 0038 404A     		ldr	r2, .L99+4
 1117 003a A2FB0323 		umull	r2, r3, r2, r3
 1118 003e 9D08     		lsrs	r5, r3, #2
 1119              	.LVL100:
 365:Core/Src/ssd1306.c ****     approx_degree = loc_sweep / (float)approx_segments;
 1120              		.loc 1 365 5 is_stmt 1 view .LVU261
 1121              		.loc 1 365 31 is_stmt 0 view .LVU262
 1122 0040 2046     		mov	r0, r4
 1123 0042 FFF7FEFF 		bl	__aeabi_ui2f
 1124              	.LVL101:
 1125 0046 0446     		mov	r4, r0
 1126              	.LVL102:
 1127              		.loc 1 365 31 view .LVU263
 1128 0048 0990     		str	r0, [sp, #36]	@ float
 1129              		.loc 1 365 33 view .LVU264
 1130 004a 2846     		mov	r0, r5
 1131 004c FFF7FEFF 		bl	__aeabi_ui2f
 1132              	.LVL103:
 1133 0050 0146     		mov	r1, r0
 1134              		.loc 1 365 19 view .LVU265
 1135 0052 2046     		mov	r0, r4
 1136 0054 FFF7FEFF 		bl	__aeabi_fdiv
 1137              	.LVL104:
 1138 0058 0746     		mov	r7, r0
 1139              	.LVL105:
 366:Core/Src/ssd1306.c ****     while(count < approx_segments)
 1140              		.loc 1 366 5 is_stmt 1 view .LVU266
 1141 005a A846     		mov	r8, r5
 1142              		.loc 1 366 10 is_stmt 0 view .LVU267
 1143 005c 2BE0     		b	.L93
 1144              	.LVL106:
 1145              	.L94:
 367:Core/Src/ssd1306.c ****     {
 368:Core/Src/ssd1306.c ****         rad = ssd1306_DegToRad(count*approx_degree);
 369:Core/Src/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 370:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 31


 371:Core/Src/ssd1306.c ****         count++;
 372:Core/Src/ssd1306.c ****         if(count != approx_segments)
 373:Core/Src/ssd1306.c ****         {
 374:Core/Src/ssd1306.c ****             rad = ssd1306_DegToRad(count*approx_degree);
 375:Core/Src/ssd1306.c ****         }
 376:Core/Src/ssd1306.c ****         else
 377:Core/Src/ssd1306.c ****         {            
 378:Core/Src/ssd1306.c ****             rad = ssd1306_DegToRad(loc_sweep);
 1146              		.loc 1 378 13 is_stmt 1 view .LVU268
 1147              		.loc 1 378 19 is_stmt 0 view .LVU269
 1148 005e 0998     		ldr	r0, [sp, #36]	@ float
 1149 0060 FFF7FEFF 		bl	ssd1306_DegToRad
 1150              	.LVL107:
 1151              	.L95:
 379:Core/Src/ssd1306.c ****         }
 380:Core/Src/ssd1306.c ****         xp2 = x + (int8_t)(sin(rad)*radius);
 1152              		.loc 1 380 9 is_stmt 1 view .LVU270
 1153              		.loc 1 380 28 is_stmt 0 view .LVU271
 1154 0064 FFF7FEFF 		bl	__aeabi_f2d
 1155              	.LVL108:
 1156              		.loc 1 380 28 view .LVU272
 1157 0068 0246     		mov	r2, r0
 1158 006a 0B46     		mov	r3, r1
 1159 006c CDE90423 		strd	r2, [sp, #16]
 1160 0070 FFF7FEFF 		bl	sin
 1161              	.LVL109:
 1162 0074 0246     		mov	r2, r0
 1163 0076 0B46     		mov	r3, r1
 1164              		.loc 1 380 36 view .LVU273
 1165 0078 DDE90201 		ldrd	r0, [sp, #8]
 1166 007c FFF7FEFF 		bl	__aeabi_dmul
 1167              	.LVL110:
 1168              		.loc 1 380 19 view .LVU274
 1169 0080 FFF7FEFF 		bl	__aeabi_d2iz
 1170              	.LVL111:
 1171 0084 C5B2     		uxtb	r5, r0
 1172              		.loc 1 380 13 view .LVU275
 1173 0086 4D44     		add	r5, r5, r9
 1174 0088 EDB2     		uxtb	r5, r5
 1175              	.LVL112:
 381:Core/Src/ssd1306.c ****         yp2 = y + (int8_t)(cos(rad)*radius);    
 1176              		.loc 1 381 9 is_stmt 1 view .LVU276
 1177              		.loc 1 381 28 is_stmt 0 view .LVU277
 1178 008a DDE90401 		ldrd	r0, [sp, #16]
 1179 008e FFF7FEFF 		bl	cos
 1180              	.LVL113:
 1181 0092 0246     		mov	r2, r0
 1182 0094 0B46     		mov	r3, r1
 1183              		.loc 1 381 36 view .LVU278
 1184 0096 DDE90201 		ldrd	r0, [sp, #8]
 1185 009a FFF7FEFF 		bl	__aeabi_dmul
 1186              	.LVL114:
 1187              		.loc 1 381 19 view .LVU279
 1188 009e FFF7FEFF 		bl	__aeabi_d2iz
 1189              	.LVL115:
 1190 00a2 C3B2     		uxtb	r3, r0
 1191              		.loc 1 381 13 view .LVU280
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 32


 1192 00a4 5B44     		add	r3, r3, fp
 1193              	.LVL116:
 382:Core/Src/ssd1306.c ****         ssd1306_Line(xp1,yp1,xp2,yp2,color);
 1194              		.loc 1 382 9 is_stmt 1 view .LVU281
 1195 00a6 089A     		ldr	r2, [sp, #32]
 1196 00a8 0092     		str	r2, [sp]
 1197 00aa DBB2     		uxtb	r3, r3
 1198              		.loc 1 382 9 is_stmt 0 view .LVU282
 1199 00ac 2A46     		mov	r2, r5
 1200 00ae 2146     		mov	r1, r4
 1201 00b0 3046     		mov	r0, r6
 1202 00b2 FFF7FEFF 		bl	ssd1306_Line
 1203              	.LVL117:
 1204              	.L93:
 366:Core/Src/ssd1306.c ****     {
 1205              		.loc 1 366 10 is_stmt 1 view .LVU283
 1206 00b6 C245     		cmp	r10, r8
 1207 00b8 3BD2     		bcs	.L98
 368:Core/Src/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1208              		.loc 1 368 9 view .LVU284
 368:Core/Src/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1209              		.loc 1 368 15 is_stmt 0 view .LVU285
 1210 00ba 5046     		mov	r0, r10
 1211 00bc FFF7FEFF 		bl	__aeabi_ui2f
 1212              	.LVL118:
 1213 00c0 3946     		mov	r1, r7
 1214 00c2 FFF7FEFF 		bl	__aeabi_fmul
 1215              	.LVL119:
 1216 00c6 FFF7FEFF 		bl	ssd1306_DegToRad
 1217              	.LVL120:
 369:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1218              		.loc 1 369 9 is_stmt 1 view .LVU286
 369:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1219              		.loc 1 369 28 is_stmt 0 view .LVU287
 1220 00ca FFF7FEFF 		bl	__aeabi_f2d
 1221              	.LVL121:
 369:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1222              		.loc 1 369 28 view .LVU288
 1223 00ce 0446     		mov	r4, r0
 1224 00d0 0D46     		mov	r5, r1
 1225 00d2 FFF7FEFF 		bl	sin
 1226              	.LVL122:
 1227 00d6 CDE90401 		strd	r0, [sp, #16]
 369:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1228              		.loc 1 369 36 view .LVU289
 1229 00da 0798     		ldr	r0, [sp, #28]
 1230 00dc FFF7FEFF 		bl	__aeabi_i2d
 1231              	.LVL123:
 1232 00e0 0246     		mov	r2, r0
 1233 00e2 0B46     		mov	r3, r1
 1234 00e4 CDE90223 		strd	r2, [sp, #8]
 1235 00e8 DDE90401 		ldrd	r0, [sp, #16]
 1236 00ec FFF7FEFF 		bl	__aeabi_dmul
 1237              	.LVL124:
 369:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1238              		.loc 1 369 19 view .LVU290
 1239 00f0 FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 33


 1240              	.LVL125:
 1241 00f4 C6B2     		uxtb	r6, r0
 369:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1242              		.loc 1 369 13 view .LVU291
 1243 00f6 4E44     		add	r6, r6, r9
 1244 00f8 F6B2     		uxtb	r6, r6
 1245              	.LVL126:
 370:Core/Src/ssd1306.c ****         count++;
 1246              		.loc 1 370 9 is_stmt 1 view .LVU292
 370:Core/Src/ssd1306.c ****         count++;
 1247              		.loc 1 370 28 is_stmt 0 view .LVU293
 1248 00fa 2046     		mov	r0, r4
 1249 00fc 2946     		mov	r1, r5
 1250 00fe FFF7FEFF 		bl	cos
 1251              	.LVL127:
 1252 0102 0246     		mov	r2, r0
 1253 0104 0B46     		mov	r3, r1
 370:Core/Src/ssd1306.c ****         count++;
 1254              		.loc 1 370 36 view .LVU294
 1255 0106 DDE90201 		ldrd	r0, [sp, #8]
 1256 010a FFF7FEFF 		bl	__aeabi_dmul
 1257              	.LVL128:
 370:Core/Src/ssd1306.c ****         count++;
 1258              		.loc 1 370 19 view .LVU295
 1259 010e FFF7FEFF 		bl	__aeabi_d2iz
 1260              	.LVL129:
 1261 0112 C4B2     		uxtb	r4, r0
 370:Core/Src/ssd1306.c ****         count++;
 1262              		.loc 1 370 13 view .LVU296
 1263 0114 5C44     		add	r4, r4, fp
 1264 0116 E4B2     		uxtb	r4, r4
 1265              	.LVL130:
 371:Core/Src/ssd1306.c ****         if(count != approx_segments)
 1266              		.loc 1 371 9 is_stmt 1 view .LVU297
 371:Core/Src/ssd1306.c ****         if(count != approx_segments)
 1267              		.loc 1 371 14 is_stmt 0 view .LVU298
 1268 0118 0AF1010A 		add	r10, r10, #1
 1269              	.LVL131:
 372:Core/Src/ssd1306.c ****         {
 1270              		.loc 1 372 9 is_stmt 1 view .LVU299
 372:Core/Src/ssd1306.c ****         {
 1271              		.loc 1 372 11 is_stmt 0 view .LVU300
 1272 011c D045     		cmp	r8, r10
 1273 011e 9ED0     		beq	.L94
 374:Core/Src/ssd1306.c ****         }
 1274              		.loc 1 374 13 is_stmt 1 view .LVU301
 374:Core/Src/ssd1306.c ****         }
 1275              		.loc 1 374 19 is_stmt 0 view .LVU302
 1276 0120 5046     		mov	r0, r10
 1277 0122 FFF7FEFF 		bl	__aeabi_ui2f
 1278              	.LVL132:
 1279 0126 3946     		mov	r1, r7
 1280 0128 FFF7FEFF 		bl	__aeabi_fmul
 1281              	.LVL133:
 1282 012c FFF7FEFF 		bl	ssd1306_DegToRad
 1283              	.LVL134:
 374:Core/Src/ssd1306.c ****         }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 34


 1284              		.loc 1 374 19 view .LVU303
 1285 0130 98E7     		b	.L95
 1286              	.LVL135:
 1287              	.L98:
 383:Core/Src/ssd1306.c ****     }
 384:Core/Src/ssd1306.c ****     
 385:Core/Src/ssd1306.c ****     return;
 386:Core/Src/ssd1306.c **** }
 1288              		.loc 1 386 1 view .LVU304
 1289 0132 0BB0     		add	sp, sp, #44
 1290              	.LCFI26:
 1291              		.cfi_def_cfa_offset 36
 1292              		@ sp needed
 1293 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1294              	.LVL136:
 1295              	.L100:
 1296              		.loc 1 386 1 view .LVU305
 1297              		.align	2
 1298              	.L99:
 1299 0138 67666666 		.word	1717986919
 1300 013c 176CC116 		.word	381774871
 1301              		.cfi_endproc
 1302              	.LFE87:
 1304              		.section	.text.ssd1306_DrawCircle,"ax",%progbits
 1305              		.align	1
 1306              		.global	ssd1306_DrawCircle
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1311              	ssd1306_DrawCircle:
 1312              	.LVL137:
 1313              	.LFB88:
 387:Core/Src/ssd1306.c **** //Draw circle by Bresenhem's algorithm
 388:Core/Src/ssd1306.c **** void ssd1306_DrawCircle(uint8_t par_x,uint8_t par_y,uint8_t par_r,SSD1306_COLOR par_color) {
 1314              		.loc 1 388 92 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 8
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318              		.loc 1 388 92 is_stmt 0 view .LVU307
 1319 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1320              	.LCFI27:
 1321              		.cfi_def_cfa_offset 36
 1322              		.cfi_offset 4, -36
 1323              		.cfi_offset 5, -32
 1324              		.cfi_offset 6, -28
 1325              		.cfi_offset 7, -24
 1326              		.cfi_offset 8, -20
 1327              		.cfi_offset 9, -16
 1328              		.cfi_offset 10, -12
 1329              		.cfi_offset 11, -8
 1330              		.cfi_offset 14, -4
 1331 0004 83B0     		sub	sp, sp, #12
 1332              	.LCFI28:
 1333              		.cfi_def_cfa_offset 48
 1334 0006 0090     		str	r0, [sp]
 1335 0008 0191     		str	r1, [sp, #4]
 1336 000a 9A46     		mov	r10, r3
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 35


 389:Core/Src/ssd1306.c ****   int32_t x = -par_r;
 1337              		.loc 1 389 3 is_stmt 1 view .LVU308
 1338              	.LVL138:
 390:Core/Src/ssd1306.c ****   int32_t y = 0;
 1339              		.loc 1 390 3 view .LVU309
 391:Core/Src/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1340              		.loc 1 391 3 view .LVU310
 392:Core/Src/ssd1306.c ****   int32_t e2;
 1341              		.loc 1 392 3 view .LVU311
 393:Core/Src/ssd1306.c **** 
 394:Core/Src/ssd1306.c ****   if (par_x >= SSD1306_WIDTH || par_y >= SSD1306_HEIGHT) {
 1342              		.loc 1 394 3 view .LVU312
 1343              		.loc 1 394 6 is_stmt 0 view .LVU313
 1344 000c 8328     		cmp	r0, #131
 1345 000e 49D8     		bhi	.L101
 1346 0010 5742     		rsbs	r7, r2, #0
 1347              	.LVL139:
 1348              		.loc 1 394 6 view .LVU314
 1349 0012 C2F10102 		rsb	r2, r2, #1
 1350              	.LVL140:
 1351              		.loc 1 394 6 view .LVU315
 1352 0016 5400     		lsls	r4, r2, #1
 1353              		.loc 1 394 30 discriminator 1 view .LVU316
 1354 0018 3F29     		cmp	r1, #63
 1355 001a 43D8     		bhi	.L101
 390:Core/Src/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1356              		.loc 1 390 11 view .LVU317
 1357 001c 4FF0000B 		mov	fp, #0
 1358 0020 08E0     		b	.L105
 1359              	.LVL141:
 1360              	.L106:
 390:Core/Src/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1361              		.loc 1 390 11 view .LVU318
 1362 0022 2346     		mov	r3, r4
 1363              	.LVL142:
 1364              	.L103:
 395:Core/Src/ssd1306.c ****     return;
 396:Core/Src/ssd1306.c ****   }
 397:Core/Src/ssd1306.c **** 
 398:Core/Src/ssd1306.c ****     do {
 399:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 400:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 401:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 402:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 403:Core/Src/ssd1306.c ****         e2 = err;
 404:Core/Src/ssd1306.c ****         if (e2 <= y) {
 405:Core/Src/ssd1306.c ****             y++;
 406:Core/Src/ssd1306.c ****             err = err + (y * 2 + 1);
 407:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 408:Core/Src/ssd1306.c ****               e2 = 0;
 409:Core/Src/ssd1306.c ****             }
 410:Core/Src/ssd1306.c ****             else
 411:Core/Src/ssd1306.c ****             {
 412:Core/Src/ssd1306.c ****               /*nothing to do*/
 413:Core/Src/ssd1306.c ****             }
 414:Core/Src/ssd1306.c ****         }
 415:Core/Src/ssd1306.c ****         else
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 36


 416:Core/Src/ssd1306.c ****         {
 417:Core/Src/ssd1306.c ****           /*nothing to do*/
 418:Core/Src/ssd1306.c ****         }
 1365              		.loc 1 418 9 is_stmt 1 view .LVU319
 419:Core/Src/ssd1306.c ****         if(e2 > x) {
 1366              		.loc 1 419 9 view .LVU320
 1367              		.loc 1 419 11 is_stmt 0 view .LVU321
 1368 0024 A742     		cmp	r7, r4
 1369 0026 3BDA     		bge	.L108
 420:Core/Src/ssd1306.c ****           x++;
 1370              		.loc 1 420 11 is_stmt 1 view .LVU322
 1371              		.loc 1 420 12 is_stmt 0 view .LVU323
 1372 0028 0137     		adds	r7, r7, #1
 1373              	.LVL143:
 421:Core/Src/ssd1306.c ****           err = err + (x * 2 + 1);
 1374              		.loc 1 421 11 is_stmt 1 view .LVU324
 1375              		.loc 1 421 26 is_stmt 0 view .LVU325
 1376 002a 7C00     		lsls	r4, r7, #1
 1377              	.LVL144:
 1378              		.loc 1 421 30 view .LVU326
 1379 002c 0134     		adds	r4, r4, #1
 1380              		.loc 1 421 15 view .LVU327
 1381 002e 1C44     		add	r4, r4, r3
 1382              	.LVL145:
 1383              	.L104:
 422:Core/Src/ssd1306.c ****         }
 423:Core/Src/ssd1306.c ****         else
 424:Core/Src/ssd1306.c ****         {
 425:Core/Src/ssd1306.c ****           /*nothing to do*/
 426:Core/Src/ssd1306.c ****         }
 1384              		.loc 1 426 9 is_stmt 1 view .LVU328
 427:Core/Src/ssd1306.c ****     } while(x <= 0);
 1385              		.loc 1 427 12 view .LVU329
 1386              		.loc 1 427 5 is_stmt 0 view .LVU330
 1387 0030 002F     		cmp	r7, #0
 1388 0032 37DC     		bgt	.L101
 1389              	.LVL146:
 1390              	.L105:
 398:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 1391              		.loc 1 398 5 is_stmt 1 view .LVU331
 399:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 1392              		.loc 1 399 7 view .LVU332
 1393 0034 FEB2     		uxtb	r6, r7
 1394 0036 009B     		ldr	r3, [sp]
 1395 0038 A3EB0608 		sub	r8, r3, r6
 1396 003c 5FFA88F8 		uxtb	r8, r8
 1397 0040 5FFA8BF5 		uxtb	r5, fp
 1398 0044 0199     		ldr	r1, [sp, #4]
 1399 0046 05EB0109 		add	r9, r5, r1
 1400 004a 5FFA89F9 		uxtb	r9, r9
 1401 004e 5246     		mov	r2, r10
 1402 0050 4946     		mov	r1, r9
 1403 0052 4046     		mov	r0, r8
 1404 0054 FFF7FEFF 		bl	ssd1306_DrawPixel
 1405              	.LVL147:
 400:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 1406              		.loc 1 400 7 view .LVU333
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 37


 1407 0058 009A     		ldr	r2, [sp]
 1408 005a 1644     		add	r6, r6, r2
 1409 005c F6B2     		uxtb	r6, r6
 1410 005e 5246     		mov	r2, r10
 1411 0060 4946     		mov	r1, r9
 1412 0062 3046     		mov	r0, r6
 1413 0064 FFF7FEFF 		bl	ssd1306_DrawPixel
 1414              	.LVL148:
 401:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 1415              		.loc 1 401 7 view .LVU334
 1416 0068 019B     		ldr	r3, [sp, #4]
 1417 006a 5D1B     		subs	r5, r3, r5
 1418 006c EDB2     		uxtb	r5, r5
 1419 006e 5246     		mov	r2, r10
 1420 0070 2946     		mov	r1, r5
 1421 0072 3046     		mov	r0, r6
 1422 0074 FFF7FEFF 		bl	ssd1306_DrawPixel
 1423              	.LVL149:
 402:Core/Src/ssd1306.c ****         e2 = err;
 1424              		.loc 1 402 7 view .LVU335
 1425 0078 5246     		mov	r2, r10
 1426 007a 2946     		mov	r1, r5
 1427 007c 4046     		mov	r0, r8
 1428 007e FFF7FEFF 		bl	ssd1306_DrawPixel
 1429              	.LVL150:
 403:Core/Src/ssd1306.c ****         if (e2 <= y) {
 1430              		.loc 1 403 9 view .LVU336
 404:Core/Src/ssd1306.c ****             y++;
 1431              		.loc 1 404 9 view .LVU337
 404:Core/Src/ssd1306.c ****             y++;
 1432              		.loc 1 404 12 is_stmt 0 view .LVU338
 1433 0082 A345     		cmp	fp, r4
 1434 0084 CDDB     		blt	.L106
 405:Core/Src/ssd1306.c ****             err = err + (y * 2 + 1);
 1435              		.loc 1 405 13 is_stmt 1 view .LVU339
 405:Core/Src/ssd1306.c ****             err = err + (y * 2 + 1);
 1436              		.loc 1 405 14 is_stmt 0 view .LVU340
 1437 0086 0BF1010B 		add	fp, fp, #1
 1438              	.LVL151:
 406:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1439              		.loc 1 406 13 is_stmt 1 view .LVU341
 406:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1440              		.loc 1 406 28 is_stmt 0 view .LVU342
 1441 008a 4FEA4B03 		lsl	r3, fp, #1
 406:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1442              		.loc 1 406 32 view .LVU343
 1443 008e 0133     		adds	r3, r3, #1
 406:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1444              		.loc 1 406 17 view .LVU344
 1445 0090 2344     		add	r3, r3, r4
 1446              	.LVL152:
 407:Core/Src/ssd1306.c ****               e2 = 0;
 1447              		.loc 1 407 13 is_stmt 1 view .LVU345
 407:Core/Src/ssd1306.c ****               e2 = 0;
 1448              		.loc 1 407 15 is_stmt 0 view .LVU346
 1449 0092 1BEB070F 		cmn	fp, r7
 1450 0096 C5D1     		bne	.L103
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 38


 407:Core/Src/ssd1306.c ****               e2 = 0;
 1451              		.loc 1 407 24 discriminator 1 view .LVU347
 1452 0098 A742     		cmp	r7, r4
 1453 009a C3DB     		blt	.L103
 408:Core/Src/ssd1306.c ****             }
 1454              		.loc 1 408 18 view .LVU348
 1455 009c 0024     		movs	r4, #0
 1456              	.LVL153:
 408:Core/Src/ssd1306.c ****             }
 1457              		.loc 1 408 18 view .LVU349
 1458 009e C1E7     		b	.L103
 1459              	.LVL154:
 1460              	.L108:
 408:Core/Src/ssd1306.c ****             }
 1461              		.loc 1 408 18 view .LVU350
 1462 00a0 1C46     		mov	r4, r3
 1463              	.LVL155:
 408:Core/Src/ssd1306.c ****             }
 1464              		.loc 1 408 18 view .LVU351
 1465 00a2 C5E7     		b	.L104
 1466              	.LVL156:
 1467              	.L101:
 428:Core/Src/ssd1306.c **** 
 429:Core/Src/ssd1306.c ****     return;
 430:Core/Src/ssd1306.c **** }
 1468              		.loc 1 430 1 view .LVU352
 1469 00a4 03B0     		add	sp, sp, #12
 1470              	.LCFI29:
 1471              		.cfi_def_cfa_offset 36
 1472              		@ sp needed
 1473 00a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1474              		.cfi_endproc
 1475              	.LFE88:
 1477              		.section	.text.ssd1306_DrawRectangle,"ax",%progbits
 1478              		.align	1
 1479              		.global	ssd1306_DrawRectangle
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1484              	ssd1306_DrawRectangle:
 1485              	.LVL157:
 1486              	.LFB89:
 431:Core/Src/ssd1306.c **** 
 432:Core/Src/ssd1306.c **** //Draw rectangle
 433:Core/Src/ssd1306.c **** void ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 1487              		.loc 1 433 97 is_stmt 1 view -0
 1488              		.cfi_startproc
 1489              		@ args = 4, pretend = 0, frame = 0
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              		.loc 1 433 97 is_stmt 0 view .LVU354
 1492 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1493              	.LCFI30:
 1494              		.cfi_def_cfa_offset 24
 1495              		.cfi_offset 4, -24
 1496              		.cfi_offset 5, -20
 1497              		.cfi_offset 6, -16
 1498              		.cfi_offset 7, -12
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 39


 1499              		.cfi_offset 8, -8
 1500              		.cfi_offset 14, -4
 1501 0004 82B0     		sub	sp, sp, #8
 1502              	.LCFI31:
 1503              		.cfi_def_cfa_offset 32
 1504 0006 0546     		mov	r5, r0
 1505 0008 0E46     		mov	r6, r1
 1506 000a 1746     		mov	r7, r2
 1507 000c 1C46     		mov	r4, r3
 1508 000e 9DF82080 		ldrb	r8, [sp, #32]	@ zero_extendqisi2
 434:Core/Src/ssd1306.c ****   ssd1306_Line(x1,y1,x2,y1,color);
 1509              		.loc 1 434 3 is_stmt 1 view .LVU355
 1510 0012 CDF80080 		str	r8, [sp]
 1511 0016 0B46     		mov	r3, r1
 1512              	.LVL158:
 1513              		.loc 1 434 3 is_stmt 0 view .LVU356
 1514 0018 FFF7FEFF 		bl	ssd1306_Line
 1515              	.LVL159:
 435:Core/Src/ssd1306.c ****   ssd1306_Line(x2,y1,x2,y2,color);
 1516              		.loc 1 435 3 is_stmt 1 view .LVU357
 1517 001c CDF80080 		str	r8, [sp]
 1518 0020 2346     		mov	r3, r4
 1519 0022 3A46     		mov	r2, r7
 1520 0024 3146     		mov	r1, r6
 1521 0026 3846     		mov	r0, r7
 1522 0028 FFF7FEFF 		bl	ssd1306_Line
 1523              	.LVL160:
 436:Core/Src/ssd1306.c ****   ssd1306_Line(x2,y2,x1,y2,color);
 1524              		.loc 1 436 3 view .LVU358
 1525 002c CDF80080 		str	r8, [sp]
 1526 0030 2346     		mov	r3, r4
 1527 0032 2A46     		mov	r2, r5
 1528 0034 2146     		mov	r1, r4
 1529 0036 3846     		mov	r0, r7
 1530 0038 FFF7FEFF 		bl	ssd1306_Line
 1531              	.LVL161:
 437:Core/Src/ssd1306.c ****   ssd1306_Line(x1,y2,x1,y1,color);
 1532              		.loc 1 437 3 view .LVU359
 1533 003c CDF80080 		str	r8, [sp]
 1534 0040 3346     		mov	r3, r6
 1535 0042 2A46     		mov	r2, r5
 1536 0044 2146     		mov	r1, r4
 1537 0046 2846     		mov	r0, r5
 1538 0048 FFF7FEFF 		bl	ssd1306_Line
 1539              	.LVL162:
 438:Core/Src/ssd1306.c **** 
 439:Core/Src/ssd1306.c ****   return;
 1540              		.loc 1 439 3 view .LVU360
 440:Core/Src/ssd1306.c **** }
 1541              		.loc 1 440 1 is_stmt 0 view .LVU361
 1542 004c 02B0     		add	sp, sp, #8
 1543              	.LCFI32:
 1544              		.cfi_def_cfa_offset 24
 1545              		@ sp needed
 1546 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1547              		.loc 1 440 1 view .LVU362
 1548              		.cfi_endproc
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 40


 1549              	.LFE89:
 1551              		.section	.text.ssd1306_DrawBitmap,"ax",%progbits
 1552              		.align	1
 1553              		.global	ssd1306_DrawBitmap
 1554              		.syntax unified
 1555              		.thumb
 1556              		.thumb_func
 1558              	ssd1306_DrawBitmap:
 1559              	.LVL163:
 1560              	.LFB90:
 441:Core/Src/ssd1306.c **** 
 442:Core/Src/ssd1306.c **** //Draw bitmap - ported from the ADAFruit GFX library
 443:Core/Src/ssd1306.c **** 
 444:Core/Src/ssd1306.c **** void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SS
 445:Core/Src/ssd1306.c **** {
 1561              		.loc 1 445 1 is_stmt 1 view -0
 1562              		.cfi_startproc
 1563              		@ args = 8, pretend = 0, frame = 8
 1564              		@ frame_needed = 0, uses_anonymous_args = 0
 1565              		.loc 1 445 1 is_stmt 0 view .LVU364
 1566 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1567              	.LCFI33:
 1568              		.cfi_def_cfa_offset 36
 1569              		.cfi_offset 4, -36
 1570              		.cfi_offset 5, -32
 1571              		.cfi_offset 6, -28
 1572              		.cfi_offset 7, -24
 1573              		.cfi_offset 8, -20
 1574              		.cfi_offset 9, -16
 1575              		.cfi_offset 10, -12
 1576              		.cfi_offset 11, -8
 1577              		.cfi_offset 14, -4
 1578 0004 83B0     		sub	sp, sp, #12
 1579              	.LCFI34:
 1580              		.cfi_def_cfa_offset 48
 1581 0006 1E46     		mov	r6, r3
 1582 0008 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 1583              	.LVL164:
 1584              		.loc 1 445 1 view .LVU365
 1585 000c 0193     		str	r3, [sp, #4]
 1586 000e 9DF83430 		ldrb	r3, [sp, #52]	@ zero_extendqisi2
 1587 0012 0093     		str	r3, [sp]
 446:Core/Src/ssd1306.c ****     int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 1588              		.loc 1 446 5 is_stmt 1 view .LVU366
 1589              	.LVL165:
 447:Core/Src/ssd1306.c ****     uint8_t byte = 0;
 1590              		.loc 1 447 5 view .LVU367
 448:Core/Src/ssd1306.c **** 
 449:Core/Src/ssd1306.c ****     if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 1591              		.loc 1 449 5 view .LVU368
 1592              		.loc 1 449 8 is_stmt 0 view .LVU369
 1593 0014 8328     		cmp	r0, #131
 1594 0016 30D8     		bhi	.L112
 1595 0018 8346     		mov	fp, r0
 1596 001a 8846     		mov	r8, r1
 1597 001c 9246     		mov	r10, r2
 1598 001e 06F10709 		add	r9, r6, #7
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 41


 1599              	.LVL166:
 1600              		.loc 1 449 8 view .LVU370
 1601 0022 4FEAD909 		lsr	r9, r9, #3
 1602              	.LVL167:
 1603              		.loc 1 449 28 discriminator 1 view .LVU371
 1604 0026 3F29     		cmp	r1, #63
 1605 0028 27D8     		bhi	.L112
 1606              	.LBB3:
 450:Core/Src/ssd1306.c ****         return;
 451:Core/Src/ssd1306.c ****     }
 452:Core/Src/ssd1306.c **** 
 453:Core/Src/ssd1306.c ****     for (uint8_t j = 0; j < h; j++, y++) {
 1607              		.loc 1 453 18 view .LVU372
 1608 002a 0027     		movs	r7, #0
 1609              	.LBE3:
 447:Core/Src/ssd1306.c **** 
 1610              		.loc 1 447 13 view .LVU373
 1611 002c 3D46     		mov	r5, r7
 1612 002e 1FE0     		b	.L115
 1613              	.LVL168:
 1614              	.L116:
 1615              	.LBB6:
 1616              	.LBB4:
 454:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 455:Core/Src/ssd1306.c ****             if (i & 7)
 456:Core/Src/ssd1306.c ****                 byte <<= 1;
 457:Core/Src/ssd1306.c ****             else
 458:Core/Src/ssd1306.c ****                 byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 1617              		.loc 1 458 17 is_stmt 1 view .LVU374
 1618              		.loc 1 458 76 is_stmt 0 view .LVU375
 1619 0030 E308     		lsrs	r3, r4, #3
 1620              		.loc 1 458 72 view .LVU376
 1621 0032 09FB0733 		mla	r3, r9, r7, r3
 1622              		.loc 1 458 22 view .LVU377
 1623 0036 1AF80350 		ldrb	r5, [r10, r3]	@ zero_extendqisi2
 1624              	.LVL169:
 1625              	.L117:
 459:Core/Src/ssd1306.c ****             if (byte & 0x80)
 1626              		.loc 1 459 13 is_stmt 1 view .LVU378
 1627              		.loc 1 459 16 is_stmt 0 view .LVU379
 1628 003a 15F0800F 		tst	r5, #128
 1629 003e 09D1     		bne	.L123
 1630              	.L118:
 454:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1631              		.loc 1 454 36 is_stmt 1 discriminator 2 view .LVU380
 454:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1632              		.loc 1 454 37 is_stmt 0 discriminator 2 view .LVU381
 1633 0040 0134     		adds	r4, r4, #1
 1634              	.LVL170:
 454:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1635              		.loc 1 454 37 discriminator 2 view .LVU382
 1636 0042 E4B2     		uxtb	r4, r4
 1637              	.LVL171:
 1638              	.L120:
 454:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1639              		.loc 1 454 29 is_stmt 1 discriminator 1 view .LVU383
 454:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 42


 1640              		.loc 1 454 9 is_stmt 0 discriminator 1 view .LVU384
 1641 0044 B442     		cmp	r4, r6
 1642 0046 0DD2     		bcs	.L124
 455:Core/Src/ssd1306.c ****                 byte <<= 1;
 1643              		.loc 1 455 13 is_stmt 1 view .LVU385
 455:Core/Src/ssd1306.c ****                 byte <<= 1;
 1644              		.loc 1 455 16 is_stmt 0 view .LVU386
 1645 0048 14F0070F 		tst	r4, #7
 1646 004c F0D0     		beq	.L116
 456:Core/Src/ssd1306.c ****             else
 1647              		.loc 1 456 17 is_stmt 1 view .LVU387
 456:Core/Src/ssd1306.c ****             else
 1648              		.loc 1 456 22 is_stmt 0 view .LVU388
 1649 004e 6D00     		lsls	r5, r5, #1
 1650              	.LVL172:
 456:Core/Src/ssd1306.c ****             else
 1651              		.loc 1 456 22 view .LVU389
 1652 0050 EDB2     		uxtb	r5, r5
 1653              	.LVL173:
 456:Core/Src/ssd1306.c ****             else
 1654              		.loc 1 456 22 view .LVU390
 1655 0052 F2E7     		b	.L117
 1656              	.L123:
 460:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(x + i, y, color);
 1657              		.loc 1 460 17 is_stmt 1 view .LVU391
 1658 0054 04EB0B00 		add	r0, r4, fp
 1659 0058 009A     		ldr	r2, [sp]
 1660 005a 4146     		mov	r1, r8
 1661 005c C0B2     		uxtb	r0, r0
 1662 005e FFF7FEFF 		bl	ssd1306_DrawPixel
 1663              	.LVL174:
 1664 0062 EDE7     		b	.L118
 1665              	.L124:
 1666              		.loc 1 460 17 is_stmt 0 view .LVU392
 1667              	.LBE4:
 453:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1668              		.loc 1 453 32 is_stmt 1 discriminator 2 view .LVU393
 453:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1669              		.loc 1 453 33 is_stmt 0 discriminator 2 view .LVU394
 1670 0064 0137     		adds	r7, r7, #1
 1671              	.LVL175:
 453:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1672              		.loc 1 453 33 discriminator 2 view .LVU395
 1673 0066 FFB2     		uxtb	r7, r7
 1674              	.LVL176:
 453:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1675              		.loc 1 453 38 discriminator 2 view .LVU396
 1676 0068 08F10108 		add	r8, r8, #1
 1677              	.LVL177:
 453:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1678              		.loc 1 453 38 discriminator 2 view .LVU397
 1679 006c 5FFA88F8 		uxtb	r8, r8
 1680              	.LVL178:
 1681              	.L115:
 453:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1682              		.loc 1 453 25 is_stmt 1 discriminator 1 view .LVU398
 453:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 43


 1683              		.loc 1 453 5 is_stmt 0 discriminator 1 view .LVU399
 1684 0070 019B     		ldr	r3, [sp, #4]
 1685 0072 9F42     		cmp	r7, r3
 1686 0074 01D2     		bcs	.L112
 1687              	.LBB5:
 454:Core/Src/ssd1306.c ****             if (i & 7)
 1688              		.loc 1 454 22 view .LVU400
 1689 0076 0024     		movs	r4, #0
 1690 0078 E4E7     		b	.L120
 1691              	.LVL179:
 1692              	.L112:
 454:Core/Src/ssd1306.c ****             if (i & 7)
 1693              		.loc 1 454 22 view .LVU401
 1694              	.LBE5:
 1695              	.LBE6:
 461:Core/Src/ssd1306.c ****         }
 462:Core/Src/ssd1306.c ****     }
 463:Core/Src/ssd1306.c ****     return;
 464:Core/Src/ssd1306.c **** }
 1696              		.loc 1 464 1 view .LVU402
 1697 007a 03B0     		add	sp, sp, #12
 1698              	.LCFI35:
 1699              		.cfi_def_cfa_offset 36
 1700              		@ sp needed
 1701 007c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1702              		.loc 1 464 1 view .LVU403
 1703              		.cfi_endproc
 1704              	.LFE90:
 1706              		.section	.text.ssd1306_SetContrast,"ax",%progbits
 1707              		.align	1
 1708              		.global	ssd1306_SetContrast
 1709              		.syntax unified
 1710              		.thumb
 1711              		.thumb_func
 1713              	ssd1306_SetContrast:
 1714              	.LVL180:
 1715              	.LFB91:
 465:Core/Src/ssd1306.c **** 
 466:Core/Src/ssd1306.c **** void ssd1306_SetContrast(const uint8_t value) {
 1716              		.loc 1 466 47 is_stmt 1 view -0
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 0, uses_anonymous_args = 0
 1720              		.loc 1 466 47 is_stmt 0 view .LVU405
 1721 0000 10B5     		push	{r4, lr}
 1722              	.LCFI36:
 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 4, -8
 1725              		.cfi_offset 14, -4
 1726 0002 0446     		mov	r4, r0
 467:Core/Src/ssd1306.c ****     const uint8_t kSetContrastControlRegister = 0x81;
 1727              		.loc 1 467 5 is_stmt 1 view .LVU406
 1728              	.LVL181:
 468:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(kSetContrastControlRegister);
 1729              		.loc 1 468 5 view .LVU407
 1730 0004 8120     		movs	r0, #129
 1731              	.LVL182:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 44


 1732              		.loc 1 468 5 is_stmt 0 view .LVU408
 1733 0006 FFF7FEFF 		bl	ssd1306_WriteCommand
 1734              	.LVL183:
 469:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(value);
 1735              		.loc 1 469 5 is_stmt 1 view .LVU409
 1736 000a 2046     		mov	r0, r4
 1737 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1738              	.LVL184:
 470:Core/Src/ssd1306.c **** }
 1739              		.loc 1 470 1 is_stmt 0 view .LVU410
 1740 0010 10BD     		pop	{r4, pc}
 1741              		.cfi_endproc
 1742              	.LFE91:
 1744              		.section	.text.ssd1306_SetDisplayOn,"ax",%progbits
 1745              		.align	1
 1746              		.global	ssd1306_SetDisplayOn
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1751              	ssd1306_SetDisplayOn:
 1752              	.LVL185:
 1753              	.LFB92:
 471:Core/Src/ssd1306.c **** 
 472:Core/Src/ssd1306.c **** void ssd1306_SetDisplayOn(const uint8_t on) {
 1754              		.loc 1 472 45 is_stmt 1 view -0
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 0
 1757              		@ frame_needed = 0, uses_anonymous_args = 0
 1758              		.loc 1 472 45 is_stmt 0 view .LVU412
 1759 0000 08B5     		push	{r3, lr}
 1760              	.LCFI37:
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 3, -8
 1763              		.cfi_offset 14, -4
 473:Core/Src/ssd1306.c ****     uint8_t value;
 1764              		.loc 1 473 5 is_stmt 1 view .LVU413
 474:Core/Src/ssd1306.c ****     if (on) {
 1765              		.loc 1 474 5 view .LVU414
 1766              		.loc 1 474 8 is_stmt 0 view .LVU415
 1767 0002 30B1     		cbz	r0, .L128
 475:Core/Src/ssd1306.c ****         value = 0xAF;   // Display on
 1768              		.loc 1 475 9 is_stmt 1 view .LVU416
 1769              	.LVL186:
 476:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 1;
 1770              		.loc 1 476 9 view .LVU417
 1771              		.loc 1 476 27 is_stmt 0 view .LVU418
 1772 0004 054B     		ldr	r3, .L131
 1773 0006 0122     		movs	r2, #1
 1774 0008 5A71     		strb	r2, [r3, #5]
 475:Core/Src/ssd1306.c ****         value = 0xAF;   // Display on
 1775              		.loc 1 475 15 view .LVU419
 1776 000a AF20     		movs	r0, #175
 1777              	.LVL187:
 1778              	.L129:
 477:Core/Src/ssd1306.c ****     } else {
 478:Core/Src/ssd1306.c ****         value = 0xAE;   // Display off
 479:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 45


 480:Core/Src/ssd1306.c ****     }
 481:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(value);
 1779              		.loc 1 481 5 is_stmt 1 view .LVU420
 1780 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1781              	.LVL188:
 482:Core/Src/ssd1306.c **** }
 1782              		.loc 1 482 1 is_stmt 0 view .LVU421
 1783 0010 08BD     		pop	{r3, pc}
 1784              	.LVL189:
 1785              	.L128:
 478:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1786              		.loc 1 478 9 is_stmt 1 view .LVU422
 479:Core/Src/ssd1306.c ****     }
 1787              		.loc 1 479 9 view .LVU423
 479:Core/Src/ssd1306.c ****     }
 1788              		.loc 1 479 27 is_stmt 0 view .LVU424
 1789 0012 024B     		ldr	r3, .L131
 1790 0014 0022     		movs	r2, #0
 1791 0016 5A71     		strb	r2, [r3, #5]
 478:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1792              		.loc 1 478 15 view .LVU425
 1793 0018 AE20     		movs	r0, #174
 1794              	.LVL190:
 478:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1795              		.loc 1 478 15 view .LVU426
 1796 001a F7E7     		b	.L129
 1797              	.L132:
 1798              		.align	2
 1799              	.L131:
 1800 001c 00000000 		.word	.LANCHOR1
 1801              		.cfi_endproc
 1802              	.LFE92:
 1804              		.section	.text.ssd1306_Init,"ax",%progbits
 1805              		.align	1
 1806              		.global	ssd1306_Init
 1807              		.syntax unified
 1808              		.thumb
 1809              		.thumb_func
 1811              	ssd1306_Init:
 1812              	.LFB76:
  73:Core/Src/ssd1306.c ****     // Reset OLED
 1813              		.loc 1 73 25 is_stmt 1 view -0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817 0000 08B5     		push	{r3, lr}
 1818              	.LCFI38:
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 3, -8
 1821              		.cfi_offset 14, -4
  75:Core/Src/ssd1306.c **** 
 1822              		.loc 1 75 5 view .LVU428
  78:Core/Src/ssd1306.c **** 
 1823              		.loc 1 78 5 view .LVU429
 1824 0002 6420     		movs	r0, #100
 1825 0004 FFF7FEFF 		bl	HAL_Delay
 1826              	.LVL191:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 46


  81:Core/Src/ssd1306.c **** 
 1827              		.loc 1 81 5 view .LVU430
 1828 0008 0020     		movs	r0, #0
 1829 000a FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1830              	.LVL192:
  83:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 1831              		.loc 1 83 5 view .LVU431
 1832 000e 2020     		movs	r0, #32
 1833 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 1834              	.LVL193:
  84:Core/Src/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 1835              		.loc 1 84 5 view .LVU432
 1836 0014 0020     		movs	r0, #0
 1837 0016 FFF7FEFF 		bl	ssd1306_WriteCommand
 1838              	.LVL194:
  87:Core/Src/ssd1306.c **** 
 1839              		.loc 1 87 5 view .LVU433
 1840 001a B020     		movs	r0, #176
 1841 001c FFF7FEFF 		bl	ssd1306_WriteCommand
 1842              	.LVL195:
  90:Core/Src/ssd1306.c **** #else
 1843              		.loc 1 90 5 view .LVU434
 1844 0020 C020     		movs	r0, #192
 1845 0022 FFF7FEFF 		bl	ssd1306_WriteCommand
 1846              	.LVL196:
  95:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 1847              		.loc 1 95 5 view .LVU435
 1848 0026 0020     		movs	r0, #0
 1849 0028 FFF7FEFF 		bl	ssd1306_WriteCommand
 1850              	.LVL197:
  96:Core/Src/ssd1306.c **** 
 1851              		.loc 1 96 5 view .LVU436
 1852 002c 1020     		movs	r0, #16
 1853 002e FFF7FEFF 		bl	ssd1306_WriteCommand
 1854              	.LVL198:
  98:Core/Src/ssd1306.c **** 
 1855              		.loc 1 98 5 view .LVU437
 1856 0032 4020     		movs	r0, #64
 1857 0034 FFF7FEFF 		bl	ssd1306_WriteCommand
 1858              	.LVL199:
 100:Core/Src/ssd1306.c **** 
 1859              		.loc 1 100 5 view .LVU438
 1860 0038 FF20     		movs	r0, #255
 1861 003a FFF7FEFF 		bl	ssd1306_SetContrast
 1862              	.LVL200:
 103:Core/Src/ssd1306.c **** #else
 1863              		.loc 1 103 5 view .LVU439
 1864 003e A020     		movs	r0, #160
 1865 0040 FFF7FEFF 		bl	ssd1306_WriteCommand
 1866              	.LVL201:
 111:Core/Src/ssd1306.c **** #endif
 1867              		.loc 1 111 5 view .LVU440
 1868 0044 A620     		movs	r0, #166
 1869 0046 FFF7FEFF 		bl	ssd1306_WriteCommand
 1870              	.LVL202:
 119:Core/Src/ssd1306.c **** #endif
 1871              		.loc 1 119 5 view .LVU441
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 47


 1872 004a A820     		movs	r0, #168
 1873 004c FFF7FEFF 		bl	ssd1306_WriteCommand
 1874              	.LVL203:
 125:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 132)
 1875              		.loc 1 125 5 view .LVU442
 1876 0050 3F20     		movs	r0, #63
 1877 0052 FFF7FEFF 		bl	ssd1306_WriteCommand
 1878              	.LVL204:
 132:Core/Src/ssd1306.c **** 
 1879              		.loc 1 132 5 view .LVU443
 1880 0056 A420     		movs	r0, #164
 1881 0058 FFF7FEFF 		bl	ssd1306_WriteCommand
 1882              	.LVL205:
 134:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 1883              		.loc 1 134 5 view .LVU444
 1884 005c D320     		movs	r0, #211
 1885 005e FFF7FEFF 		bl	ssd1306_WriteCommand
 1886              	.LVL206:
 135:Core/Src/ssd1306.c **** 
 1887              		.loc 1 135 5 view .LVU445
 1888 0062 0020     		movs	r0, #0
 1889 0064 FFF7FEFF 		bl	ssd1306_WriteCommand
 1890              	.LVL207:
 137:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 1891              		.loc 1 137 5 view .LVU446
 1892 0068 D520     		movs	r0, #213
 1893 006a FFF7FEFF 		bl	ssd1306_WriteCommand
 1894              	.LVL208:
 138:Core/Src/ssd1306.c **** 
 1895              		.loc 1 138 5 view .LVU447
 1896 006e F020     		movs	r0, #240
 1897 0070 FFF7FEFF 		bl	ssd1306_WriteCommand
 1898              	.LVL209:
 140:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 1899              		.loc 1 140 5 view .LVU448
 1900 0074 D920     		movs	r0, #217
 1901 0076 FFF7FEFF 		bl	ssd1306_WriteCommand
 1902              	.LVL210:
 141:Core/Src/ssd1306.c **** 
 1903              		.loc 1 141 5 view .LVU449
 1904 007a 2220     		movs	r0, #34
 1905 007c FFF7FEFF 		bl	ssd1306_WriteCommand
 1906              	.LVL211:
 143:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 1907              		.loc 1 143 5 view .LVU450
 1908 0080 DA20     		movs	r0, #218
 1909 0082 FFF7FEFF 		bl	ssd1306_WriteCommand
 1910              	.LVL212:
 147:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 132)
 1911              		.loc 1 147 5 view .LVU451
 1912 0086 1220     		movs	r0, #18
 1913 0088 FFF7FEFF 		bl	ssd1306_WriteCommand
 1914              	.LVL213:
 154:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 1915              		.loc 1 154 5 view .LVU452
 1916 008c DB20     		movs	r0, #219
 1917 008e FFF7FEFF 		bl	ssd1306_WriteCommand
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 48


 1918              	.LVL214:
 155:Core/Src/ssd1306.c **** 
 1919              		.loc 1 155 5 view .LVU453
 1920 0092 2020     		movs	r0, #32
 1921 0094 FFF7FEFF 		bl	ssd1306_WriteCommand
 1922              	.LVL215:
 157:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 1923              		.loc 1 157 5 view .LVU454
 1924 0098 8D20     		movs	r0, #141
 1925 009a FFF7FEFF 		bl	ssd1306_WriteCommand
 1926              	.LVL216:
 158:Core/Src/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 1927              		.loc 1 158 5 view .LVU455
 1928 009e 1420     		movs	r0, #20
 1929 00a0 FFF7FEFF 		bl	ssd1306_WriteCommand
 1930              	.LVL217:
 159:Core/Src/ssd1306.c **** 
 1931              		.loc 1 159 5 view .LVU456
 1932 00a4 0120     		movs	r0, #1
 1933 00a6 FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1934              	.LVL218:
 162:Core/Src/ssd1306.c ****     
 1935              		.loc 1 162 5 view .LVU457
 1936 00aa 0020     		movs	r0, #0
 1937 00ac FFF7FEFF 		bl	ssd1306_Fill
 1938              	.LVL219:
 165:Core/Src/ssd1306.c ****     
 1939              		.loc 1 165 5 view .LVU458
 1940 00b0 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1941              	.LVL220:
 168:Core/Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 1942              		.loc 1 168 5 view .LVU459
 168:Core/Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 1943              		.loc 1 168 22 is_stmt 0 view .LVU460
 1944 00b4 034B     		ldr	r3, .L135
 1945 00b6 0022     		movs	r2, #0
 1946 00b8 1A80     		strh	r2, [r3]	@ movhi
 169:Core/Src/ssd1306.c ****     
 1947              		.loc 1 169 5 is_stmt 1 view .LVU461
 169:Core/Src/ssd1306.c ****     
 1948              		.loc 1 169 22 is_stmt 0 view .LVU462
 1949 00ba 5A80     		strh	r2, [r3, #2]	@ movhi
 171:Core/Src/ssd1306.c **** }
 1950              		.loc 1 171 5 is_stmt 1 view .LVU463
 171:Core/Src/ssd1306.c **** }
 1951              		.loc 1 171 25 is_stmt 0 view .LVU464
 1952 00bc 0122     		movs	r2, #1
 1953 00be 1A71     		strb	r2, [r3, #4]
 172:Core/Src/ssd1306.c **** 
 1954              		.loc 1 172 1 view .LVU465
 1955 00c0 08BD     		pop	{r3, pc}
 1956              	.L136:
 1957 00c2 00BF     		.align	2
 1958              	.L135:
 1959 00c4 00000000 		.word	.LANCHOR1
 1960              		.cfi_endproc
 1961              	.LFE76:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 49


 1963              		.section	.text.ssd1306_GetDisplayOn,"ax",%progbits
 1964              		.align	1
 1965              		.global	ssd1306_GetDisplayOn
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1970              	ssd1306_GetDisplayOn:
 1971              	.LFB93:
 483:Core/Src/ssd1306.c **** 
 484:Core/Src/ssd1306.c **** uint8_t ssd1306_GetDisplayOn() {
 1972              		.loc 1 484 32 is_stmt 1 view -0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 0
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 1976              		@ link register save eliminated.
 485:Core/Src/ssd1306.c ****     return SSD1306.DisplayOn;
 1977              		.loc 1 485 5 view .LVU467
 486:Core/Src/ssd1306.c **** }
 1978              		.loc 1 486 1 is_stmt 0 view .LVU468
 1979 0000 014B     		ldr	r3, .L138
 1980 0002 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 1981 0004 7047     		bx	lr
 1982              	.L139:
 1983 0006 00BF     		.align	2
 1984              	.L138:
 1985 0008 00000000 		.word	.LANCHOR1
 1986              		.cfi_endproc
 1987              	.LFE93:
 1989              		.section	.bss.SSD1306,"aw",%nobits
 1990              		.align	2
 1991              		.set	.LANCHOR1,. + 0
 1994              	SSD1306:
 1995 0000 00000000 		.space	6
 1995      0000
 1996              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 1997              		.align	2
 1998              		.set	.LANCHOR0,. + 0
 2001              	SSD1306_Buffer:
 2002 0000 00000000 		.space	1056
 2002      00000000 
 2002      00000000 
 2002      00000000 
 2002      00000000 
 2003              		.text
 2004              	.Letext0:
 2005              		.file 2 "e:\\download\\gnu\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-20
 2006              		.file 3 "e:\\download\\gnu\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-20
 2007              		.file 4 "e:\\download\\gnu\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-20
 2008              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f205xx.h"
 2009              		.file 6 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 2010              		.file 7 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_dma.h"
 2011              		.file 8 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_i2c.h"
 2012              		.file 9 "Core/Inc/ssd1306_fonts.h"
 2013              		.file 10 "Core/Inc/ssd1306.h"
 2014              		.file 11 "e:\\download\\gnu\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2
 2015              		.file 12 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
 2016              		.file 13 "<built-in>"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 50


ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 ssd1306.c
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:22     .text.ssd1306_DegToRad:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:27     .text.ssd1306_DegToRad:00000000 ssd1306_DegToRad
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:62     .text.ssd1306_DegToRad:00000020 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:69     .text.ssd1306_NormalizeTo0_360:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:74     .text.ssd1306_NormalizeTo0_360:00000000 ssd1306_NormalizeTo0_360
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:108    .text.ssd1306_Reset:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:114    .text.ssd1306_Reset:00000000 ssd1306_Reset
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:127    .text.ssd1306_WriteCommand:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:133    .text.ssd1306_WriteCommand:00000000 ssd1306_WriteCommand
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:172    .text.ssd1306_WriteCommand:00000028 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:177    .text.ssd1306_WriteData:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:183    .text.ssd1306_WriteData:00000000 ssd1306_WriteData
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:223    .text.ssd1306_WriteData:00000024 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:228    .text.ssd1306_FillBuffer:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:234    .text.ssd1306_FillBuffer:00000000 ssd1306_FillBuffer
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:280    .text.ssd1306_FillBuffer:0000001c $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:285    .text.ssd1306_Fill:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:291    .text.ssd1306_Fill:00000000 ssd1306_Fill
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:334    .text.ssd1306_Fill:0000001c $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:339    .text.ssd1306_UpdateScreen:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:345    .text.ssd1306_UpdateScreen:00000000 ssd1306_UpdateScreen
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:409    .text.ssd1306_UpdateScreen:00000038 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:414    .text.ssd1306_DrawPixel:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:420    .text.ssd1306_DrawPixel:00000000 ssd1306_DrawPixel
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:486    .text.ssd1306_DrawPixel:00000048 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:491    .text.ssd1306_WriteChar:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:497    .text.ssd1306_WriteChar:00000000 ssd1306_WriteChar
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:667    .text.ssd1306_WriteChar:000000ac $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:672    .text.ssd1306_WriteString:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:678    .text.ssd1306_WriteString:00000000 ssd1306_WriteString
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:741    .text.ssd1306_SetCursor:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:747    .text.ssd1306_SetCursor:00000000 ssd1306_SetCursor
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:767    .text.ssd1306_SetCursor:00000008 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:772    .text.ssd1306_Line:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:778    .text.ssd1306_Line:00000000 ssd1306_Line
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:946    .text.ssd1306_Polyline:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:952    .text.ssd1306_Polyline:00000000 ssd1306_Polyline
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1043   .text.ssd1306_DrawArc:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1049   .text.ssd1306_DrawArc:00000000 ssd1306_DrawArc
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1299   .text.ssd1306_DrawArc:00000138 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1305   .text.ssd1306_DrawCircle:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1311   .text.ssd1306_DrawCircle:00000000 ssd1306_DrawCircle
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1478   .text.ssd1306_DrawRectangle:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1484   .text.ssd1306_DrawRectangle:00000000 ssd1306_DrawRectangle
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1552   .text.ssd1306_DrawBitmap:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1558   .text.ssd1306_DrawBitmap:00000000 ssd1306_DrawBitmap
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1707   .text.ssd1306_SetContrast:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1713   .text.ssd1306_SetContrast:00000000 ssd1306_SetContrast
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1745   .text.ssd1306_SetDisplayOn:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1751   .text.ssd1306_SetDisplayOn:00000000 ssd1306_SetDisplayOn
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1800   .text.ssd1306_SetDisplayOn:0000001c $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1805   .text.ssd1306_Init:00000000 $t
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1811   .text.ssd1306_Init:00000000 ssd1306_Init
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1959   .text.ssd1306_Init:000000c4 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1964   .text.ssd1306_GetDisplayOn:00000000 $t
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s 			page 52


C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1970   .text.ssd1306_GetDisplayOn:00000000 ssd1306_GetDisplayOn
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1985   .text.ssd1306_GetDisplayOn:00000008 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1990   .bss.SSD1306:00000000 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1994   .bss.SSD1306:00000000 SSD1306
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:1997   .bss.SSD1306_Buffer:00000000 $d
C:\Users\nguye\AppData\Local\Temp\cc9Urh4B.s:2001   .bss.SSD1306_Buffer:00000000 SSD1306_Buffer

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
HAL_I2C_Mem_Write
hi2c1
memcpy
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_i2d
__aeabi_d2iz
sin
cos
HAL_Delay
