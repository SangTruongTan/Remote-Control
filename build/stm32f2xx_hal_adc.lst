ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f2xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	ADC_Init:
  24              	.LVL0:
  25              	.LFB94:
  26              		.file 1 "Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c"
   1:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
   2:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @file    stm32f2xx_hal_adc.c
   4:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC) peripheral:
   7:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *           + IO operation functions
   9:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *           + State and errors functions
  10:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         
  11:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   @verbatim
  12:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ==============================================================================
  13:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  14:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ==============================================================================
  15:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   [..] 
  16:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  17:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  18:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  19:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Single and continuous conversion modes.
  20:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  21:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  22:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  23:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  24:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       injected conversion.
  25:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  26:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  27:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  28:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  29:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  30:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       slower speed.
  31:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  32:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 2


  33:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  34:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  35:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                      ##### How to use this driver #####
  36:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ==============================================================================
  37:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   [..]
  38:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  39:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  40:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (##) ADC pins configuration
  41:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  42:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  43:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  44:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  45:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  46:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  47:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  48:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  49:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  50:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  51:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  52:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  53:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  54:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  55:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  56:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                  priority than the input stream.
  57:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                        
  58:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  59:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ==============================================================================
  60:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   [..]
  61:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  62:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  63:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       using function HAL_ADC_Init().
  64:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  65:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  66:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  67:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  68:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  69:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  70:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       sequencer, ..., of injected group)
  71:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  72:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  73:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  74:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  75:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  76:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
  77:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  78:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  79:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  80:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  81:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  82:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ==============================================================================
  83:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   [..]  
  84:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  85:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       transfer by DMA.    
  86:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
  87:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      *** Polling mode IO operation ***
  88:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      =================================
  89:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..]    
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 3


  90:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  91:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  92:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  93:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  94:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  95:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        
  96:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  97:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      ===================================
  98:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..]    
  99:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      *** DMA mode IO operation ***    
 108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      ==============================
 109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                     
 118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      ============================================= 
 120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..]
 121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        
 123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..] 
 133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ==============================================================================
 137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   [..]
 138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Disable the ADC interface
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                (+++) Example:
 144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                    other device clock parameters configuration:
 146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 4


 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) ADC pins configuration
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       *** Callback registration ***
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ==============================================================================
 162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]
 163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      to register an interrupt callback.
 168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      and a pointer to the user callback function.
 184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]
 185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      weak function.
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]
 189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      and the Callback ID.
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      This function allows to reset following callbacks:
 193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 5


 204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..]
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]
 213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..]
 217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]
 223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      [..]
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      are set to the corresponding weak functions.
 232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     @endverbatim
 234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ******************************************************************************
 235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @attention
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *
 237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * All rights reserved.</center></h2>
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ******************************************************************************
 246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #include "stm32f2xx_hal.h"
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @addtogroup STM32F2xx_HAL_Driver
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
 253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @defgroup ADC ADC
 256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief ADC driver modules
 257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */ 
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 6


 261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @}
 276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *
 285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @verbatim    
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================
 287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) De-initialize the ADC. 
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****          
 293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @endverbatim
 294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *           
 301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *             
 308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
 311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check ADC handle */
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(hadc == NULL)
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 7


 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     return HAL_ERROR;
 320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
 323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
 341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Init the ADC Callback settings */
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Init the low level hardware */
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
 357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Init the low level hardware */
 358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Initialize ADC error code */
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* correctly completed.                                                     */
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state */
 373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 8


 375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC parameters */
 378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_Init(hadc);
 379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to none */
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the ADC state */
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
 389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Release Lock */
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return tmp_hal_status;
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check ADC handle */
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(hadc == NULL)
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     return HAL_ERROR;
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set ADC state */
 420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Disable ADC peripheral */
 424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* correctly completed.                                                     */
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 9


 432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
 439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to none */
 444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state */
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process unlocked */
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return tmp_hal_status;
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         This parameter can be one of the following values:
 465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if (pCallback == NULL)
 481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update the error code */
 483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     return HAL_ERROR;
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 10


 489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     switch (CallbackID)
 491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       default :
 521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Update the error code */
 522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Return error status */
 525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         status = HAL_ERROR;
 526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     switch (CallbackID)
 532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       default :
 542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Update the error code */
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Return error status */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 11


 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         status = HAL_ERROR;
 547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
 551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update the error code */
 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Return error status */
 556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     status =  HAL_ERROR;
 557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return status;
 560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
 564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
 565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
 568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         This parameter can be one of the following values:
 569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     switch (CallbackID)
 586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
 589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
 593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 12


 603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
 605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
 609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
 613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       default :
 616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Update the error code */
 617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Return error status */
 620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         status =  HAL_ERROR;
 621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     switch (CallbackID)
 627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       default :
 637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Update the error code */
 638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Return error status */
 641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         status =  HAL_ERROR;
 642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         break;
 643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
 646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update the error code */
 648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Return error status */
 651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     status =  HAL_ERROR;
 652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return status;
 655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 13


 660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
 664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   UNUSED(hadc);
 669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****    */ 
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
 679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 683:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   UNUSED(hadc);
 684:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 685:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 686:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****    */ 
 687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 689:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 690:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @}
 691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 692:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 693:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 694:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *  @brief    IO operation functions 
 695:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *
 696:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @verbatim   
 697:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================
 698:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              ##### IO operation functions #####
 699:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================  
 700:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 701:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Start conversion of regular channel.
 702:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 703:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 704:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 705:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 707:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 708:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                
 709:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @endverbatim
 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
 711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 713:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 715:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 14


 717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
 718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 719:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 722:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 723:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
 724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 726:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 727:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
 729:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Enable the ADC peripheral */
 731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 732:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 734:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable the Peripheral */
 736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 738:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 739:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       counter--;
 744:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 747:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 749:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 750:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state                                                          */
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 752:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 755:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 756:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* update ADC state.                                                      */
 759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 766:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 769:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     else
 771:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Reset ADC all error code fields */
 773:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 15


 774:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 775:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Process unlocked */
 777:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 778:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 780:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 782:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 783:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 784:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 785:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Check if Multimode enabled */
 786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 787:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     else
 796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 800:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 802:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 804:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 805:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
 806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update ADC state machine to error */
 808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 810:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
 811:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 813:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 814:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 817:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 819:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 820:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * 
 821:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 822:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 824:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *
 826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status.
 827:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 828:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 16


 831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
 835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 836:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Disable ADC peripheral */
 838:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state */
 844:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 846:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 847:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 848:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 849:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process unlocked */
 850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 851:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
 853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
 854:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 856:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 858:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 859:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         conversion) are cleared by this function.
 860:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 864:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 865:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         be performed on the complete sequence.
 866:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 867:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 868:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 869:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
 870:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 871:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 873:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tickstart = 0U;
 874:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  
 875:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* each conversion:                                                       */
 877:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 879:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 884:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update ADC state machine to error */
 885:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 887:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Process unlocked */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 17


 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 889:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     return HAL_ERROR;
 891:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 893:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Get tick */ 
 894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tickstart = HAL_GetTick();
 895:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 896:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check End of conversion flag */
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 898:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 899:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 901:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 903:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 904:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 907:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Process unlocked */
 908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 909:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         return HAL_TIMEOUT;
 911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 912:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 913:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 915:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Clear regular group conversion flag */
 916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 918:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Update ADC state machine */
 919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 921:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Note: On STM32F2, there is no independent flag of end of sequence.       */
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /*       of end of sequence.                                                */
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 932:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state */
 933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 934:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     { 
 937:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 938:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 939:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 940:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 941:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return ADC state */
 942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
 943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 944:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 18


 945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
 946:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Poll for conversion event
 947:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 948:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 949:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  EventType the ADC event type.
 950:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *          This parameter can be one of the following values:
 951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 952:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 953:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 954:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
 955:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
 956:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 958:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tickstart = 0U;
 959:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 960:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
 961:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 962:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 964:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Get tick */
 965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tickstart = HAL_GetTick();
 966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 967:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check selected event flag */
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 969:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 970:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Check for the Timeout */
 971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 972:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 974:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 975:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 977:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 978:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Process unlocked */
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 980:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         return HAL_TIMEOUT;
 982:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 983:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 984:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 985:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 986:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
 987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 988:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 989:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state */
 990:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 991:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 992:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
 993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 995:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Overrun event */
 996:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
 997:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 998:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state */
 999:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1000:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to overrun */
1001:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 19


1002:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear ADC overrun flag */
1004:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1005:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1006:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1007:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return ADC state */
1008:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
1009:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1011:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1012:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1013:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
1014:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1015:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1016:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status.
1017:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1018:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1020:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
1021:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1022:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
1023:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1024:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1025:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1026:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
1028:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1029:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Enable the ADC peripheral */
1030:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1031:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
1033:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
1034:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable the Peripheral */
1035:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1036:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1037:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1038:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
1041:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       counter--;
1043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1044:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1045:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1046:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
1048:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1049:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state                                                          */
1050:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1051:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1052:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1053:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1054:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1055:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1056:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1057:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* update ADC state.                                                      */
1058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 20


1059:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1060:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1061:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1062:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1063:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1065:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1068:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1069:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     else
1070:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1071:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Reset ADC all error code fields */
1072:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1073:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1074:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1075:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Process unlocked */
1076:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1077:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1079:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1080:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1081:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1082:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1083:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1084:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1085:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
1086:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1087:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Check if Multimode enabled */
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
1089:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
1093:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1095:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1097:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     else
1098:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1099:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
1101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
1102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
1108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update ADC state machine to error */
1110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
1113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 21


1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * 
1123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
1124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *
1125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status.
1128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
1136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Disable ADC peripheral */
1139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
1140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
1143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
1145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
1146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state */
1148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process unlocked */
1154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
1157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
1158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
1169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
1171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 22


1173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
1174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
1176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
1177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
1178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(tmp1 && tmp2)
1179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Set ADC state */
1184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
1185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Note: On STM32F2, there is no independent flag of end of sequence.   */
1190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       of end of sequence.                                            */
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
1195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
1197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Set ADC state */
1205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
1209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Conversion complete callback */
1214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
1217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear regular group conversion flag */
1221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
1225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
1226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
1227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(tmp1 && tmp2)
1228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 23


1230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Set ADC state */
1233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
1237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
1238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
1239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* interruption disabling above).                                       */
1240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
1241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
1242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
1243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
1244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
1245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
1246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
1248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Set ADC state */
1251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
1252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
1254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       { 
1255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Conversion complete callback */ 
1260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       hadc->InjectedConvCpltCallback(hadc);
1262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
1263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
1264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear injected group conversion flag */
1267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
1268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
1271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
1272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check Analog watchdog flag */
1273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(tmp1 && tmp2)
1274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
1276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Set ADC state */
1278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Level out of window callback */
1281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       hadc->LevelOutOfWindowCallback(hadc);
1283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
1284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
1285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 24


1287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
1293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
1294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check Overrun flag */
1295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(tmp1 && tmp2)
1296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Note: On STM32F2, ADC overrun can be set through other parameters    */
1298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
1299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       details.                                                       */
1300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to overrun */
1302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear ADC overrun flag */
1305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Error callback */ 
1308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
1311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
1312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear the Overrun flag */
1315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
1326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
1330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
1332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
1337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Enable the ADC peripheral */
1339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
1342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
1343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable the Peripheral */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 25


1344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
1350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       counter--;
1352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
1357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC state                                                          */
1359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* update ADC state.                                                      */
1367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     else
1379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Reset ADC all error code fields */
1381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Process unlocked */
1385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
1388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the DMA error callback */
1396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* start (in case of SW start):                                           */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 26


1401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable ADC DMA mode */
1410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
1411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Start the DMA channel */
1413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Check if Multimode enabled */
1416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
1417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
1419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
1420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
1421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     else
1426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
1429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
1430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
1436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update ADC state machine to error */
1438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
1441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
1446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
1453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 27


1458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
1459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
1462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
1463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Disable ADC peripheral */
1466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
1467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
1470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
1473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Disable ADC overrun interrupt */
1481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Set ADC state */
1484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process unlocked */
1491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
1494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return tmp_hal_status;
1495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval Converted value
1502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {       
1505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return hadc->Instance->DR;
1507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 28


1515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   UNUSED(hadc);
1519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****    */
1522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   UNUSED(hadc);
1534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****    */
1537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   UNUSED(hadc);
1549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****    */
1552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Error ADC callback.
1556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   UNUSED(hadc);
1570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 29


1572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****    */
1573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @}
1577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *
1582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @verbatim   
1583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================
1584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****              ##### Peripheral Control functions #####
1585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================  
1586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Configure regular channels. 
1588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Configure injected channels.
1589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Configure multimode.
1590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Configure the analog watch dog.
1591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @endverbatim
1593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
1594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /**
1597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status
1603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
1607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
1609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
1615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
1618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear the old sample time */
1620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
1621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the new sample time */
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
1624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear the old sample time */
1628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 30


1629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the new sample time */
1631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
1632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* For Rank 1 to 6 */
1635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if (sConfig->Rank < 7U)
1636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
1639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
1642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* For Rank 7 to 12 */
1644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
1645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
1648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
1651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* For Rank 13 to 16 */
1653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
1654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
1657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
1660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected enable VBAT Channel */
1663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
1664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable the VBAT channel*/
1666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC->CCR |= ADC_CCR_VBATE;
1667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VRE
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
1671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable the TSVREFE channel*/
1673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     ADC->CCR |= ADC_CCR_TSVREFE;
1674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
1676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
1680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       while(counter != 0U)
1681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
1682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         counter--;
1683:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1684:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1685:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 31


1686:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process unlocked */
1688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1689:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1690:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
1691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
1692:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1693:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1694:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1695:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1696:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1697:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * is on going.
1698:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1699:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1700:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1701:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1702:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1703:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1704:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1705:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  AnalogWDGConfig pointer to an ADC_AnalogWDGConfTypeDef structure 
1707:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1708:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL status	  
1709:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1713:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tmp = 0U;
1714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1715:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
1717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1719:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1722:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1723:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
1725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1726:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1727:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process locked */
1728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_LOCK(hadc);
1729:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
1731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1732:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
1734:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
1736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1738:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
1739:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 32


1743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1744:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
1746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1747:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set the high threshold */
1748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
1749:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1750:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set the low threshold */
1751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
1752:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
1755:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1756:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
1758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Process unlocked */
1760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return function status */
1763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return HAL_OK;
1764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1766:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @}
1768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1769:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1771:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  *
1773:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @verbatim   
1774:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================
1775:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  ===============================================================================  
1777:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     [..]
1778:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     This subsection provides functions allowing to
1779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Check the ADC state
1780:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       (+) Check the ADC Error
1781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****          
1782:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** @endverbatim
1783:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
1784:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1785:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1787:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  return the ADC state
1788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval HAL state
1791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return ADC state */
1795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return hadc->State;
1796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Return the ADC error code
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 33


1800:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1802:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval ADC Error Code
1803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1804:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1805:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return hadc->ErrorCode;
1807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1810:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @}
1811:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1813:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1814:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @{
1815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1817:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1819:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1820:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1821:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1822:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1824:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
  27              		.loc 1 1825 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set ADC parameters */
1827:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1828:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ADC->CCR &= ~(ADC_CCR_ADCPRE);
  32              		.loc 1 1828 3 view .LVU1
  33              		.loc 1 1828 12 is_stmt 0 view .LVU2
  34 0000 4D4B     		ldr	r3, .L6
  35 0002 5A68     		ldr	r2, [r3, #4]
  36 0004 22F44032 		bic	r2, r2, #196608
  37 0008 5A60     		str	r2, [r3, #4]
1829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ADC->CCR |=  hadc->Init.ClockPrescaler;
  38              		.loc 1 1829 3 is_stmt 1 view .LVU3
  39              		.loc 1 1829 12 is_stmt 0 view .LVU4
  40 000a 5A68     		ldr	r2, [r3, #4]
  41              		.loc 1 1829 26 view .LVU5
  42 000c 4168     		ldr	r1, [r0, #4]
  43              		.loc 1 1829 12 view .LVU6
  44 000e 0A43     		orrs	r2, r2, r1
  45 0010 5A60     		str	r2, [r3, #4]
1830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set ADC scan mode */
1832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
  46              		.loc 1 1832 3 is_stmt 1 view .LVU7
  47              		.loc 1 1832 7 is_stmt 0 view .LVU8
  48 0012 0268     		ldr	r2, [r0]
  49              		.loc 1 1832 23 view .LVU9
  50 0014 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 34


  51 0016 23F48073 		bic	r3, r3, #256
  52 001a 5360     		str	r3, [r2, #4]
1833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
  53              		.loc 1 1833 3 is_stmt 1 view .LVU10
  54              		.loc 1 1833 7 is_stmt 0 view .LVU11
  55 001c 0268     		ldr	r2, [r0]
  56              		.loc 1 1833 23 view .LVU12
  57 001e 5368     		ldr	r3, [r2, #4]
  58              		.loc 1 1833 27 view .LVU13
  59 0020 0169     		ldr	r1, [r0, #16]
  60              		.loc 1 1833 23 view .LVU14
  61 0022 43EA0123 		orr	r3, r3, r1, lsl #8
  62 0026 5360     		str	r3, [r2, #4]
1834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set ADC resolution */
1836:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
  63              		.loc 1 1836 3 is_stmt 1 view .LVU15
  64              		.loc 1 1836 7 is_stmt 0 view .LVU16
  65 0028 0268     		ldr	r2, [r0]
  66              		.loc 1 1836 23 view .LVU17
  67 002a 5368     		ldr	r3, [r2, #4]
  68 002c 23F04073 		bic	r3, r3, #50331648
  69 0030 5360     		str	r3, [r2, #4]
1837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
  70              		.loc 1 1837 3 is_stmt 1 view .LVU18
  71              		.loc 1 1837 7 is_stmt 0 view .LVU19
  72 0032 0268     		ldr	r2, [r0]
  73              		.loc 1 1837 23 view .LVU20
  74 0034 5368     		ldr	r3, [r2, #4]
  75              		.loc 1 1837 37 view .LVU21
  76 0036 8168     		ldr	r1, [r0, #8]
  77              		.loc 1 1837 23 view .LVU22
  78 0038 0B43     		orrs	r3, r3, r1
  79 003a 5360     		str	r3, [r2, #4]
1838:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set ADC data alignment */
1840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
  80              		.loc 1 1840 3 is_stmt 1 view .LVU23
  81              		.loc 1 1840 7 is_stmt 0 view .LVU24
  82 003c 0268     		ldr	r2, [r0]
  83              		.loc 1 1840 23 view .LVU25
  84 003e 9368     		ldr	r3, [r2, #8]
  85 0040 23F40063 		bic	r3, r3, #2048
  86 0044 9360     		str	r3, [r2, #8]
1841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
  87              		.loc 1 1841 3 is_stmt 1 view .LVU26
  88              		.loc 1 1841 7 is_stmt 0 view .LVU27
  89 0046 0268     		ldr	r2, [r0]
  90              		.loc 1 1841 23 view .LVU28
  91 0048 9368     		ldr	r3, [r2, #8]
  92              		.loc 1 1841 36 view .LVU29
  93 004a C168     		ldr	r1, [r0, #12]
  94              		.loc 1 1841 23 view .LVU30
  95 004c 0B43     		orrs	r3, r3, r1
  96 004e 9360     		str	r3, [r2, #8]
1842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 35


1844:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* start.                                                                 */
1845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1846:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1847:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /*       software start.                                                  */
1848:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  97              		.loc 1 1848 3 is_stmt 1 view .LVU31
  98              		.loc 1 1848 16 is_stmt 0 view .LVU32
  99 0050 826A     		ldr	r2, [r0, #40]
 100              		.loc 1 1848 5 view .LVU33
 101 0052 3A4B     		ldr	r3, .L6+4
 102 0054 9A42     		cmp	r2, r3
 103 0056 5DD0     		beq	.L2
1849:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Select external trigger to start conversion */
1851:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 104              		.loc 1 1851 5 is_stmt 1 view .LVU34
 105              		.loc 1 1851 9 is_stmt 0 view .LVU35
 106 0058 0268     		ldr	r2, [r0]
 107              		.loc 1 1851 25 view .LVU36
 108 005a 9368     		ldr	r3, [r2, #8]
 109 005c 23F07063 		bic	r3, r3, #251658240
 110 0060 9360     		str	r3, [r2, #8]
1852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 111              		.loc 1 1852 5 is_stmt 1 view .LVU37
 112              		.loc 1 1852 9 is_stmt 0 view .LVU38
 113 0062 0268     		ldr	r2, [r0]
 114              		.loc 1 1852 25 view .LVU39
 115 0064 9368     		ldr	r3, [r2, #8]
 116              		.loc 1 1852 38 view .LVU40
 117 0066 816A     		ldr	r1, [r0, #40]
 118              		.loc 1 1852 25 view .LVU41
 119 0068 0B43     		orrs	r3, r3, r1
 120 006a 9360     		str	r3, [r2, #8]
1853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1854:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Select external trigger polarity */
1855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 121              		.loc 1 1855 5 is_stmt 1 view .LVU42
 122              		.loc 1 1855 9 is_stmt 0 view .LVU43
 123 006c 0268     		ldr	r2, [r0]
 124              		.loc 1 1855 25 view .LVU44
 125 006e 9368     		ldr	r3, [r2, #8]
 126 0070 23F04053 		bic	r3, r3, #805306368
 127 0074 9360     		str	r3, [r2, #8]
1856:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 128              		.loc 1 1856 5 is_stmt 1 view .LVU45
 129              		.loc 1 1856 9 is_stmt 0 view .LVU46
 130 0076 0268     		ldr	r2, [r0]
 131              		.loc 1 1856 25 view .LVU47
 132 0078 9368     		ldr	r3, [r2, #8]
 133              		.loc 1 1856 38 view .LVU48
 134 007a C16A     		ldr	r1, [r0, #44]
 135              		.loc 1 1856 25 view .LVU49
 136 007c 0B43     		orrs	r3, r3, r1
 137 007e 9360     		str	r3, [r2, #8]
 138              	.L3:
1857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1858:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 36


1859:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1860:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Reset the external trigger */
1861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
1862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
1863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1864:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1865:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1866:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 139              		.loc 1 1866 3 is_stmt 1 view .LVU50
 140              		.loc 1 1866 7 is_stmt 0 view .LVU51
 141 0080 0268     		ldr	r2, [r0]
 142              		.loc 1 1866 23 view .LVU52
 143 0082 9368     		ldr	r3, [r2, #8]
 144 0084 23F00203 		bic	r3, r3, #2
 145 0088 9360     		str	r3, [r2, #8]
1867:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 146              		.loc 1 1867 3 is_stmt 1 view .LVU53
 147              		.loc 1 1867 7 is_stmt 0 view .LVU54
 148 008a 0268     		ldr	r2, [r0]
 149              		.loc 1 1867 23 view .LVU55
 150 008c 9368     		ldr	r3, [r2, #8]
 151              		.loc 1 1867 26 view .LVU56
 152 008e 017E     		ldrb	r1, [r0, #24]	@ zero_extendqisi2
 153              		.loc 1 1867 23 view .LVU57
 154 0090 43EA4103 		orr	r3, r3, r1, lsl #1
 155 0094 9360     		str	r3, [r2, #8]
1868:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1869:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 156              		.loc 1 1869 3 is_stmt 1 view .LVU58
 157              		.loc 1 1869 16 is_stmt 0 view .LVU59
 158 0096 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 159              		.loc 1 1869 5 view .LVU60
 160 009a 002B     		cmp	r3, #0
 161 009c 45D0     		beq	.L4
1870:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1871:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
 162              		.loc 1 1871 5 is_stmt 1 view .LVU61
1872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1873:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1874:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 163              		.loc 1 1874 5 view .LVU62
 164              		.loc 1 1874 9 is_stmt 0 view .LVU63
 165 009e 0268     		ldr	r2, [r0]
 166              		.loc 1 1874 25 view .LVU64
 167 00a0 5368     		ldr	r3, [r2, #4]
 168 00a2 43F40063 		orr	r3, r3, #2048
 169 00a6 5360     		str	r3, [r2, #4]
1875:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1877:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 170              		.loc 1 1877 5 is_stmt 1 view .LVU65
 171              		.loc 1 1877 9 is_stmt 0 view .LVU66
 172 00a8 0268     		ldr	r2, [r0]
 173              		.loc 1 1877 25 view .LVU67
 174 00aa 5368     		ldr	r3, [r2, #4]
 175 00ac 23F46043 		bic	r3, r3, #57344
 176 00b0 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 37


1878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 177              		.loc 1 1878 5 is_stmt 1 view .LVU68
 178              		.loc 1 1878 29 is_stmt 0 view .LVU69
 179 00b2 436A     		ldr	r3, [r0, #36]
 180 00b4 013B     		subs	r3, r3, #1
 181              	.LVL1:
 182              	.LBB4:
 183              	.LBI4:
 184              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 38


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 39


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 40


 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 41


 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 42


 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 43


 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 44


 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 45


 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 46


 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 47


 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 48


 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 49


 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 50


 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 51


 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 52


 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 53


 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 54


 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 185              		.loc 2 981 31 is_stmt 1 view .LVU70
 186              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 187              		.loc 2 983 3 view .LVU71
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 188              		.loc 2 988 4 view .LVU72
 189 00b6 4FF46042 		mov	r2, #57344
 190              		.syntax unified
 191              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 192 00ba 92FAA2F2 		rbit r2, r2
 193              	@ 0 "" 2
 194              	.LVL2:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 195              		.loc 2 1001 3 view .LVU73
 196              		.loc 2 1001 3 is_stmt 0 view .LVU74
 197              		.thumb
 198              		.syntax unified
 199              	.LBE5:
 200              	.LBE4:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 55


 201              		.loc 1 1878 29 view .LVU75
 202 00be B2FA82F2 		clz	r2, r2
 203 00c2 9340     		lsls	r3, r3, r2
 204              		.loc 1 1878 9 view .LVU76
 205 00c4 0168     		ldr	r1, [r0]
 206              		.loc 1 1878 25 view .LVU77
 207 00c6 4A68     		ldr	r2, [r1, #4]
 208 00c8 1343     		orrs	r3, r3, r2
 209 00ca 4B60     		str	r3, [r1, #4]
 210              	.L5:
1879:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else
1881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
1884:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1885:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set ADC number of conversion */
1887:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 211              		.loc 1 1887 3 is_stmt 1 view .LVU78
 212              		.loc 1 1887 7 is_stmt 0 view .LVU79
 213 00cc 0268     		ldr	r2, [r0]
 214              		.loc 1 1887 24 view .LVU80
 215 00ce D36A     		ldr	r3, [r2, #44]
 216 00d0 23F47003 		bic	r3, r3, #15728640
 217 00d4 D362     		str	r3, [r2, #44]
1888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 218              		.loc 1 1888 3 is_stmt 1 view .LVU81
 219              		.loc 1 1888 7 is_stmt 0 view .LVU82
 220 00d6 0168     		ldr	r1, [r0]
 221              		.loc 1 1888 24 view .LVU83
 222 00d8 CB6A     		ldr	r3, [r1, #44]
 223              		.loc 1 1888 28 view .LVU84
 224 00da C269     		ldr	r2, [r0, #28]
 225 00dc 013A     		subs	r2, r2, #1
 226              		.loc 1 1888 24 view .LVU85
 227 00de 43EA0253 		orr	r3, r3, r2, lsl #20
 228 00e2 CB62     		str	r3, [r1, #44]
1889:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1891:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 229              		.loc 1 1891 3 is_stmt 1 view .LVU86
 230              		.loc 1 1891 7 is_stmt 0 view .LVU87
 231 00e4 0268     		ldr	r2, [r0]
 232              		.loc 1 1891 23 view .LVU88
 233 00e6 9368     		ldr	r3, [r2, #8]
 234 00e8 23F40073 		bic	r3, r3, #512
 235 00ec 9360     		str	r3, [r2, #8]
1892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 236              		.loc 1 1892 3 is_stmt 1 view .LVU89
 237              		.loc 1 1892 7 is_stmt 0 view .LVU90
 238 00ee 0268     		ldr	r2, [r0]
 239              		.loc 1 1892 23 view .LVU91
 240 00f0 9368     		ldr	r3, [r2, #8]
 241              		.loc 1 1892 26 view .LVU92
 242 00f2 90F83010 		ldrb	r1, [r0, #48]	@ zero_extendqisi2
 243              		.loc 1 1892 23 view .LVU93
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 56


 244 00f6 43EA4123 		orr	r3, r3, r1, lsl #9
 245 00fa 9360     		str	r3, [r2, #8]
1893:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1895:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 246              		.loc 1 1895 3 is_stmt 1 view .LVU94
 247              		.loc 1 1895 7 is_stmt 0 view .LVU95
 248 00fc 0268     		ldr	r2, [r0]
 249              		.loc 1 1895 23 view .LVU96
 250 00fe 9368     		ldr	r3, [r2, #8]
 251 0100 23F48063 		bic	r3, r3, #1024
 252 0104 9360     		str	r3, [r2, #8]
1896:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 253              		.loc 1 1896 3 is_stmt 1 view .LVU97
 254              		.loc 1 1896 7 is_stmt 0 view .LVU98
 255 0106 0268     		ldr	r2, [r0]
 256              		.loc 1 1896 23 view .LVU99
 257 0108 9368     		ldr	r3, [r2, #8]
 258              		.loc 1 1896 26 view .LVU100
 259 010a 4169     		ldr	r1, [r0, #20]
 260              		.loc 1 1896 23 view .LVU101
 261 010c 43EA8123 		orr	r3, r3, r1, lsl #10
 262 0110 9360     		str	r3, [r2, #8]
1897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 263              		.loc 1 1897 1 view .LVU102
 264 0112 7047     		bx	lr
 265              	.L2:
1861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 266              		.loc 1 1861 5 is_stmt 1 view .LVU103
1861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 267              		.loc 1 1861 9 is_stmt 0 view .LVU104
 268 0114 0268     		ldr	r2, [r0]
1861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 269              		.loc 1 1861 25 view .LVU105
 270 0116 9368     		ldr	r3, [r2, #8]
 271 0118 23F07063 		bic	r3, r3, #251658240
 272 011c 9360     		str	r3, [r2, #8]
1862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 273              		.loc 1 1862 5 is_stmt 1 view .LVU106
1862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 274              		.loc 1 1862 9 is_stmt 0 view .LVU107
 275 011e 0268     		ldr	r2, [r0]
1862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 276              		.loc 1 1862 25 view .LVU108
 277 0120 9368     		ldr	r3, [r2, #8]
 278 0122 23F04053 		bic	r3, r3, #805306368
 279 0126 9360     		str	r3, [r2, #8]
 280 0128 AAE7     		b	.L3
 281              	.L4:
1883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 282              		.loc 1 1883 5 is_stmt 1 view .LVU109
1883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 283              		.loc 1 1883 9 is_stmt 0 view .LVU110
 284 012a 0268     		ldr	r2, [r0]
1883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 285              		.loc 1 1883 25 view .LVU111
 286 012c 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 57


 287 012e 23F40063 		bic	r3, r3, #2048
 288 0132 5360     		str	r3, [r2, #4]
 289 0134 CAE7     		b	.L5
 290              	.L7:
 291 0136 00BF     		.align	2
 292              	.L6:
 293 0138 00230140 		.word	1073816320
 294 013c 0100000F 		.word	251658241
 295              		.cfi_endproc
 296              	.LFE94:
 298              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 299              		.align	1
 300              		.weak	HAL_ADC_MspInit
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	HAL_ADC_MspInit:
 306              	.LVL3:
 307              	.LFB74:
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 308              		.loc 1 666 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 313              		.loc 1 668 3 view .LVU113
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 314              		.loc 1 672 1 is_stmt 0 view .LVU114
 315 0000 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE74:
 319              		.section	.text.HAL_ADC_Init,"ax",%progbits
 320              		.align	1
 321              		.global	HAL_ADC_Init
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	HAL_ADC_Init:
 327              	.LVL4:
 328              	.LFB72:
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 329              		.loc 1 313 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 333              		.loc 1 314 3 view .LVU116
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 334              		.loc 1 317 3 view .LVU117
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 335              		.loc 1 317 5 is_stmt 0 view .LVU118
 336 0000 38B3     		cbz	r0, .L13
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 337              		.loc 1 313 1 view .LVU119
 338 0002 10B5     		push	{r4, lr}
 339              	.LCFI0:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 58


 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
 343 0004 0446     		mov	r4, r0
 323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 344              		.loc 1 323 3 is_stmt 1 view .LVU120
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 345              		.loc 1 324 3 view .LVU121
 325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 346              		.loc 1 325 3 view .LVU122
 326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 347              		.loc 1 326 3 view .LVU123
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 348              		.loc 1 327 3 view .LVU124
 328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 349              		.loc 1 328 3 view .LVU125
 329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 350              		.loc 1 329 3 view .LVU126
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 351              		.loc 1 330 3 view .LVU127
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 352              		.loc 1 331 3 view .LVU128
 332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 353              		.loc 1 332 3 view .LVU129
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 354              		.loc 1 333 3 view .LVU130
 335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 355              		.loc 1 335 3 view .LVU131
 337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 356              		.loc 1 337 5 view .LVU132
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 357              		.loc 1 340 3 view .LVU133
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 358              		.loc 1 340 10 is_stmt 0 view .LVU134
 359 0006 036C     		ldr	r3, [r0, #64]
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 360              		.loc 1 340 5 view .LVU135
 361 0008 43B1     		cbz	r3, .L19
 362              	.LVL5:
 363              	.L11:
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 364              		.loc 1 370 3 is_stmt 1 view .LVU136
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 365              		.loc 1 370 7 is_stmt 0 view .LVU137
 366 000a 236C     		ldr	r3, [r4, #64]
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 367              		.loc 1 370 6 view .LVU138
 368 000c 13F0100F 		tst	r3, #16
 369 0010 0BD0     		beq	.L20
 390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 370              		.loc 1 390 20 view .LVU139
 371 0012 0120     		movs	r0, #1
 372              	.L12:
 373              	.LVL6:
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 374              		.loc 1 394 3 is_stmt 1 view .LVU140
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 59


 375              		.loc 1 394 3 view .LVU141
 376 0014 0023     		movs	r3, #0
 377 0016 84F83C30 		strb	r3, [r4, #60]
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 378              		.loc 1 394 3 view .LVU142
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 379              		.loc 1 397 3 view .LVU143
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 380              		.loc 1 398 1 is_stmt 0 view .LVU144
 381 001a 10BD     		pop	{r4, pc}
 382              	.LVL7:
 383              	.L19:
 358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 384              		.loc 1 358 5 is_stmt 1 view .LVU145
 385 001c FFF7FEFF 		bl	HAL_ADC_MspInit
 386              	.LVL8:
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 387              		.loc 1 362 5 view .LVU146
 388 0020 0023     		movs	r3, #0
 389 0022 6364     		str	r3, [r4, #68]
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 390              		.loc 1 365 5 view .LVU147
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 391              		.loc 1 365 16 is_stmt 0 view .LVU148
 392 0024 84F83C30 		strb	r3, [r4, #60]
 393 0028 EFE7     		b	.L11
 394              	.L20:
 373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 395              		.loc 1 373 5 is_stmt 1 view .LVU149
 396 002a 236C     		ldr	r3, [r4, #64]
 397 002c 23F48853 		bic	r3, r3, #4352
 398 0030 23F00203 		bic	r3, r3, #2
 399 0034 43F00203 		orr	r3, r3, #2
 400 0038 2364     		str	r3, [r4, #64]
 378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 401              		.loc 1 378 5 view .LVU150
 402 003a 2046     		mov	r0, r4
 403 003c FFF7FEFF 		bl	ADC_Init
 404              	.LVL9:
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 405              		.loc 1 381 5 view .LVU151
 406 0040 0020     		movs	r0, #0
 407 0042 6064     		str	r0, [r4, #68]
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 408              		.loc 1 384 5 view .LVU152
 409 0044 236C     		ldr	r3, [r4, #64]
 410 0046 23F00303 		bic	r3, r3, #3
 411 004a 43F00103 		orr	r3, r3, #1
 412 004e 2364     		str	r3, [r4, #64]
 413 0050 E0E7     		b	.L12
 414              	.LVL10:
 415              	.L13:
 416              	.LCFI1:
 417              		.cfi_def_cfa_offset 0
 418              		.cfi_restore 4
 419              		.cfi_restore 14
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 60


 420              		.loc 1 319 12 is_stmt 0 view .LVU153
 421 0052 0120     		movs	r0, #1
 422              	.LVL11:
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 423              		.loc 1 398 1 view .LVU154
 424 0054 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE72:
 428              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 429              		.align	1
 430              		.weak	HAL_ADC_MspDeInit
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	HAL_ADC_MspDeInit:
 436              	.LVL12:
 437              	.LFB75:
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 438              		.loc 1 681 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 683:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 443              		.loc 1 683 3 view .LVU156
 687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 444              		.loc 1 687 1 is_stmt 0 view .LVU157
 445 0000 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE75:
 449              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 450              		.align	1
 451              		.global	HAL_ADC_DeInit
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	HAL_ADC_DeInit:
 457              	.LVL13:
 458              	.LFB73:
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 459              		.loc 1 407 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 463              		.loc 1 408 3 view .LVU159
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 464              		.loc 1 411 3 view .LVU160
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 465              		.loc 1 411 5 is_stmt 0 view .LVU161
 466 0000 C8B1     		cbz	r0, .L25
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 467              		.loc 1 407 1 view .LVU162
 468 0002 10B5     		push	{r4, lr}
 469              	.LCFI2:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 61


 472              		.cfi_offset 14, -4
 473 0004 0446     		mov	r4, r0
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 474              		.loc 1 417 3 is_stmt 1 view .LVU163
 420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 475              		.loc 1 420 3 view .LVU164
 476 0006 036C     		ldr	r3, [r0, #64]
 477 0008 43F00203 		orr	r3, r3, #2
 478 000c 0364     		str	r3, [r0, #64]
 424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 479              		.loc 1 424 3 view .LVU165
 480 000e 0268     		ldr	r2, [r0]
 481 0010 9368     		ldr	r3, [r2, #8]
 482 0012 23F00103 		bic	r3, r3, #1
 483 0016 9360     		str	r3, [r2, #8]
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 484              		.loc 1 428 3 view .LVU166
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 485              		.loc 1 428 6 is_stmt 0 view .LVU167
 486 0018 0368     		ldr	r3, [r0]
 487 001a 9B68     		ldr	r3, [r3, #8]
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 488              		.loc 1 428 5 view .LVU168
 489 001c 13F0010F 		tst	r3, #1
 490 0020 03D0     		beq	.L30
 491              	.LVL14:
 492              	.L24:
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 493              		.loc 1 451 3 is_stmt 1 view .LVU169
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 494              		.loc 1 451 3 view .LVU170
 495 0022 0020     		movs	r0, #0
 496 0024 84F83C00 		strb	r0, [r4, #60]
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 497              		.loc 1 451 3 view .LVU171
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 498              		.loc 1 454 3 view .LVU172
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 499              		.loc 1 455 1 is_stmt 0 view .LVU173
 500 0028 10BD     		pop	{r4, pc}
 501              	.LVL15:
 502              	.L30:
 440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 503              		.loc 1 440 3 is_stmt 1 view .LVU174
 504 002a FFF7FEFF 		bl	HAL_ADC_MspDeInit
 505              	.LVL16:
 444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 506              		.loc 1 444 5 view .LVU175
 507 002e 0023     		movs	r3, #0
 508 0030 6364     		str	r3, [r4, #68]
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 509              		.loc 1 447 5 view .LVU176
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 510              		.loc 1 447 17 is_stmt 0 view .LVU177
 511 0032 2364     		str	r3, [r4, #64]
 512 0034 F5E7     		b	.L24
 513              	.LVL17:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 62


 514              	.L25:
 515              	.LCFI3:
 516              		.cfi_def_cfa_offset 0
 517              		.cfi_restore 4
 518              		.cfi_restore 14
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 519              		.loc 1 413 12 view .LVU178
 520 0036 0120     		movs	r0, #1
 521              	.LVL18:
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 522              		.loc 1 455 1 view .LVU179
 523 0038 7047     		bx	lr
 524              		.cfi_endproc
 525              	.LFE73:
 527              		.section	.text.HAL_ADC_Start,"ax",%progbits
 528              		.align	1
 529              		.global	HAL_ADC_Start
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 534              	HAL_ADC_Start:
 535              	.LVL19:
 536              	.LFB76:
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 537              		.loc 1 720 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 8
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 542              		.loc 1 720 1 is_stmt 0 view .LVU181
 543 0000 82B0     		sub	sp, sp, #8
 544              	.LCFI4:
 545              		.cfi_def_cfa_offset 8
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 546              		.loc 1 721 3 is_stmt 1 view .LVU182
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 547              		.loc 1 721 17 is_stmt 0 view .LVU183
 548 0002 0023     		movs	r3, #0
 549 0004 0193     		str	r3, [sp, #4]
 724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 550              		.loc 1 724 3 is_stmt 1 view .LVU184
 725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 551              		.loc 1 725 3 view .LVU185
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 552              		.loc 1 728 3 view .LVU186
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 553              		.loc 1 728 3 view .LVU187
 554 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 555 000a 012B     		cmp	r3, #1
 556 000c 6ED0     		beq	.L41
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 557              		.loc 1 728 3 discriminator 2 view .LVU188
 558 000e 0123     		movs	r3, #1
 559 0010 80F83C30 		strb	r3, [r0, #60]
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 560              		.loc 1 728 3 discriminator 2 view .LVU189
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 63


 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 561              		.loc 1 733 3 discriminator 2 view .LVU190
 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 562              		.loc 1 733 11 is_stmt 0 discriminator 2 view .LVU191
 563 0014 0368     		ldr	r3, [r0]
 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 564              		.loc 1 733 21 discriminator 2 view .LVU192
 565 0016 9A68     		ldr	r2, [r3, #8]
 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 566              		.loc 1 733 5 discriminator 2 view .LVU193
 567 0018 12F0010F 		tst	r2, #1
 568 001c 13D1     		bne	.L33
 736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 569              		.loc 1 736 5 is_stmt 1 view .LVU194
 570 001e 9A68     		ldr	r2, [r3, #8]
 571 0020 42F00102 		orr	r2, r2, #1
 572 0024 9A60     		str	r2, [r3, #8]
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 573              		.loc 1 740 5 view .LVU195
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 574              		.loc 1 740 53 is_stmt 0 view .LVU196
 575 0026 344B     		ldr	r3, .L47
 576 0028 1B68     		ldr	r3, [r3]
 577 002a 344A     		ldr	r2, .L47+4
 578 002c A2FB0323 		umull	r2, r3, r2, r3
 579 0030 9B0C     		lsrs	r3, r3, #18
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 580              		.loc 1 740 34 view .LVU197
 581 0032 03EB4303 		add	r3, r3, r3, lsl #1
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 582              		.loc 1 740 13 view .LVU198
 583 0036 0193     		str	r3, [sp, #4]
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 584              		.loc 1 741 5 is_stmt 1 view .LVU199
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 585              		.loc 1 741 10 is_stmt 0 view .LVU200
 586 0038 02E0     		b	.L34
 587              	.L35:
 743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 588              		.loc 1 743 7 is_stmt 1 view .LVU201
 743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 589              		.loc 1 743 14 is_stmt 0 view .LVU202
 590 003a 019B     		ldr	r3, [sp, #4]
 591 003c 013B     		subs	r3, r3, #1
 592 003e 0193     		str	r3, [sp, #4]
 593              	.L34:
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 594              		.loc 1 741 10 is_stmt 1 view .LVU203
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 595              		.loc 1 741 19 is_stmt 0 view .LVU204
 596 0040 019B     		ldr	r3, [sp, #4]
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 597              		.loc 1 741 10 view .LVU205
 598 0042 002B     		cmp	r3, #0
 599 0044 F9D1     		bne	.L35
 600              	.L33:
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 64


 601              		.loc 1 748 3 is_stmt 1 view .LVU206
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 602              		.loc 1 748 6 is_stmt 0 view .LVU207
 603 0046 0268     		ldr	r2, [r0]
 604 0048 9368     		ldr	r3, [r2, #8]
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 605              		.loc 1 748 5 view .LVU208
 606 004a 13F0010F 		tst	r3, #1
 607 004e 42D0     		beq	.L36
 753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 608              		.loc 1 753 5 is_stmt 1 view .LVU209
 609 0050 036C     		ldr	r3, [r0, #64]
 610 0052 23F4E063 		bic	r3, r3, #1792
 611 0056 23F00103 		bic	r3, r3, #1
 612 005a 43F48073 		orr	r3, r3, #256
 613 005e 0364     		str	r3, [r0, #64]
 759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 614              		.loc 1 759 5 view .LVU210
 759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 615              		.loc 1 759 9 is_stmt 0 view .LVU211
 616 0060 5368     		ldr	r3, [r2, #4]
 759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 617              		.loc 1 759 8 view .LVU212
 618 0062 13F4806F 		tst	r3, #1024
 619 0066 05D0     		beq	.L37
 761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 620              		.loc 1 761 7 is_stmt 1 view .LVU213
 621 0068 036C     		ldr	r3, [r0, #64]
 622 006a 23F44053 		bic	r3, r3, #12288
 623 006e 43F48053 		orr	r3, r3, #4096
 624 0072 0364     		str	r3, [r0, #64]
 625              	.L37:
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 626              		.loc 1 765 5 view .LVU214
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 627              		.loc 1 765 9 is_stmt 0 view .LVU215
 628 0074 036C     		ldr	r3, [r0, #64]
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 629              		.loc 1 765 8 view .LVU216
 630 0076 13F4805F 		tst	r3, #4096
 631 007a 19D0     		beq	.L38
 768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 632              		.loc 1 768 7 is_stmt 1 view .LVU217
 633 007c 436C     		ldr	r3, [r0, #68]
 634 007e 23F00603 		bic	r3, r3, #6
 635 0082 4364     		str	r3, [r0, #68]
 636              	.L39:
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 637              		.loc 1 779 5 view .LVU218
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 638              		.loc 1 779 5 view .LVU219
 639 0084 0023     		movs	r3, #0
 640 0086 80F83C30 		strb	r3, [r0, #60]
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 641              		.loc 1 779 5 view .LVU220
 783:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 642              		.loc 1 783 5 view .LVU221
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 65


 643 008a 6FF02203 		mvn	r3, #34
 644 008e 1360     		str	r3, [r2]
 786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 645              		.loc 1 786 5 view .LVU222
 786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 646              		.loc 1 786 8 is_stmt 0 view .LVU223
 647 0090 1B4B     		ldr	r3, .L47+8
 648 0092 5B68     		ldr	r3, [r3, #4]
 786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 649              		.loc 1 786 7 view .LVU224
 650 0094 13F01F0F 		tst	r3, #31
 651 0098 0DD1     		bne	.L40
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 652              		.loc 1 789 7 is_stmt 1 view .LVU225
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 653              		.loc 1 789 15 is_stmt 0 view .LVU226
 654 009a 0368     		ldr	r3, [r0]
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 655              		.loc 1 789 25 view .LVU227
 656 009c 9A68     		ldr	r2, [r3, #8]
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 657              		.loc 1 789 9 view .LVU228
 658 009e 12F0405F 		tst	r2, #805306368
 659 00a2 25D1     		bne	.L42
 792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 660              		.loc 1 792 9 is_stmt 1 view .LVU229
 792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 661              		.loc 1 792 29 is_stmt 0 view .LVU230
 662 00a4 9A68     		ldr	r2, [r3, #8]
 663 00a6 42F08042 		orr	r2, r2, #1073741824
 664 00aa 9A60     		str	r2, [r3, #8]
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 665              		.loc 1 815 10 view .LVU231
 666 00ac 0020     		movs	r0, #0
 667              	.LVL20:
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 668              		.loc 1 815 10 view .LVU232
 669 00ae 1BE0     		b	.L32
 670              	.LVL21:
 671              	.L38:
 773:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 672              		.loc 1 773 7 is_stmt 1 view .LVU233
 673 00b0 0023     		movs	r3, #0
 674 00b2 4364     		str	r3, [r0, #68]
 675 00b4 E6E7     		b	.L39
 676              	.L40:
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 677              		.loc 1 798 7 view .LVU234
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 678              		.loc 1 798 15 is_stmt 0 view .LVU235
 679 00b6 0368     		ldr	r3, [r0]
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 680              		.loc 1 798 9 view .LVU236
 681 00b8 124A     		ldr	r2, .L47+12
 682 00ba 9342     		cmp	r3, r2
 683 00bc 01D0     		beq	.L46
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 66


 684              		.loc 1 815 10 view .LVU237
 685 00be 0020     		movs	r0, #0
 686              	.LVL22:
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 687              		.loc 1 815 10 view .LVU238
 688 00c0 12E0     		b	.L32
 689              	.LVL23:
 690              	.L46:
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 691              		.loc 1 798 54 discriminator 1 view .LVU239
 692 00c2 9A68     		ldr	r2, [r3, #8]
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 693              		.loc 1 798 35 discriminator 1 view .LVU240
 694 00c4 12F0405F 		tst	r2, #805306368
 695 00c8 14D1     		bne	.L44
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 696              		.loc 1 801 11 is_stmt 1 view .LVU241
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 697              		.loc 1 801 31 is_stmt 0 view .LVU242
 698 00ca 9A68     		ldr	r2, [r3, #8]
 699 00cc 42F08042 		orr	r2, r2, #1073741824
 700 00d0 9A60     		str	r2, [r3, #8]
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 701              		.loc 1 815 10 view .LVU243
 702 00d2 0020     		movs	r0, #0
 703              	.LVL24:
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 704              		.loc 1 815 10 view .LVU244
 705 00d4 08E0     		b	.L32
 706              	.LVL25:
 707              	.L36:
 808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 708              		.loc 1 808 5 is_stmt 1 view .LVU245
 709 00d6 036C     		ldr	r3, [r0, #64]
 710 00d8 43F01003 		orr	r3, r3, #16
 711 00dc 0364     		str	r3, [r0, #64]
 811:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 712              		.loc 1 811 5 view .LVU246
 713 00de 436C     		ldr	r3, [r0, #68]
 714 00e0 43F00103 		orr	r3, r3, #1
 715 00e4 4364     		str	r3, [r0, #68]
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 716              		.loc 1 815 10 is_stmt 0 view .LVU247
 717 00e6 0020     		movs	r0, #0
 718              	.LVL26:
 719              	.L32:
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 720              		.loc 1 816 1 view .LVU248
 721 00e8 02B0     		add	sp, sp, #8
 722              	.LCFI5:
 723              		.cfi_remember_state
 724              		.cfi_def_cfa_offset 0
 725              		@ sp needed
 726 00ea 7047     		bx	lr
 727              	.LVL27:
 728              	.L41:
 729              	.LCFI6:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 67


 730              		.cfi_restore_state
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 731              		.loc 1 728 3 view .LVU249
 732 00ec 0220     		movs	r0, #2
 733              	.LVL28:
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 734              		.loc 1 728 3 view .LVU250
 735 00ee FBE7     		b	.L32
 736              	.LVL29:
 737              	.L42:
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 738              		.loc 1 815 10 view .LVU251
 739 00f0 0020     		movs	r0, #0
 740              	.LVL30:
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 741              		.loc 1 815 10 view .LVU252
 742 00f2 F9E7     		b	.L32
 743              	.LVL31:
 744              	.L44:
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 745              		.loc 1 815 10 view .LVU253
 746 00f4 0020     		movs	r0, #0
 747              	.LVL32:
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 748              		.loc 1 815 10 view .LVU254
 749 00f6 F7E7     		b	.L32
 750              	.L48:
 751              		.align	2
 752              	.L47:
 753 00f8 00000000 		.word	SystemCoreClock
 754 00fc 83DE1B43 		.word	1125899907
 755 0100 00230140 		.word	1073816320
 756 0104 00200140 		.word	1073815552
 757              		.cfi_endproc
 758              	.LFE76:
 760              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 761              		.align	1
 762              		.global	HAL_ADC_Stop
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	HAL_ADC_Stop:
 768              	.LVL33:
 769              	.LFB77:
 829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
 770              		.loc 1 829 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 775              		.loc 1 831 3 view .LVU256
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 776              		.loc 1 834 3 view .LVU257
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 777              		.loc 1 834 3 view .LVU258
 778 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 68


 779 0004 012B     		cmp	r3, #1
 780 0006 19D0     		beq	.L52
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 781              		.loc 1 834 3 discriminator 2 view .LVU259
 782 0008 0123     		movs	r3, #1
 783 000a 80F83C30 		strb	r3, [r0, #60]
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 784              		.loc 1 834 3 discriminator 2 view .LVU260
 838:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 785              		.loc 1 838 3 discriminator 2 view .LVU261
 786 000e 0268     		ldr	r2, [r0]
 787 0010 9368     		ldr	r3, [r2, #8]
 788 0012 23F00103 		bic	r3, r3, #1
 789 0016 9360     		str	r3, [r2, #8]
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 790              		.loc 1 841 3 discriminator 2 view .LVU262
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 791              		.loc 1 841 6 is_stmt 0 discriminator 2 view .LVU263
 792 0018 0368     		ldr	r3, [r0]
 793 001a 9B68     		ldr	r3, [r3, #8]
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 794              		.loc 1 841 5 discriminator 2 view .LVU264
 795 001c 13F0010F 		tst	r3, #1
 796 0020 07D1     		bne	.L51
 844:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 797              		.loc 1 844 5 is_stmt 1 view .LVU265
 798 0022 036C     		ldr	r3, [r0, #64]
 799 0024 23F48853 		bic	r3, r3, #4352
 800 0028 23F00103 		bic	r3, r3, #1
 801 002c 43F00103 		orr	r3, r3, #1
 802 0030 0364     		str	r3, [r0, #64]
 803              	.L51:
 850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 804              		.loc 1 850 3 view .LVU266
 850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 805              		.loc 1 850 3 view .LVU267
 806 0032 0023     		movs	r3, #0
 807 0034 80F83C30 		strb	r3, [r0, #60]
 850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 808              		.loc 1 850 3 view .LVU268
 853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 809              		.loc 1 853 3 view .LVU269
 853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 810              		.loc 1 853 10 is_stmt 0 view .LVU270
 811 0038 1846     		mov	r0, r3
 812              	.LVL34:
 853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 813              		.loc 1 853 10 view .LVU271
 814 003a 7047     		bx	lr
 815              	.LVL35:
 816              	.L52:
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 817              		.loc 1 834 3 view .LVU272
 818 003c 0220     		movs	r0, #2
 819              	.LVL36:
 854:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 820              		.loc 1 854 1 view .LVU273
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 69


 821 003e 7047     		bx	lr
 822              		.cfi_endproc
 823              	.LFE77:
 825              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 826              		.align	1
 827              		.global	HAL_ADC_PollForConversion
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	HAL_ADC_PollForConversion:
 833              	.LVL37:
 834              	.LFB78:
 872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tickstart = 0U;
 835              		.loc 1 872 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tickstart = 0U;
 839              		.loc 1 872 1 is_stmt 0 view .LVU275
 840 0000 70B5     		push	{r4, r5, r6, lr}
 841              	.LCFI7:
 842              		.cfi_def_cfa_offset 16
 843              		.cfi_offset 4, -16
 844              		.cfi_offset 5, -12
 845              		.cfi_offset 6, -8
 846              		.cfi_offset 14, -4
 847 0002 0446     		mov	r4, r0
 848 0004 0D46     		mov	r5, r1
 873:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****  
 849              		.loc 1 873 3 is_stmt 1 view .LVU276
 850              	.LVL38:
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 851              		.loc 1 881 3 view .LVU277
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 852              		.loc 1 881 7 is_stmt 0 view .LVU278
 853 0006 0368     		ldr	r3, [r0]
 854 0008 9A68     		ldr	r2, [r3, #8]
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 855              		.loc 1 881 6 view .LVU279
 856 000a 12F4806F 		tst	r2, #1024
 857 000e 03D0     		beq	.L54
 882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 858              		.loc 1 882 7 discriminator 1 view .LVU280
 859 0010 9B68     		ldr	r3, [r3, #8]
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 860              		.loc 1 881 57 discriminator 1 view .LVU281
 861 0012 13F4807F 		tst	r3, #256
 862 0016 19D1     		bne	.L64
 863              	.L54:
 894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 864              		.loc 1 894 3 is_stmt 1 view .LVU282
 894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 865              		.loc 1 894 15 is_stmt 0 view .LVU283
 866 0018 FFF7FEFF 		bl	HAL_GetTick
 867              	.LVL39:
 894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 868              		.loc 1 894 15 view .LVU284
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 70


 869 001c 0646     		mov	r6, r0
 870              	.LVL40:
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 871              		.loc 1 897 3 is_stmt 1 view .LVU285
 872              	.L57:
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 873              		.loc 1 897 8 view .LVU286
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 874              		.loc 1 897 11 is_stmt 0 view .LVU287
 875 001e 2368     		ldr	r3, [r4]
 876 0020 1A68     		ldr	r2, [r3]
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 877              		.loc 1 897 8 view .LVU288
 878 0022 12F0020F 		tst	r2, #2
 879 0026 1AD1     		bne	.L65
 900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 880              		.loc 1 900 5 is_stmt 1 view .LVU289
 900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 881              		.loc 1 900 7 is_stmt 0 view .LVU290
 882 0028 B5F1FF3F 		cmp	r5, #-1
 883 002c F7D0     		beq	.L57
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 884              		.loc 1 902 7 is_stmt 1 view .LVU291
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 885              		.loc 1 902 9 is_stmt 0 view .LVU292
 886 002e 25B1     		cbz	r5, .L58
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 887              		.loc 1 902 31 discriminator 1 view .LVU293
 888 0030 FFF7FEFF 		bl	HAL_GetTick
 889              	.LVL41:
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 890              		.loc 1 902 45 discriminator 1 view .LVU294
 891 0034 801B     		subs	r0, r0, r6
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 892              		.loc 1 902 26 discriminator 1 view .LVU295
 893 0036 A842     		cmp	r0, r5
 894 0038 F1D9     		bls	.L57
 895              	.L58:
 905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 896              		.loc 1 905 9 is_stmt 1 view .LVU296
 897 003a 236C     		ldr	r3, [r4, #64]
 898 003c 43F00403 		orr	r3, r3, #4
 899 0040 2364     		str	r3, [r4, #64]
 908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 900              		.loc 1 908 9 view .LVU297
 908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 901              		.loc 1 908 9 view .LVU298
 902 0042 0023     		movs	r3, #0
 903 0044 84F83C30 		strb	r3, [r4, #60]
 908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 904              		.loc 1 908 9 view .LVU299
 910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 905              		.loc 1 910 9 view .LVU300
 910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 906              		.loc 1 910 16 is_stmt 0 view .LVU301
 907 0048 0320     		movs	r0, #3
 908 004a 2CE0     		b	.L55
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 71


 909              	.LVL42:
 910              	.L64:
 885:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 911              		.loc 1 885 5 is_stmt 1 view .LVU302
 912 004c 036C     		ldr	r3, [r0, #64]
 913 004e 43F02003 		orr	r3, r3, #32
 914 0052 0364     		str	r3, [r0, #64]
 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 915              		.loc 1 888 5 view .LVU303
 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 916              		.loc 1 888 5 view .LVU304
 917 0054 0023     		movs	r3, #0
 918 0056 80F83C30 		strb	r3, [r0, #60]
 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 919              		.loc 1 888 5 view .LVU305
 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 920              		.loc 1 890 5 view .LVU306
 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 921              		.loc 1 890 12 is_stmt 0 view .LVU307
 922 005a 0120     		movs	r0, #1
 923              	.LVL43:
 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 924              		.loc 1 890 12 view .LVU308
 925 005c 23E0     		b	.L55
 926              	.LVL44:
 927              	.L65:
 916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 928              		.loc 1 916 3 is_stmt 1 view .LVU309
 929 005e 6FF01202 		mvn	r2, #18
 930 0062 1A60     		str	r2, [r3]
 919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 931              		.loc 1 919 3 view .LVU310
 932 0064 236C     		ldr	r3, [r4, #64]
 933 0066 43F40073 		orr	r3, r3, #512
 934 006a 2364     		str	r3, [r4, #64]
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 935              		.loc 1 927 3 view .LVU311
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 936              		.loc 1 927 6 is_stmt 0 view .LVU312
 937 006c 2368     		ldr	r3, [r4]
 938 006e 9A68     		ldr	r2, [r3, #8]
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 939              		.loc 1 927 5 view .LVU313
 940 0070 12F0405F 		tst	r2, #805306368
 941 0074 16D1     		bne	.L61
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 942              		.loc 1 928 17 discriminator 1 view .LVU314
 943 0076 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 944              		.loc 1 927 60 discriminator 1 view .LVU315
 945 0078 B0B9     		cbnz	r0, .L62
 929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 946              		.loc 1 929 7 view .LVU316
 947 007a DA6A     		ldr	r2, [r3, #44]
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 948              		.loc 1 928 60 view .LVU317
 949 007c 12F4700F 		tst	r2, #15728640
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 72


 950 0080 03D0     		beq	.L60
 930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 951              		.loc 1 930 7 view .LVU318
 952 0082 9B68     		ldr	r3, [r3, #8]
 929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 953              		.loc 1 929 56 view .LVU319
 954 0084 13F4806F 		tst	r3, #1024
 955 0088 0DD1     		bne	.L55
 956              	.L60:
 933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 957              		.loc 1 933 5 is_stmt 1 view .LVU320
 958 008a 236C     		ldr	r3, [r4, #64]
 959 008c 23F48073 		bic	r3, r3, #256
 960 0090 2364     		str	r3, [r4, #64]
 935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     { 
 961              		.loc 1 935 5 view .LVU321
 935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     { 
 962              		.loc 1 935 9 is_stmt 0 view .LVU322
 963 0092 236C     		ldr	r3, [r4, #64]
 935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     { 
 964              		.loc 1 935 8 view .LVU323
 965 0094 13F4805F 		tst	r3, #4096
 966 0098 05D1     		bne	.L55
 937:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 967              		.loc 1 937 7 is_stmt 1 view .LVU324
 968 009a 236C     		ldr	r3, [r4, #64]
 969 009c 43F00103 		orr	r3, r3, #1
 970 00a0 2364     		str	r3, [r4, #64]
 971 00a2 00E0     		b	.L55
 972              	.L61:
 942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 973              		.loc 1 942 10 is_stmt 0 view .LVU325
 974 00a4 0020     		movs	r0, #0
 975              	.LVL45:
 976              	.L55:
 943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 977              		.loc 1 943 1 view .LVU326
 978 00a6 70BD     		pop	{r4, r5, r6, pc}
 979              	.LVL46:
 980              	.L62:
 942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 981              		.loc 1 942 10 view .LVU327
 982 00a8 0020     		movs	r0, #0
 983 00aa FCE7     		b	.L55
 984              		.cfi_endproc
 985              	.LFE78:
 987              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 988              		.align	1
 989              		.global	HAL_ADC_PollForEvent
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 994              	HAL_ADC_PollForEvent:
 995              	.LVL47:
 996              	.LFB79:
 957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tickstart = 0U;
 997              		.loc 1 957 1 is_stmt 1 view -0
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 73


 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1001              		.loc 1 957 1 is_stmt 0 view .LVU329
 1002 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1003              	.LCFI8:
 1004              		.cfi_def_cfa_offset 24
 1005              		.cfi_offset 4, -24
 1006              		.cfi_offset 5, -20
 1007              		.cfi_offset 6, -16
 1008              		.cfi_offset 7, -12
 1009              		.cfi_offset 8, -8
 1010              		.cfi_offset 14, -4
 1011 0004 0546     		mov	r5, r0
 1012 0006 0E46     		mov	r6, r1
 1013 0008 1746     		mov	r7, r2
 958:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1014              		.loc 1 958 3 is_stmt 1 view .LVU330
 1015              	.LVL48:
 961:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 1016              		.loc 1 961 3 view .LVU331
 962:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1017              		.loc 1 962 3 view .LVU332
 965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1018              		.loc 1 965 3 view .LVU333
 965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1019              		.loc 1 965 15 is_stmt 0 view .LVU334
 1020 000a FFF7FEFF 		bl	HAL_GetTick
 1021              	.LVL49:
 965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1022              		.loc 1 965 15 view .LVU335
 1023 000e 8046     		mov	r8, r0
 1024              	.LVL50:
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1025              		.loc 1 968 3 is_stmt 1 view .LVU336
 1026              	.L68:
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1027              		.loc 1 968 8 view .LVU337
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1028              		.loc 1 968 11 is_stmt 0 view .LVU338
 1029 0010 2B68     		ldr	r3, [r5]
 1030 0012 1C68     		ldr	r4, [r3]
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1031              		.loc 1 968 8 view .LVU339
 1032 0014 36EA0402 		bics	r2, r6, r4
 1033 0018 12D0     		beq	.L74
 971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1034              		.loc 1 971 5 is_stmt 1 view .LVU340
 971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1035              		.loc 1 971 7 is_stmt 0 view .LVU341
 1036 001a B7F1FF3F 		cmp	r7, #-1
 1037 001e F7D0     		beq	.L68
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1038              		.loc 1 973 7 is_stmt 1 view .LVU342
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1039              		.loc 1 973 9 is_stmt 0 view .LVU343
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 74


 1040 0020 2FB1     		cbz	r7, .L69
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1041              		.loc 1 973 31 discriminator 1 view .LVU344
 1042 0022 FFF7FEFF 		bl	HAL_GetTick
 1043              	.LVL51:
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1044              		.loc 1 973 45 discriminator 1 view .LVU345
 1045 0026 A0EB0800 		sub	r0, r0, r8
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1046              		.loc 1 973 26 discriminator 1 view .LVU346
 1047 002a B842     		cmp	r0, r7
 1048 002c F0D9     		bls	.L68
 1049              	.L69:
 976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 1050              		.loc 1 976 9 is_stmt 1 view .LVU347
 1051 002e 2B6C     		ldr	r3, [r5, #64]
 1052 0030 43F00403 		orr	r3, r3, #4
 1053 0034 2B64     		str	r3, [r5, #64]
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 1054              		.loc 1 979 9 view .LVU348
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 1055              		.loc 1 979 9 view .LVU349
 1056 0036 0023     		movs	r3, #0
 1057 0038 85F83C30 		strb	r3, [r5, #60]
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         
 1058              		.loc 1 979 9 view .LVU350
 981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1059              		.loc 1 981 9 view .LVU351
 981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1060              		.loc 1 981 16 is_stmt 0 view .LVU352
 1061 003c 0320     		movs	r0, #3
 1062 003e 0DE0     		b	.L70
 1063              	.L74:
 987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1064              		.loc 1 987 3 is_stmt 1 view .LVU353
 987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1065              		.loc 1 987 5 is_stmt 0 view .LVU354
 1066 0040 012E     		cmp	r6, #1
 1067 0042 0DD0     		beq	.L75
 999:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Set ADC error code to overrun */
 1068              		.loc 1 999 5 is_stmt 1 view .LVU355
 1069 0044 2A6C     		ldr	r2, [r5, #64]
 1070 0046 42F48062 		orr	r2, r2, #1024
 1071 004a 2A64     		str	r2, [r5, #64]
1001:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1072              		.loc 1 1001 5 view .LVU356
 1073 004c 6A6C     		ldr	r2, [r5, #68]
 1074 004e 42F00202 		orr	r2, r2, #2
 1075 0052 6A64     		str	r2, [r5, #68]
1004:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 1076              		.loc 1 1004 5 view .LVU357
 1077 0054 6FF02002 		mvn	r2, #32
 1078 0058 1A60     		str	r2, [r3]
1008:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1079              		.loc 1 1008 10 is_stmt 0 view .LVU358
 1080 005a 0020     		movs	r0, #0
 1081              	.L70:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 75


1009:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1082              		.loc 1 1009 1 view .LVU359
 1083 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1084              	.LVL52:
 1085              	.L75:
 990:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 1086              		.loc 1 990 5 is_stmt 1 view .LVU360
 1087 0060 2A6C     		ldr	r2, [r5, #64]
 1088 0062 42F48032 		orr	r2, r2, #65536
 1089 0066 2A64     		str	r2, [r5, #64]
 993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 1090              		.loc 1 993 5 view .LVU361
 1091 0068 6FF00102 		mvn	r2, #1
 1092 006c 1A60     		str	r2, [r3]
1008:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1093              		.loc 1 1008 10 is_stmt 0 view .LVU362
 1094 006e 0020     		movs	r0, #0
 1095 0070 F4E7     		b	.L70
 1096              		.cfi_endproc
 1097              	.LFE79:
 1099              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1100              		.align	1
 1101              		.global	HAL_ADC_Start_IT
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1106              	HAL_ADC_Start_IT:
 1107              	.LVL53:
 1108              	.LFB80:
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1109              		.loc 1 1019 1 is_stmt 1 view -0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 8
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              		@ link register save eliminated.
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1114              		.loc 1 1019 1 is_stmt 0 view .LVU364
 1115 0000 82B0     		sub	sp, sp, #8
 1116              	.LCFI9:
 1117              		.cfi_def_cfa_offset 8
1020:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1118              		.loc 1 1020 3 is_stmt 1 view .LVU365
1020:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1119              		.loc 1 1020 17 is_stmt 0 view .LVU366
 1120 0002 0023     		movs	r3, #0
 1121 0004 0193     		str	r3, [sp, #4]
1023:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 1122              		.loc 1 1023 3 is_stmt 1 view .LVU367
1024:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1123              		.loc 1 1024 3 view .LVU368
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1124              		.loc 1 1027 3 view .LVU369
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1125              		.loc 1 1027 3 view .LVU370
 1126 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1127 000a 012B     		cmp	r3, #1
 1128 000c 75D0     		beq	.L86
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 76


1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1129              		.loc 1 1027 3 discriminator 2 view .LVU371
 1130 000e 0123     		movs	r3, #1
 1131 0010 80F83C30 		strb	r3, [r0, #60]
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1132              		.loc 1 1027 3 discriminator 2 view .LVU372
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1133              		.loc 1 1032 3 discriminator 2 view .LVU373
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1134              		.loc 1 1032 11 is_stmt 0 discriminator 2 view .LVU374
 1135 0014 0368     		ldr	r3, [r0]
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1136              		.loc 1 1032 21 discriminator 2 view .LVU375
 1137 0016 9A68     		ldr	r2, [r3, #8]
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1138              		.loc 1 1032 5 discriminator 2 view .LVU376
 1139 0018 12F0010F 		tst	r2, #1
 1140 001c 13D1     		bne	.L78
1035:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1141              		.loc 1 1035 5 is_stmt 1 view .LVU377
 1142 001e 9A68     		ldr	r2, [r3, #8]
 1143 0020 42F00102 		orr	r2, r2, #1
 1144 0024 9A60     		str	r2, [r3, #8]
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1145              		.loc 1 1039 5 view .LVU378
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1146              		.loc 1 1039 53 is_stmt 0 view .LVU379
 1147 0026 384B     		ldr	r3, .L92
 1148 0028 1B68     		ldr	r3, [r3]
 1149 002a 384A     		ldr	r2, .L92+4
 1150 002c A2FB0323 		umull	r2, r3, r2, r3
 1151 0030 9B0C     		lsrs	r3, r3, #18
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1152              		.loc 1 1039 34 view .LVU380
 1153 0032 03EB4303 		add	r3, r3, r3, lsl #1
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1154              		.loc 1 1039 13 view .LVU381
 1155 0036 0193     		str	r3, [sp, #4]
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1156              		.loc 1 1040 5 is_stmt 1 view .LVU382
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1157              		.loc 1 1040 10 is_stmt 0 view .LVU383
 1158 0038 02E0     		b	.L79
 1159              	.L80:
1042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1160              		.loc 1 1042 7 is_stmt 1 view .LVU384
1042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1161              		.loc 1 1042 14 is_stmt 0 view .LVU385
 1162 003a 019B     		ldr	r3, [sp, #4]
 1163 003c 013B     		subs	r3, r3, #1
 1164 003e 0193     		str	r3, [sp, #4]
 1165              	.L79:
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1166              		.loc 1 1040 10 is_stmt 1 view .LVU386
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1167              		.loc 1 1040 19 is_stmt 0 view .LVU387
 1168 0040 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 77


1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1169              		.loc 1 1040 10 view .LVU388
 1170 0042 002B     		cmp	r3, #0
 1171 0044 F9D1     		bne	.L80
 1172              	.L78:
1047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1173              		.loc 1 1047 3 is_stmt 1 view .LVU389
1047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1174              		.loc 1 1047 6 is_stmt 0 view .LVU390
 1175 0046 0268     		ldr	r2, [r0]
 1176 0048 9368     		ldr	r3, [r2, #8]
1047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1177              		.loc 1 1047 5 view .LVU391
 1178 004a 13F0010F 		tst	r3, #1
 1179 004e 49D0     		beq	.L81
1052:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 1180              		.loc 1 1052 5 is_stmt 1 view .LVU392
 1181 0050 036C     		ldr	r3, [r0, #64]
 1182 0052 23F4E063 		bic	r3, r3, #1792
 1183 0056 23F00103 		bic	r3, r3, #1
 1184 005a 43F48073 		orr	r3, r3, #256
 1185 005e 0364     		str	r3, [r0, #64]
1058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1186              		.loc 1 1058 5 view .LVU393
1058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1187              		.loc 1 1058 9 is_stmt 0 view .LVU394
 1188 0060 5368     		ldr	r3, [r2, #4]
1058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1189              		.loc 1 1058 8 view .LVU395
 1190 0062 13F4806F 		tst	r3, #1024
 1191 0066 05D0     		beq	.L82
1060:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1192              		.loc 1 1060 7 is_stmt 1 view .LVU396
 1193 0068 036C     		ldr	r3, [r0, #64]
 1194 006a 23F44053 		bic	r3, r3, #12288
 1195 006e 43F48053 		orr	r3, r3, #4096
 1196 0072 0364     		str	r3, [r0, #64]
 1197              	.L82:
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1198              		.loc 1 1064 5 view .LVU397
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1199              		.loc 1 1064 9 is_stmt 0 view .LVU398
 1200 0074 036C     		ldr	r3, [r0, #64]
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1201              		.loc 1 1064 8 view .LVU399
 1202 0076 13F4805F 		tst	r3, #4096
 1203 007a 20D0     		beq	.L83
1067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1204              		.loc 1 1067 7 is_stmt 1 view .LVU400
 1205 007c 436C     		ldr	r3, [r0, #68]
 1206 007e 23F00603 		bic	r3, r3, #6
 1207 0082 4364     		str	r3, [r0, #68]
 1208              	.L84:
1078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1209              		.loc 1 1078 5 view .LVU401
1078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1210              		.loc 1 1078 5 view .LVU402
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 78


 1211 0084 0023     		movs	r3, #0
 1212 0086 80F83C30 		strb	r3, [r0, #60]
1078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1213              		.loc 1 1078 5 view .LVU403
1082:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1214              		.loc 1 1082 5 view .LVU404
 1215 008a 6FF02203 		mvn	r3, #34
 1216 008e 1360     		str	r3, [r2]
1085:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1217              		.loc 1 1085 5 view .LVU405
 1218 0090 0268     		ldr	r2, [r0]
 1219 0092 5368     		ldr	r3, [r2, #4]
 1220 0094 43F08063 		orr	r3, r3, #67108864
 1221 0098 43F02003 		orr	r3, r3, #32
 1222 009c 5360     		str	r3, [r2, #4]
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1223              		.loc 1 1088 5 view .LVU406
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1224              		.loc 1 1088 8 is_stmt 0 view .LVU407
 1225 009e 1C4B     		ldr	r3, .L92+8
 1226 00a0 5B68     		ldr	r3, [r3, #4]
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1227              		.loc 1 1088 7 view .LVU408
 1228 00a2 13F01F0F 		tst	r3, #31
 1229 00a6 0DD1     		bne	.L85
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1230              		.loc 1 1091 7 is_stmt 1 view .LVU409
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1231              		.loc 1 1091 15 is_stmt 0 view .LVU410
 1232 00a8 0368     		ldr	r3, [r0]
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1233              		.loc 1 1091 25 view .LVU411
 1234 00aa 9A68     		ldr	r2, [r3, #8]
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1235              		.loc 1 1091 9 view .LVU412
 1236 00ac 12F0405F 		tst	r2, #805306368
 1237 00b0 25D1     		bne	.L87
1094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1238              		.loc 1 1094 9 is_stmt 1 view .LVU413
1094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1239              		.loc 1 1094 29 is_stmt 0 view .LVU414
 1240 00b2 9A68     		ldr	r2, [r3, #8]
 1241 00b4 42F08042 		orr	r2, r2, #1073741824
 1242 00b8 9A60     		str	r2, [r3, #8]
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1243              		.loc 1 1117 10 view .LVU415
 1244 00ba 0020     		movs	r0, #0
 1245              	.LVL54:
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1246              		.loc 1 1117 10 view .LVU416
 1247 00bc 1BE0     		b	.L77
 1248              	.LVL55:
 1249              	.L83:
1072:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1250              		.loc 1 1072 7 is_stmt 1 view .LVU417
 1251 00be 0023     		movs	r3, #0
 1252 00c0 4364     		str	r3, [r0, #68]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 79


 1253 00c2 DFE7     		b	.L84
 1254              	.L85:
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1255              		.loc 1 1100 7 view .LVU418
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1256              		.loc 1 1100 15 is_stmt 0 view .LVU419
 1257 00c4 0368     		ldr	r3, [r0]
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1258              		.loc 1 1100 9 view .LVU420
 1259 00c6 134A     		ldr	r2, .L92+12
 1260 00c8 9342     		cmp	r3, r2
 1261 00ca 01D0     		beq	.L91
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1262              		.loc 1 1117 10 view .LVU421
 1263 00cc 0020     		movs	r0, #0
 1264              	.LVL56:
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1265              		.loc 1 1117 10 view .LVU422
 1266 00ce 12E0     		b	.L77
 1267              	.LVL57:
 1268              	.L91:
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1269              		.loc 1 1100 54 discriminator 1 view .LVU423
 1270 00d0 9A68     		ldr	r2, [r3, #8]
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1271              		.loc 1 1100 35 discriminator 1 view .LVU424
 1272 00d2 12F0405F 		tst	r2, #805306368
 1273 00d6 14D1     		bne	.L89
1103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1274              		.loc 1 1103 11 is_stmt 1 view .LVU425
1103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1275              		.loc 1 1103 31 is_stmt 0 view .LVU426
 1276 00d8 9A68     		ldr	r2, [r3, #8]
 1277 00da 42F08042 		orr	r2, r2, #1073741824
 1278 00de 9A60     		str	r2, [r3, #8]
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1279              		.loc 1 1117 10 view .LVU427
 1280 00e0 0020     		movs	r0, #0
 1281              	.LVL58:
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1282              		.loc 1 1117 10 view .LVU428
 1283 00e2 08E0     		b	.L77
 1284              	.LVL59:
 1285              	.L81:
1110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1286              		.loc 1 1110 5 is_stmt 1 view .LVU429
 1287 00e4 036C     		ldr	r3, [r0, #64]
 1288 00e6 43F01003 		orr	r3, r3, #16
 1289 00ea 0364     		str	r3, [r0, #64]
1113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 1290              		.loc 1 1113 5 view .LVU430
 1291 00ec 436C     		ldr	r3, [r0, #68]
 1292 00ee 43F00103 		orr	r3, r3, #1
 1293 00f2 4364     		str	r3, [r0, #68]
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1294              		.loc 1 1117 10 is_stmt 0 view .LVU431
 1295 00f4 0020     		movs	r0, #0
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 80


 1296              	.LVL60:
 1297              	.L77:
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1298              		.loc 1 1118 1 view .LVU432
 1299 00f6 02B0     		add	sp, sp, #8
 1300              	.LCFI10:
 1301              		.cfi_remember_state
 1302              		.cfi_def_cfa_offset 0
 1303              		@ sp needed
 1304 00f8 7047     		bx	lr
 1305              	.LVL61:
 1306              	.L86:
 1307              	.LCFI11:
 1308              		.cfi_restore_state
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1309              		.loc 1 1027 3 view .LVU433
 1310 00fa 0220     		movs	r0, #2
 1311              	.LVL62:
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1312              		.loc 1 1027 3 view .LVU434
 1313 00fc FBE7     		b	.L77
 1314              	.LVL63:
 1315              	.L87:
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1316              		.loc 1 1117 10 view .LVU435
 1317 00fe 0020     		movs	r0, #0
 1318              	.LVL64:
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1319              		.loc 1 1117 10 view .LVU436
 1320 0100 F9E7     		b	.L77
 1321              	.LVL65:
 1322              	.L89:
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1323              		.loc 1 1117 10 view .LVU437
 1324 0102 0020     		movs	r0, #0
 1325              	.LVL66:
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1326              		.loc 1 1117 10 view .LVU438
 1327 0104 F7E7     		b	.L77
 1328              	.L93:
 1329 0106 00BF     		.align	2
 1330              	.L92:
 1331 0108 00000000 		.word	SystemCoreClock
 1332 010c 83DE1B43 		.word	1125899907
 1333 0110 00230140 		.word	1073816320
 1334 0114 00200140 		.word	1073815552
 1335              		.cfi_endproc
 1336              	.LFE80:
 1338              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1339              		.align	1
 1340              		.global	HAL_ADC_Stop_IT
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1345              	HAL_ADC_Stop_IT:
 1346              	.LVL67:
 1347              	.LFB81:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 81


1130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check the parameters */
 1348              		.loc 1 1130 1 is_stmt 1 view -0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 0
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              		@ link register save eliminated.
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1353              		.loc 1 1132 3 view .LVU440
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1354              		.loc 1 1135 3 view .LVU441
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1355              		.loc 1 1135 3 view .LVU442
 1356 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1357 0004 012B     		cmp	r3, #1
 1358 0006 1FD0     		beq	.L97
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1359              		.loc 1 1135 3 discriminator 2 view .LVU443
 1360 0008 0123     		movs	r3, #1
 1361 000a 80F83C30 		strb	r3, [r0, #60]
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1362              		.loc 1 1135 3 discriminator 2 view .LVU444
1139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1363              		.loc 1 1139 3 discriminator 2 view .LVU445
 1364 000e 0268     		ldr	r2, [r0]
 1365 0010 9368     		ldr	r3, [r2, #8]
 1366 0012 23F00103 		bic	r3, r3, #1
 1367 0016 9360     		str	r3, [r2, #8]
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1368              		.loc 1 1142 3 discriminator 2 view .LVU446
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1369              		.loc 1 1142 6 is_stmt 0 discriminator 2 view .LVU447
 1370 0018 0368     		ldr	r3, [r0]
 1371 001a 9A68     		ldr	r2, [r3, #8]
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1372              		.loc 1 1142 5 discriminator 2 view .LVU448
 1373 001c 12F0010F 		tst	r2, #1
 1374 0020 0DD1     		bne	.L96
1145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1375              		.loc 1 1145 5 is_stmt 1 view .LVU449
 1376 0022 5A68     		ldr	r2, [r3, #4]
 1377 0024 22F08062 		bic	r2, r2, #67108864
 1378 0028 22F02002 		bic	r2, r2, #32
 1379 002c 5A60     		str	r2, [r3, #4]
1148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1380              		.loc 1 1148 5 view .LVU450
 1381 002e 036C     		ldr	r3, [r0, #64]
 1382 0030 23F48853 		bic	r3, r3, #4352
 1383 0034 23F00103 		bic	r3, r3, #1
 1384 0038 43F00103 		orr	r3, r3, #1
 1385 003c 0364     		str	r3, [r0, #64]
 1386              	.L96:
1154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1387              		.loc 1 1154 3 view .LVU451
1154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1388              		.loc 1 1154 3 view .LVU452
 1389 003e 0023     		movs	r3, #0
 1390 0040 80F83C30 		strb	r3, [r0, #60]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 82


1154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1391              		.loc 1 1154 3 view .LVU453
1157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1392              		.loc 1 1157 3 view .LVU454
1157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1393              		.loc 1 1157 10 is_stmt 0 view .LVU455
 1394 0044 1846     		mov	r0, r3
 1395              	.LVL68:
1157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1396              		.loc 1 1157 10 view .LVU456
 1397 0046 7047     		bx	lr
 1398              	.LVL69:
 1399              	.L97:
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1400              		.loc 1 1135 3 view .LVU457
 1401 0048 0220     		movs	r0, #2
 1402              	.LVL70:
1158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1403              		.loc 1 1158 1 view .LVU458
 1404 004a 7047     		bx	lr
 1405              		.cfi_endproc
 1406              	.LFE81:
 1408              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1409              		.align	1
 1410              		.global	HAL_ADC_Start_DMA
 1411              		.syntax unified
 1412              		.thumb
 1413              		.thumb_func
 1415              	HAL_ADC_Start_DMA:
 1416              	.LVL71:
 1417              	.LFB83:
1328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1418              		.loc 1 1328 1 is_stmt 1 view -0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 8
 1421              		@ frame_needed = 0, uses_anonymous_args = 0
1328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1422              		.loc 1 1328 1 is_stmt 0 view .LVU460
 1423 0000 10B5     		push	{r4, lr}
 1424              	.LCFI12:
 1425              		.cfi_def_cfa_offset 8
 1426              		.cfi_offset 4, -8
 1427              		.cfi_offset 14, -4
 1428 0002 82B0     		sub	sp, sp, #8
 1429              	.LCFI13:
 1430              		.cfi_def_cfa_offset 16
 1431 0004 1346     		mov	r3, r2
1329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1432              		.loc 1 1329 3 is_stmt 1 view .LVU461
1329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1433              		.loc 1 1329 17 is_stmt 0 view .LVU462
 1434 0006 0022     		movs	r2, #0
 1435              	.LVL72:
1329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1436              		.loc 1 1329 17 view .LVU463
 1437 0008 0192     		str	r2, [sp, #4]
1332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 83


 1438              		.loc 1 1332 3 is_stmt 1 view .LVU464
1333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1439              		.loc 1 1333 3 view .LVU465
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1440              		.loc 1 1336 3 view .LVU466
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1441              		.loc 1 1336 3 view .LVU467
 1442 000a 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1443 000e 012A     		cmp	r2, #1
 1444 0010 00F08B80 		beq	.L108
 1445 0014 0446     		mov	r4, r0
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1446              		.loc 1 1336 3 discriminator 2 view .LVU468
 1447 0016 0122     		movs	r2, #1
 1448 0018 80F83C20 		strb	r2, [r0, #60]
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1449              		.loc 1 1336 3 discriminator 2 view .LVU469
1341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1450              		.loc 1 1341 3 discriminator 2 view .LVU470
1341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1451              		.loc 1 1341 11 is_stmt 0 discriminator 2 view .LVU471
 1452 001c 0268     		ldr	r2, [r0]
1341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1453              		.loc 1 1341 21 discriminator 2 view .LVU472
 1454 001e 9068     		ldr	r0, [r2, #8]
 1455              	.LVL73:
1341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {  
 1456              		.loc 1 1341 5 discriminator 2 view .LVU473
 1457 0020 10F0010F 		tst	r0, #1
 1458 0024 13D1     		bne	.L100
1344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1459              		.loc 1 1344 5 is_stmt 1 view .LVU474
 1460 0026 9068     		ldr	r0, [r2, #8]
 1461 0028 40F00100 		orr	r0, r0, #1
 1462 002c 9060     		str	r0, [r2, #8]
1348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1463              		.loc 1 1348 5 view .LVU475
1348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1464              		.loc 1 1348 53 is_stmt 0 view .LVU476
 1465 002e 424A     		ldr	r2, .L114
 1466 0030 1068     		ldr	r0, [r2]
 1467 0032 424A     		ldr	r2, .L114+4
 1468 0034 A2FB0020 		umull	r2, r0, r2, r0
 1469 0038 800C     		lsrs	r0, r0, #18
1348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1470              		.loc 1 1348 34 view .LVU477
 1471 003a 00EB4000 		add	r0, r0, r0, lsl #1
1348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     while(counter != 0U)
 1472              		.loc 1 1348 13 view .LVU478
 1473 003e 0190     		str	r0, [sp, #4]
1349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1474              		.loc 1 1349 5 is_stmt 1 view .LVU479
1349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1475              		.loc 1 1349 10 is_stmt 0 view .LVU480
 1476 0040 02E0     		b	.L101
 1477              	.L102:
1351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 84


 1478              		.loc 1 1351 7 is_stmt 1 view .LVU481
1351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1479              		.loc 1 1351 14 is_stmt 0 view .LVU482
 1480 0042 0198     		ldr	r0, [sp, #4]
 1481 0044 0138     		subs	r0, r0, #1
 1482 0046 0190     		str	r0, [sp, #4]
 1483              	.L101:
1349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1484              		.loc 1 1349 10 is_stmt 1 view .LVU483
1349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1485              		.loc 1 1349 19 is_stmt 0 view .LVU484
 1486 0048 0198     		ldr	r0, [sp, #4]
1349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1487              		.loc 1 1349 10 view .LVU485
 1488 004a 0028     		cmp	r0, #0
 1489 004c F9D1     		bne	.L102
 1490              	.L100:
1356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1491              		.loc 1 1356 3 is_stmt 1 view .LVU486
1356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1492              		.loc 1 1356 6 is_stmt 0 view .LVU487
 1493 004e 2268     		ldr	r2, [r4]
 1494 0050 9068     		ldr	r0, [r2, #8]
1356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1495              		.loc 1 1356 5 view .LVU488
 1496 0052 10F0010F 		tst	r0, #1
 1497 0056 5DD0     		beq	.L103
1361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 1498              		.loc 1 1361 5 is_stmt 1 view .LVU489
 1499 0058 206C     		ldr	r0, [r4, #64]
 1500 005a 20F4E060 		bic	r0, r0, #1792
 1501 005e 20F00100 		bic	r0, r0, #1
 1502 0062 40F48070 		orr	r0, r0, #256
 1503 0066 2064     		str	r0, [r4, #64]
1367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1504              		.loc 1 1367 5 view .LVU490
1367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1505              		.loc 1 1367 9 is_stmt 0 view .LVU491
 1506 0068 5268     		ldr	r2, [r2, #4]
1367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1507              		.loc 1 1367 8 view .LVU492
 1508 006a 12F4806F 		tst	r2, #1024
 1509 006e 05D0     		beq	.L104
1369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1510              		.loc 1 1369 7 is_stmt 1 view .LVU493
 1511 0070 226C     		ldr	r2, [r4, #64]
 1512 0072 22F44052 		bic	r2, r2, #12288
 1513 0076 42F48052 		orr	r2, r2, #4096
 1514 007a 2264     		str	r2, [r4, #64]
 1515              	.L104:
1373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1516              		.loc 1 1373 5 view .LVU494
1373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1517              		.loc 1 1373 9 is_stmt 0 view .LVU495
 1518 007c 226C     		ldr	r2, [r4, #64]
1373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1519              		.loc 1 1373 8 view .LVU496
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 85


 1520 007e 12F4805F 		tst	r2, #4096
 1521 0082 34D0     		beq	.L105
1376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1522              		.loc 1 1376 7 is_stmt 1 view .LVU497
 1523 0084 626C     		ldr	r2, [r4, #68]
 1524 0086 22F00602 		bic	r2, r2, #6
 1525 008a 6264     		str	r2, [r4, #68]
 1526              	.L106:
1387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1527              		.loc 1 1387 5 view .LVU498
1387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1528              		.loc 1 1387 5 view .LVU499
 1529 008c 0022     		movs	r2, #0
 1530 008e 84F83C20 		strb	r2, [r4, #60]
1387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1531              		.loc 1 1387 5 view .LVU500
1390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1532              		.loc 1 1390 5 view .LVU501
1390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1533              		.loc 1 1390 9 is_stmt 0 view .LVU502
 1534 0092 A26B     		ldr	r2, [r4, #56]
1390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1535              		.loc 1 1390 40 view .LVU503
 1536 0094 2A48     		ldr	r0, .L114+8
 1537 0096 D063     		str	r0, [r2, #60]
1393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1538              		.loc 1 1393 5 is_stmt 1 view .LVU504
1393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1539              		.loc 1 1393 9 is_stmt 0 view .LVU505
 1540 0098 A26B     		ldr	r2, [r4, #56]
1393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1541              		.loc 1 1393 44 view .LVU506
 1542 009a 2A48     		ldr	r0, .L114+12
 1543 009c 1064     		str	r0, [r2, #64]
1396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1544              		.loc 1 1396 5 is_stmt 1 view .LVU507
1396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1545              		.loc 1 1396 9 is_stmt 0 view .LVU508
 1546 009e A26B     		ldr	r2, [r4, #56]
1396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1547              		.loc 1 1396 41 view .LVU509
 1548 00a0 2948     		ldr	r0, .L114+16
 1549 00a2 D064     		str	r0, [r2, #76]
1404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1550              		.loc 1 1404 5 is_stmt 1 view .LVU510
 1551 00a4 2268     		ldr	r2, [r4]
 1552 00a6 6FF02200 		mvn	r0, #34
 1553 00aa 1060     		str	r0, [r2]
1407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1554              		.loc 1 1407 5 view .LVU511
 1555 00ac 2068     		ldr	r0, [r4]
 1556 00ae 4268     		ldr	r2, [r0, #4]
 1557 00b0 42F08062 		orr	r2, r2, #67108864
 1558 00b4 4260     		str	r2, [r0, #4]
1410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1559              		.loc 1 1410 5 view .LVU512
1410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 86


 1560              		.loc 1 1410 9 is_stmt 0 view .LVU513
 1561 00b6 2068     		ldr	r0, [r4]
1410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1562              		.loc 1 1410 25 view .LVU514
 1563 00b8 8268     		ldr	r2, [r0, #8]
 1564 00ba 42F48072 		orr	r2, r2, #256
 1565 00be 8260     		str	r2, [r0, #8]
1413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1566              		.loc 1 1413 5 is_stmt 1 view .LVU515
1413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1567              		.loc 1 1413 55 is_stmt 0 view .LVU516
 1568 00c0 2068     		ldr	r0, [r4]
1413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1569              		.loc 1 1413 5 view .LVU517
 1570 00c2 0A46     		mov	r2, r1
 1571 00c4 00F14C01 		add	r1, r0, #76
 1572              	.LVL74:
1413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1573              		.loc 1 1413 5 view .LVU518
 1574 00c8 A06B     		ldr	r0, [r4, #56]
 1575 00ca FFF7FEFF 		bl	HAL_DMA_Start_IT
 1576              	.LVL75:
1416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1577              		.loc 1 1416 5 is_stmt 1 view .LVU519
1416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1578              		.loc 1 1416 8 is_stmt 0 view .LVU520
 1579 00ce 1F4B     		ldr	r3, .L114+20
 1580 00d0 5B68     		ldr	r3, [r3, #4]
1416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1581              		.loc 1 1416 7 view .LVU521
 1582 00d2 13F01F0F 		tst	r3, #31
 1583 00d6 0DD1     		bne	.L107
1419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1584              		.loc 1 1419 7 is_stmt 1 view .LVU522
1419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1585              		.loc 1 1419 15 is_stmt 0 view .LVU523
 1586 00d8 2368     		ldr	r3, [r4]
1419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1587              		.loc 1 1419 25 view .LVU524
 1588 00da 9A68     		ldr	r2, [r3, #8]
1419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1589              		.loc 1 1419 9 view .LVU525
 1590 00dc 12F0405F 		tst	r2, #805306368
 1591 00e0 25D1     		bne	.L109
1422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1592              		.loc 1 1422 9 is_stmt 1 view .LVU526
1422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1593              		.loc 1 1422 29 is_stmt 0 view .LVU527
 1594 00e2 9A68     		ldr	r2, [r3, #8]
 1595 00e4 42F08042 		orr	r2, r2, #1073741824
 1596 00e8 9A60     		str	r2, [r3, #8]
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1597              		.loc 1 1445 10 view .LVU528
 1598 00ea 0020     		movs	r0, #0
 1599 00ec 1BE0     		b	.L99
 1600              	.LVL76:
 1601              	.L105:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 87


1381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1602              		.loc 1 1381 7 is_stmt 1 view .LVU529
 1603 00ee 0022     		movs	r2, #0
 1604 00f0 6264     		str	r2, [r4, #68]
 1605 00f2 CBE7     		b	.L106
 1606              	.LVL77:
 1607              	.L107:
1428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1608              		.loc 1 1428 7 view .LVU530
1428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1609              		.loc 1 1428 15 is_stmt 0 view .LVU531
 1610 00f4 2368     		ldr	r3, [r4]
1428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1611              		.loc 1 1428 9 view .LVU532
 1612 00f6 164A     		ldr	r2, .L114+24
 1613 00f8 9342     		cmp	r3, r2
 1614 00fa 01D0     		beq	.L113
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1615              		.loc 1 1445 10 view .LVU533
 1616 00fc 0020     		movs	r0, #0
 1617 00fe 12E0     		b	.L99
 1618              	.L113:
1428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1619              		.loc 1 1428 54 discriminator 1 view .LVU534
 1620 0100 9A68     		ldr	r2, [r3, #8]
1428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 1621              		.loc 1 1428 35 discriminator 1 view .LVU535
 1622 0102 12F0405F 		tst	r2, #805306368
 1623 0106 14D1     		bne	.L111
1431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1624              		.loc 1 1431 11 is_stmt 1 view .LVU536
1431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 1625              		.loc 1 1431 31 is_stmt 0 view .LVU537
 1626 0108 9A68     		ldr	r2, [r3, #8]
 1627 010a 42F08042 		orr	r2, r2, #1073741824
 1628 010e 9A60     		str	r2, [r3, #8]
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1629              		.loc 1 1445 10 view .LVU538
 1630 0110 0020     		movs	r0, #0
 1631 0112 08E0     		b	.L99
 1632              	.LVL78:
 1633              	.L103:
1438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1634              		.loc 1 1438 5 is_stmt 1 view .LVU539
 1635 0114 236C     		ldr	r3, [r4, #64]
 1636              	.LVL79:
1438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1637              		.loc 1 1438 5 is_stmt 0 view .LVU540
 1638 0116 43F01003 		orr	r3, r3, #16
 1639 011a 2364     		str	r3, [r4, #64]
1441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 1640              		.loc 1 1441 5 is_stmt 1 view .LVU541
 1641 011c 636C     		ldr	r3, [r4, #68]
 1642 011e 43F00103 		orr	r3, r3, #1
 1643 0122 6364     		str	r3, [r4, #68]
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1644              		.loc 1 1445 10 is_stmt 0 view .LVU542
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 88


 1645 0124 0020     		movs	r0, #0
 1646              	.LVL80:
 1647              	.L99:
1446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1648              		.loc 1 1446 1 view .LVU543
 1649 0126 02B0     		add	sp, sp, #8
 1650              	.LCFI14:
 1651              		.cfi_remember_state
 1652              		.cfi_def_cfa_offset 8
 1653              		@ sp needed
 1654 0128 10BD     		pop	{r4, pc}
 1655              	.LVL81:
 1656              	.L108:
 1657              	.LCFI15:
 1658              		.cfi_restore_state
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1659              		.loc 1 1336 3 view .LVU544
 1660 012a 0220     		movs	r0, #2
 1661              	.LVL82:
1336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1662              		.loc 1 1336 3 view .LVU545
 1663 012c FBE7     		b	.L99
 1664              	.LVL83:
 1665              	.L109:
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1666              		.loc 1 1445 10 view .LVU546
 1667 012e 0020     		movs	r0, #0
 1668 0130 F9E7     		b	.L99
 1669              	.L111:
1445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1670              		.loc 1 1445 10 view .LVU547
 1671 0132 0020     		movs	r0, #0
 1672 0134 F7E7     		b	.L99
 1673              	.L115:
 1674 0136 00BF     		.align	2
 1675              	.L114:
 1676 0138 00000000 		.word	SystemCoreClock
 1677 013c 83DE1B43 		.word	1125899907
 1678 0140 00000000 		.word	ADC_DMAConvCplt
 1679 0144 00000000 		.word	ADC_DMAHalfConvCplt
 1680 0148 00000000 		.word	ADC_DMAError
 1681 014c 00230140 		.word	1073816320
 1682 0150 00200140 		.word	1073815552
 1683              		.cfi_endproc
 1684              	.LFE83:
 1686              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1687              		.align	1
 1688              		.global	HAL_ADC_Stop_DMA
 1689              		.syntax unified
 1690              		.thumb
 1691              		.thumb_func
 1693              	HAL_ADC_Stop_DMA:
 1694              	.LVL84:
 1695              	.LFB84:
1455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1696              		.loc 1 1455 1 is_stmt 1 view -0
 1697              		.cfi_startproc
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 89


 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
1456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1700              		.loc 1 1456 3 view .LVU549
1459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1701              		.loc 1 1459 3 view .LVU550
1462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1702              		.loc 1 1462 3 view .LVU551
1462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1703              		.loc 1 1462 3 view .LVU552
 1704 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1705 0004 012B     		cmp	r3, #1
 1706 0006 2FD0     		beq	.L119
1455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1707              		.loc 1 1455 1 is_stmt 0 discriminator 2 view .LVU553
 1708 0008 10B5     		push	{r4, lr}
 1709              	.LCFI16:
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 4, -8
 1712              		.cfi_offset 14, -4
 1713 000a 0446     		mov	r4, r0
1462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1714              		.loc 1 1462 3 is_stmt 1 discriminator 2 view .LVU554
 1715 000c 0123     		movs	r3, #1
 1716 000e 80F83C30 		strb	r3, [r0, #60]
1462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1717              		.loc 1 1462 3 discriminator 2 view .LVU555
1466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1718              		.loc 1 1466 3 discriminator 2 view .LVU556
 1719 0012 0268     		ldr	r2, [r0]
 1720 0014 9368     		ldr	r3, [r2, #8]
 1721 0016 23F00103 		bic	r3, r3, #1
 1722 001a 9360     		str	r3, [r2, #8]
1469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1723              		.loc 1 1469 3 discriminator 2 view .LVU557
1469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1724              		.loc 1 1469 6 is_stmt 0 discriminator 2 view .LVU558
 1725 001c 0368     		ldr	r3, [r0]
 1726 001e 9A68     		ldr	r2, [r3, #8]
1469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1727              		.loc 1 1469 5 discriminator 2 view .LVU559
 1728 0020 12F0010F 		tst	r2, #1
 1729 0024 1BD1     		bne	.L120
1472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1730              		.loc 1 1472 5 is_stmt 1 view .LVU560
1472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 1731              		.loc 1 1472 25 is_stmt 0 view .LVU561
 1732 0026 9A68     		ldr	r2, [r3, #8]
 1733 0028 22F48072 		bic	r2, r2, #256
 1734 002c 9A60     		str	r2, [r3, #8]
1476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1735              		.loc 1 1476 5 is_stmt 1 view .LVU562
1476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1736              		.loc 1 1476 13 is_stmt 0 view .LVU563
 1737 002e 806B     		ldr	r0, [r0, #56]
 1738              	.LVL85:
1476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 90


 1739              		.loc 1 1476 25 view .LVU564
 1740 0030 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1741 0034 DBB2     		uxtb	r3, r3
1476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1742              		.loc 1 1476 8 view .LVU565
 1743 0036 022B     		cmp	r3, #2
 1744 0038 01D0     		beq	.L126
1456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1745              		.loc 1 1456 21 view .LVU566
 1746 003a 0020     		movs	r0, #0
 1747 003c 10E0     		b	.L118
 1748              	.L126:
1478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 1749              		.loc 1 1478 7 is_stmt 1 view .LVU567
1478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 1750              		.loc 1 1478 24 is_stmt 0 view .LVU568
 1751 003e FFF7FEFF 		bl	HAL_DMA_Abort
 1752              	.LVL86:
1481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 1753              		.loc 1 1481 7 is_stmt 1 view .LVU569
 1754 0042 2268     		ldr	r2, [r4]
 1755 0044 5368     		ldr	r3, [r2, #4]
 1756 0046 23F08063 		bic	r3, r3, #67108864
 1757 004a 5360     		str	r3, [r2, #4]
1484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1758              		.loc 1 1484 7 view .LVU570
 1759 004c 236C     		ldr	r3, [r4, #64]
 1760 004e 23F48853 		bic	r3, r3, #4352
 1761 0052 23F00103 		bic	r3, r3, #1
 1762 0056 43F00103 		orr	r3, r3, #1
 1763 005a 2364     		str	r3, [r4, #64]
 1764 005c 00E0     		b	.L118
 1765              	.LVL87:
 1766              	.L120:
1456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1767              		.loc 1 1456 21 is_stmt 0 view .LVU571
 1768 005e 0020     		movs	r0, #0
 1769              	.LVL88:
 1770              	.L118:
1491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1771              		.loc 1 1491 3 is_stmt 1 view .LVU572
1491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1772              		.loc 1 1491 3 view .LVU573
 1773 0060 0023     		movs	r3, #0
 1774 0062 84F83C30 		strb	r3, [r4, #60]
1491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1775              		.loc 1 1491 3 view .LVU574
1494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1776              		.loc 1 1494 3 view .LVU575
1495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1777              		.loc 1 1495 1 is_stmt 0 view .LVU576
 1778 0066 10BD     		pop	{r4, pc}
 1779              	.LVL89:
 1780              	.L119:
 1781              	.LCFI17:
 1782              		.cfi_def_cfa_offset 0
 1783              		.cfi_restore 4
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 91


 1784              		.cfi_restore 14
1462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1785              		.loc 1 1462 3 view .LVU577
 1786 0068 0220     		movs	r0, #2
 1787              	.LVL90:
1495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1788              		.loc 1 1495 1 view .LVU578
 1789 006a 7047     		bx	lr
 1790              		.cfi_endproc
 1791              	.LFE84:
 1793              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1794              		.align	1
 1795              		.global	HAL_ADC_GetValue
 1796              		.syntax unified
 1797              		.thumb
 1798              		.thumb_func
 1800              	HAL_ADC_GetValue:
 1801              	.LVL91:
 1802              	.LFB85:
1504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
 1803              		.loc 1 1504 1 is_stmt 1 view -0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 0
 1806              		@ frame_needed = 0, uses_anonymous_args = 0
 1807              		@ link register save eliminated.
1506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1808              		.loc 1 1506 3 view .LVU580
1506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1809              		.loc 1 1506 14 is_stmt 0 view .LVU581
 1810 0000 0368     		ldr	r3, [r0]
1506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1811              		.loc 1 1506 24 view .LVU582
 1812 0002 D86C     		ldr	r0, [r3, #76]
 1813              	.LVL92:
1507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1814              		.loc 1 1507 1 view .LVU583
 1815 0004 7047     		bx	lr
 1816              		.cfi_endproc
 1817              	.LFE85:
 1819              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1820              		.align	1
 1821              		.weak	HAL_ADC_ConvCpltCallback
 1822              		.syntax unified
 1823              		.thumb
 1824              		.thumb_func
 1826              	HAL_ADC_ConvCpltCallback:
 1827              	.LVL93:
 1828              	.LFB86:
1516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1829              		.loc 1 1516 1 is_stmt 1 view -0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
1518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 1834              		.loc 1 1518 3 view .LVU585
1522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 92


 1835              		.loc 1 1522 1 is_stmt 0 view .LVU586
 1836 0000 7047     		bx	lr
 1837              		.cfi_endproc
 1838              	.LFE86:
 1840              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1841              		.align	1
 1842              		.weak	HAL_ADC_ConvHalfCpltCallback
 1843              		.syntax unified
 1844              		.thumb
 1845              		.thumb_func
 1847              	HAL_ADC_ConvHalfCpltCallback:
 1848              	.LVL94:
 1849              	.LFB87:
1531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1850              		.loc 1 1531 1 is_stmt 1 view -0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
1533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 1855              		.loc 1 1533 3 view .LVU588
1537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1856              		.loc 1 1537 1 is_stmt 0 view .LVU589
 1857 0000 7047     		bx	lr
 1858              		.cfi_endproc
 1859              	.LFE87:
 1861              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1862              		.align	1
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1867              	ADC_DMAHalfConvCplt:
 1868              	.LVL95:
 1869              	.LFB96:
1898:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1899:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1901:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1903:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1904:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
1907:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1909:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
1912:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1913:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Update ADC state machine */
1914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1915:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1918:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Note: On STM32F2, there is no independent flag of end of sequence.   */
1919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 93


1921:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /*       of end of sequence.                                            */
1922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
1923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
1924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
1925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
1926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1932:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Set ADC state */
1934:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
1936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1937:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
1938:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1939:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
1940:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1941:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
1942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     /* Conversion complete callback */
1943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1944:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
1946:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1947:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1948:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1949:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
1950:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
1951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
1952:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
1953:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
1954:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1955:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1956:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
1957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
1958:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1959:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1960:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 	else
1961:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 	{
1962:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       /* Call DMA error callback */
1963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
1964:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
1965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
1966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
1967:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1969:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
1970:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1972:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1974:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
1975:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 1870              		.loc 1 1975 1 is_stmt 1 view -0
 1871              		.cfi_startproc
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 94


 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              		.loc 1 1975 1 is_stmt 0 view .LVU591
 1875 0000 08B5     		push	{r3, lr}
 1876              	.LCFI18:
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 3, -8
 1879              		.cfi_offset 14, -4
1976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1880              		.loc 1 1976 3 is_stmt 1 view .LVU592
 1881              	.LVL96:
1977:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
1978:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Half conversion callback */
1979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1980:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
1981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
1982:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1882              		.loc 1 1982 3 view .LVU593
 1883 0002 806B     		ldr	r0, [r0, #56]
 1884              	.LVL97:
 1885              		.loc 1 1982 3 is_stmt 0 view .LVU594
 1886 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1887              	.LVL98:
1983:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1984:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 1888              		.loc 1 1984 1 view .LVU595
 1889 0008 08BD     		pop	{r3, pc}
 1890              		.cfi_endproc
 1891              	.LFE96:
 1893              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1894              		.align	1
 1895              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1900              	HAL_ADC_LevelOutOfWindowCallback:
 1901              	.LVL99:
 1902              	.LFB88:
1546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1903              		.loc 1 1546 1 is_stmt 1 view -0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907              		@ link register save eliminated.
1548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 1908              		.loc 1 1548 3 view .LVU597
1552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1909              		.loc 1 1552 1 is_stmt 0 view .LVU598
 1910 0000 7047     		bx	lr
 1911              		.cfi_endproc
 1912              	.LFE88:
 1914              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1915              		.align	1
 1916              		.weak	HAL_ADC_ErrorCallback
 1917              		.syntax unified
 1918              		.thumb
 1919              		.thumb_func
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 95


 1921              	HAL_ADC_ErrorCallback:
 1922              	.LVL100:
 1923              	.LFB89:
1567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1924              		.loc 1 1567 1 is_stmt 1 view -0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 0
 1927              		@ frame_needed = 0, uses_anonymous_args = 0
 1928              		@ link register save eliminated.
1569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 1929              		.loc 1 1569 3 view .LVU600
1573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 1930              		.loc 1 1573 1 is_stmt 0 view .LVU601
 1931 0000 7047     		bx	lr
 1932              		.cfi_endproc
 1933              	.LFE89:
 1935              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1936              		.align	1
 1937              		.global	HAL_ADC_IRQHandler
 1938              		.syntax unified
 1939              		.thumb
 1940              		.thumb_func
 1942              	HAL_ADC_IRQHandler:
 1943              	.LVL101:
 1944              	.LFB82:
1167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1945              		.loc 1 1167 1 is_stmt 1 view -0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 0
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
1167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1949              		.loc 1 1167 1 is_stmt 0 view .LVU603
 1950 0000 38B5     		push	{r3, r4, r5, lr}
 1951              	.LCFI19:
 1952              		.cfi_def_cfa_offset 16
 1953              		.cfi_offset 3, -16
 1954              		.cfi_offset 4, -12
 1955              		.cfi_offset 5, -8
 1956              		.cfi_offset 14, -4
 1957 0002 0446     		mov	r4, r0
1168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1958              		.loc 1 1168 3 is_stmt 1 view .LVU604
 1959              	.LVL102:
1171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 1960              		.loc 1 1171 3 view .LVU605
1172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 1961              		.loc 1 1172 3 view .LVU606
1173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 1962              		.loc 1 1173 3 view .LVU607
1175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1963              		.loc 1 1175 3 view .LVU608
1175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1964              		.loc 1 1175 10 is_stmt 0 view .LVU609
 1965 0004 0268     		ldr	r2, [r0]
 1966 0006 1168     		ldr	r1, [r2]
 1967              	.LVL103:
1176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 96


 1968              		.loc 1 1176 3 is_stmt 1 view .LVU610
1176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
 1969              		.loc 1 1176 10 is_stmt 0 view .LVU611
 1970 0008 5368     		ldr	r3, [r2, #4]
 1971              	.LVL104:
1178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1972              		.loc 1 1178 3 is_stmt 1 view .LVU612
1178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1973              		.loc 1 1178 5 is_stmt 0 view .LVU613
 1974 000a 11F0020F 		tst	r1, #2
 1975 000e 2FD0     		beq	.L135
 1976 0010 03F02003 		and	r3, r3, #32
 1977              	.LVL105:
1178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 1978              		.loc 1 1178 11 discriminator 1 view .LVU614
 1979 0014 63B3     		cbz	r3, .L135
1181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1980              		.loc 1 1181 5 is_stmt 1 view .LVU615
1181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1981              		.loc 1 1181 9 is_stmt 0 view .LVU616
 1982 0016 036C     		ldr	r3, [r0, #64]
 1983              	.LVL106:
1181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 1984              		.loc 1 1181 8 view .LVU617
 1985 0018 13F0100F 		tst	r3, #16
 1986 001c 03D1     		bne	.L136
1184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 1987              		.loc 1 1184 7 is_stmt 1 view .LVU618
 1988 001e 036C     		ldr	r3, [r0, #64]
 1989 0020 43F40073 		orr	r3, r3, #512
 1990 0024 0364     		str	r3, [r0, #64]
 1991              	.L136:
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1992              		.loc 1 1193 5 view .LVU619
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1993              		.loc 1 1193 8 is_stmt 0 view .LVU620
 1994 0026 9368     		ldr	r3, [r2, #8]
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1995              		.loc 1 1193 7 view .LVU621
 1996 0028 13F0405F 		tst	r3, #805306368
 1997 002c 19D1     		bne	.L137
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1998              		.loc 1 1194 19 discriminator 1 view .LVU622
 1999 002e 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2000              		.loc 1 1193 62 discriminator 1 view .LVU623
 2001 0030 BBB9     		cbnz	r3, .L137
1195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 2002              		.loc 1 1195 9 view .LVU624
 2003 0032 D36A     		ldr	r3, [r2, #44]
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 2004              		.loc 1 1194 62 view .LVU625
 2005 0034 13F4700F 		tst	r3, #15728640
 2006 0038 03D0     		beq	.L138
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2007              		.loc 1 1196 9 view .LVU626
 2008 003a 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 97


1195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 2009              		.loc 1 1195 58 view .LVU627
 2010 003c 13F4806F 		tst	r3, #1024
 2011 0040 0FD1     		bne	.L137
 2012              	.L138:
1202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 2013              		.loc 1 1202 7 is_stmt 1 view .LVU628
 2014 0042 5368     		ldr	r3, [r2, #4]
 2015 0044 23F02003 		bic	r3, r3, #32
 2016 0048 5360     		str	r3, [r2, #4]
1205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 2017              		.loc 1 1205 7 view .LVU629
 2018 004a 236C     		ldr	r3, [r4, #64]
 2019 004c 23F48073 		bic	r3, r3, #256
 2020 0050 2364     		str	r3, [r4, #64]
1207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2021              		.loc 1 1207 7 view .LVU630
1207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2022              		.loc 1 1207 11 is_stmt 0 view .LVU631
 2023 0052 236C     		ldr	r3, [r4, #64]
1207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2024              		.loc 1 1207 10 view .LVU632
 2025 0054 13F4805F 		tst	r3, #4096
 2026 0058 03D1     		bne	.L137
1209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 2027              		.loc 1 1209 9 is_stmt 1 view .LVU633
 2028 005a 236C     		ldr	r3, [r4, #64]
 2029 005c 43F00103 		orr	r3, r3, #1
 2030 0060 2364     		str	r3, [r4, #64]
 2031              	.L137:
1217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2032              		.loc 1 1217 5 view .LVU634
 2033 0062 2046     		mov	r0, r4
 2034              	.LVL107:
1217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2035              		.loc 1 1217 5 is_stmt 0 view .LVU635
 2036 0064 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2037              	.LVL108:
1221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2038              		.loc 1 1221 5 is_stmt 1 view .LVU636
 2039 0068 2368     		ldr	r3, [r4]
 2040 006a 6FF01202 		mvn	r2, #18
 2041 006e 1A60     		str	r2, [r3]
 2042              	.L135:
1224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 2043              		.loc 1 1224 3 view .LVU637
1224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 2044              		.loc 1 1224 10 is_stmt 0 view .LVU638
 2045 0070 2368     		ldr	r3, [r4]
 2046 0072 1968     		ldr	r1, [r3]
 2047              	.LVL109:
1225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 2048              		.loc 1 1225 3 is_stmt 1 view .LVU639
1225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 2049              		.loc 1 1225 10 is_stmt 0 view .LVU640
 2050 0074 5A68     		ldr	r2, [r3, #4]
 2051 0076 02F08002 		and	r2, r2, #128
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 98


 2052              	.LVL110:
1227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2053              		.loc 1 1227 3 is_stmt 1 view .LVU641
1227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2054              		.loc 1 1227 5 is_stmt 0 view .LVU642
 2055 007a 11F0040F 		tst	r1, #4
 2056 007e 36D0     		beq	.L139
1227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2057              		.loc 1 1227 11 discriminator 1 view .LVU643
 2058 0080 002A     		cmp	r2, #0
 2059 0082 34D0     		beq	.L139
1230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2060              		.loc 1 1230 5 is_stmt 1 view .LVU644
1230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2061              		.loc 1 1230 9 is_stmt 0 view .LVU645
 2062 0084 226C     		ldr	r2, [r4, #64]
 2063              	.LVL111:
1230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2064              		.loc 1 1230 8 view .LVU646
 2065 0086 12F0100F 		tst	r2, #16
 2066 008a 03D1     		bne	.L140
1233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 2067              		.loc 1 1233 7 is_stmt 1 view .LVU647
 2068 008c 226C     		ldr	r2, [r4, #64]
 2069 008e 42F40052 		orr	r2, r2, #8192
 2070 0092 2264     		str	r2, [r4, #64]
 2071              	.L140:
1240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 2072              		.loc 1 1240 5 view .LVU648
1240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 2073              		.loc 1 1240 8 is_stmt 0 view .LVU649
 2074 0094 9A68     		ldr	r2, [r3, #8]
1240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 2075              		.loc 1 1240 7 view .LVU650
 2076 0096 12F4401F 		tst	r2, #3145728
 2077 009a 21D1     		bne	.L141
1241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 2078              		.loc 1 1241 9 discriminator 1 view .LVU651
 2079 009c 9A6B     		ldr	r2, [r3, #56]
1240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 2080              		.loc 1 1240 64 discriminator 1 view .LVU652
 2081 009e 12F4401F 		tst	r2, #3145728
 2082 00a2 03D0     		beq	.L142
1242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 2083              		.loc 1 1242 9 view .LVU653
 2084 00a4 9A68     		ldr	r2, [r3, #8]
1241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 2085              		.loc 1 1241 60 view .LVU654
 2086 00a6 12F4806F 		tst	r2, #1024
 2087 00aa 19D1     		bne	.L141
 2088              	.L142:
1243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 2089              		.loc 1 1243 9 view .LVU655
 2090 00ac 5A68     		ldr	r2, [r3, #4]
1242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 2091              		.loc 1 1242 64 view .LVU656
 2092 00ae 12F4806F 		tst	r2, #1024
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 99


 2093 00b2 15D1     		bne	.L141
1244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 2094              		.loc 1 1244 10 view .LVU657
 2095 00b4 9A68     		ldr	r2, [r3, #8]
1243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 2096              		.loc 1 1243 60 view .LVU658
 2097 00b6 12F0405F 		tst	r2, #805306368
 2098 00ba 11D1     		bne	.L141
1245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2099              		.loc 1 1245 20 view .LVU659
 2100 00bc 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
1244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 2101              		.loc 1 1244 52 view .LVU660
 2102 00be 7AB9     		cbnz	r2, .L141
1248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 2103              		.loc 1 1248 7 is_stmt 1 view .LVU661
 2104 00c0 5A68     		ldr	r2, [r3, #4]
 2105 00c2 22F08002 		bic	r2, r2, #128
 2106 00c6 5A60     		str	r2, [r3, #4]
1251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2107              		.loc 1 1251 7 view .LVU662
 2108 00c8 236C     		ldr	r3, [r4, #64]
 2109 00ca 23F48053 		bic	r3, r3, #4096
 2110 00ce 2364     		str	r3, [r4, #64]
1253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       { 
 2111              		.loc 1 1253 7 view .LVU663
1253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       { 
 2112              		.loc 1 1253 11 is_stmt 0 view .LVU664
 2113 00d0 236C     		ldr	r3, [r4, #64]
1253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       { 
 2114              		.loc 1 1253 10 view .LVU665
 2115 00d2 13F4807F 		tst	r3, #256
 2116 00d6 03D1     		bne	.L141
1255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 2117              		.loc 1 1255 9 is_stmt 1 view .LVU666
 2118 00d8 236C     		ldr	r3, [r4, #64]
 2119 00da 43F00103 		orr	r3, r3, #1
 2120 00de 2364     		str	r3, [r4, #64]
 2121              	.L141:
1263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2122              		.loc 1 1263 7 view .LVU667
 2123 00e0 2046     		mov	r0, r4
 2124 00e2 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 2125              	.LVL112:
1267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2126              		.loc 1 1267 5 view .LVU668
 2127 00e6 2368     		ldr	r3, [r4]
 2128 00e8 6FF00C02 		mvn	r2, #12
 2129 00ec 1A60     		str	r2, [r3]
 2130              	.L139:
1270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 2131              		.loc 1 1270 3 view .LVU669
1270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 2132              		.loc 1 1270 10 is_stmt 0 view .LVU670
 2133 00ee 2268     		ldr	r2, [r4]
 2134 00f0 1168     		ldr	r1, [r2]
 2135              	.LVL113:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 100


1271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check Analog watchdog flag */
 2136              		.loc 1 1271 3 is_stmt 1 view .LVU671
1271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check Analog watchdog flag */
 2137              		.loc 1 1271 10 is_stmt 0 view .LVU672
 2138 00f2 5368     		ldr	r3, [r2, #4]
 2139 00f4 03F04003 		and	r3, r3, #64
 2140              	.LVL114:
1273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2141              		.loc 1 1273 3 is_stmt 1 view .LVU673
1273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2142              		.loc 1 1273 5 is_stmt 0 view .LVU674
 2143 00f8 11F0010F 		tst	r1, #1
 2144 00fc 04D0     		beq	.L143
1273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2145              		.loc 1 1273 11 discriminator 1 view .LVU675
 2146 00fe 1BB1     		cbz	r3, .L143
1275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2147              		.loc 1 1275 5 is_stmt 1 view .LVU676
1275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2148              		.loc 1 1275 8 is_stmt 0 view .LVU677
 2149 0100 1368     		ldr	r3, [r2]
 2150              	.LVL115:
1275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2151              		.loc 1 1275 7 view .LVU678
 2152 0102 13F0010F 		tst	r3, #1
 2153 0106 09D1     		bne	.L146
 2154              	.LVL116:
 2155              	.L143:
1292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 2156              		.loc 1 1292 3 is_stmt 1 view .LVU679
1292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 2157              		.loc 1 1292 10 is_stmt 0 view .LVU680
 2158 0108 2268     		ldr	r2, [r4]
 2159 010a 1168     		ldr	r1, [r2]
 2160              	.LVL117:
1293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check Overrun flag */
 2161              		.loc 1 1293 3 is_stmt 1 view .LVU681
1293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Check Overrun flag */
 2162              		.loc 1 1293 10 is_stmt 0 view .LVU682
 2163 010c 5368     		ldr	r3, [r2, #4]
 2164 010e 03F08063 		and	r3, r3, #67108864
 2165              	.LVL118:
1295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2166              		.loc 1 1295 3 is_stmt 1 view .LVU683
1295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2167              		.loc 1 1295 5 is_stmt 0 view .LVU684
 2168 0112 11F0200F 		tst	r1, #32
 2169 0116 00D0     		beq	.L134
1295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2170              		.loc 1 1295 11 discriminator 1 view .LVU685
 2171 0118 63B9     		cbnz	r3, .L147
 2172              	.LVL119:
 2173              	.L134:
1317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2174              		.loc 1 1317 1 view .LVU686
 2175 011a 38BD     		pop	{r3, r4, r5, pc}
 2176              	.LVL120:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 101


 2177              	.L146:
1278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 2178              		.loc 1 1278 7 is_stmt 1 view .LVU687
 2179 011c 236C     		ldr	r3, [r4, #64]
 2180 011e 43F48033 		orr	r3, r3, #65536
 2181 0122 2364     		str	r3, [r4, #64]
1284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2182              		.loc 1 1284 7 view .LVU688
 2183 0124 2046     		mov	r0, r4
 2184 0126 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 2185              	.LVL121:
1288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 2186              		.loc 1 1288 7 view .LVU689
 2187 012a 2368     		ldr	r3, [r4]
 2188 012c 6FF00102 		mvn	r2, #1
 2189 0130 1A60     		str	r2, [r3]
 2190 0132 E9E7     		b	.L143
 2191              	.LVL122:
 2192              	.L147:
1302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2193              		.loc 1 1302 5 view .LVU690
 2194 0134 636C     		ldr	r3, [r4, #68]
 2195              	.LVL123:
1302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2196              		.loc 1 1302 5 is_stmt 0 view .LVU691
 2197 0136 43F00203 		orr	r3, r3, #2
 2198 013a 6364     		str	r3, [r4, #68]
1305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2199              		.loc 1 1305 5 is_stmt 1 view .LVU692
 2200 013c 6FF02005 		mvn	r5, #32
 2201 0140 1560     		str	r5, [r2]
1311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2202              		.loc 1 1311 7 view .LVU693
 2203 0142 2046     		mov	r0, r4
 2204 0144 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2205              	.LVL124:
1315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2206              		.loc 1 1315 5 view .LVU694
 2207 0148 2368     		ldr	r3, [r4]
 2208 014a 1D60     		str	r5, [r3]
1317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2209              		.loc 1 1317 1 is_stmt 0 view .LVU695
 2210 014c E5E7     		b	.L134
 2211              		.cfi_endproc
 2212              	.LFE82:
 2214              		.section	.text.ADC_DMAError,"ax",%progbits
 2215              		.align	1
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2220              	ADC_DMAError:
 2221              	.LVL125:
 2222              	.LFB97:
1985:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
1986:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** /**
1987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @brief  DMA error callback 
1988:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 102


1989:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1990:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   * @retval None
1991:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   */
1992:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
1993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** {
 2223              		.loc 1 1993 1 is_stmt 1 view -0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 0
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              		.loc 1 1993 1 is_stmt 0 view .LVU697
 2228 0000 08B5     		push	{r3, lr}
 2229              	.LCFI20:
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 3, -8
 2232              		.cfi_offset 14, -4
1994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2233              		.loc 1 1994 3 is_stmt 1 view .LVU698
 2234              		.loc 1 1994 22 is_stmt 0 view .LVU699
 2235 0002 806B     		ldr	r0, [r0, #56]
 2236              	.LVL126:
1995:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 2237              		.loc 1 1995 3 is_stmt 1 view .LVU700
 2238              		.loc 1 1995 14 is_stmt 0 view .LVU701
 2239 0004 4023     		movs	r3, #64
 2240 0006 0364     		str	r3, [r0, #64]
1996:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Set ADC error code to DMA error */
1997:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 2241              		.loc 1 1997 3 is_stmt 1 view .LVU702
 2242              		.loc 1 1997 19 is_stmt 0 view .LVU703
 2243 0008 436C     		ldr	r3, [r0, #68]
 2244 000a 43F00403 		orr	r3, r3, #4
 2245 000e 4364     		str	r3, [r0, #68]
1998:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****    /* Error callback */
1999:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2000:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2001:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #else
2002:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 2246              		.loc 1 2002 3 is_stmt 1 view .LVU704
 2247 0010 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2248              	.LVL127:
2003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2004:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2249              		.loc 1 2004 1 is_stmt 0 view .LVU705
 2250 0014 08BD     		pop	{r3, pc}
 2251              		.cfi_endproc
 2252              	.LFE97:
 2254              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 2255              		.align	1
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2260              	ADC_DMAConvCplt:
 2261              	.LVL128:
 2262              	.LFB95:
1906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 2263              		.loc 1 1906 1 is_stmt 1 view -0
 2264              		.cfi_startproc
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 103


 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 0, uses_anonymous_args = 0
1906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 2267              		.loc 1 1906 1 is_stmt 0 view .LVU707
 2268 0000 08B5     		push	{r3, lr}
 2269              	.LCFI21:
 2270              		.cfi_def_cfa_offset 8
 2271              		.cfi_offset 3, -8
 2272              		.cfi_offset 14, -4
 2273 0002 0346     		mov	r3, r0
1908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2274              		.loc 1 1908 3 is_stmt 1 view .LVU708
1908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2275              		.loc 1 1908 22 is_stmt 0 view .LVU709
 2276 0004 806B     		ldr	r0, [r0, #56]
 2277              	.LVL129:
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2278              		.loc 1 1911 3 is_stmt 1 view .LVU710
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2279              		.loc 1 1911 7 is_stmt 0 view .LVU711
 2280 0006 026C     		ldr	r2, [r0, #64]
1911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2281              		.loc 1 1911 6 view .LVU712
 2282 0008 12F0500F 		tst	r2, #80
 2283 000c 25D1     		bne	.L151
1914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2284              		.loc 1 1914 5 is_stmt 1 view .LVU713
 2285 000e 036C     		ldr	r3, [r0, #64]
 2286              	.LVL130:
1914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2287              		.loc 1 1914 5 is_stmt 0 view .LVU714
 2288 0010 43F40073 		orr	r3, r3, #512
 2289 0014 0364     		str	r3, [r0, #64]
1922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2290              		.loc 1 1922 5 is_stmt 1 view .LVU715
1922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2291              		.loc 1 1922 8 is_stmt 0 view .LVU716
 2292 0016 0368     		ldr	r3, [r0]
 2293 0018 9A68     		ldr	r2, [r3, #8]
1922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2294              		.loc 1 1922 7 view .LVU717
 2295 001a 12F0405F 		tst	r2, #805306368
 2296 001e 19D1     		bne	.L152
1923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 2297              		.loc 1 1923 19 discriminator 1 view .LVU718
 2298 0020 027E     		ldrb	r2, [r0, #24]	@ zero_extendqisi2
1922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2299              		.loc 1 1922 62 discriminator 1 view .LVU719
 2300 0022 BAB9     		cbnz	r2, .L152
1924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 2301              		.loc 1 1924 9 view .LVU720
 2302 0024 DA6A     		ldr	r2, [r3, #44]
1923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 2303              		.loc 1 1923 62 view .LVU721
 2304 0026 12F4700F 		tst	r2, #15728640
 2305 002a 03D0     		beq	.L153
1925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 104


 2306              		.loc 1 1925 9 view .LVU722
 2307 002c 9A68     		ldr	r2, [r3, #8]
1924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 2308              		.loc 1 1924 58 view .LVU723
 2309 002e 12F4806F 		tst	r2, #1024
 2310 0032 0FD1     		bne	.L152
 2311              	.L153:
1931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 2312              		.loc 1 1931 7 is_stmt 1 view .LVU724
 2313 0034 5A68     		ldr	r2, [r3, #4]
 2314 0036 22F02002 		bic	r2, r2, #32
 2315 003a 5A60     		str	r2, [r3, #4]
1934:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       
 2316              		.loc 1 1934 7 view .LVU725
 2317 003c 036C     		ldr	r3, [r0, #64]
 2318 003e 23F48073 		bic	r3, r3, #256
 2319 0042 0364     		str	r3, [r0, #64]
1936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2320              		.loc 1 1936 7 view .LVU726
1936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2321              		.loc 1 1936 11 is_stmt 0 view .LVU727
 2322 0044 036C     		ldr	r3, [r0, #64]
1936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2323              		.loc 1 1936 10 view .LVU728
 2324 0046 13F4805F 		tst	r3, #4096
 2325 004a 03D1     		bne	.L152
1938:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 2326              		.loc 1 1938 9 is_stmt 1 view .LVU729
 2327 004c 036C     		ldr	r3, [r0, #64]
 2328 004e 43F00103 		orr	r3, r3, #1
 2329 0052 0364     		str	r3, [r0, #64]
 2330              	.L152:
1946:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2331              		.loc 1 1946 5 view .LVU730
 2332 0054 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2333              	.LVL131:
 2334              	.L150:
1966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2335              		.loc 1 1966 1 is_stmt 0 view .LVU731
 2336 0058 08BD     		pop	{r3, pc}
 2337              	.LVL132:
 2338              	.L151:
1951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2339              		.loc 1 1951 5 is_stmt 1 view .LVU732
1951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2340              		.loc 1 1951 14 is_stmt 0 view .LVU733
 2341 005a 026C     		ldr	r2, [r0, #64]
1951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2342              		.loc 1 1951 8 view .LVU734
 2343 005c 12F0100F 		tst	r2, #16
 2344 0060 04D1     		bne	.L157
1963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 2345              		.loc 1 1963 7 is_stmt 1 view .LVU735
1963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 2346              		.loc 1 1963 11 is_stmt 0 view .LVU736
 2347 0062 826B     		ldr	r2, [r0, #56]
1963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 105


 2348              		.loc 1 1963 23 view .LVU737
 2349 0064 D26C     		ldr	r2, [r2, #76]
1963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 2350              		.loc 1 1963 7 view .LVU738
 2351 0066 1846     		mov	r0, r3
 2352              	.LVL133:
1963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     }
 2353              		.loc 1 1963 7 view .LVU739
 2354 0068 9047     		blx	r2
 2355              	.LVL134:
1966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2356              		.loc 1 1966 1 view .LVU740
 2357 006a F5E7     		b	.L150
 2358              	.LVL135:
 2359              	.L157:
1957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2360              		.loc 1 1957 7 is_stmt 1 view .LVU741
 2361 006c FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2362              	.LVL136:
1957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2363              		.loc 1 1957 7 is_stmt 0 view .LVU742
 2364 0070 F2E7     		b	.L150
 2365              		.cfi_endproc
 2366              	.LFE95:
 2368              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2369              		.align	1
 2370              		.global	HAL_ADC_ConfigChannel
 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2375              	HAL_ADC_ConfigChannel:
 2376              	.LVL137:
 2377              	.LFB90:
1605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2378              		.loc 1 1605 1 is_stmt 1 view -0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 8
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              		@ link register save eliminated.
1605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2383              		.loc 1 1605 1 is_stmt 0 view .LVU744
 2384 0000 30B4     		push	{r4, r5}
 2385              	.LCFI22:
 2386              		.cfi_def_cfa_offset 8
 2387              		.cfi_offset 4, -8
 2388              		.cfi_offset 5, -4
 2389 0002 82B0     		sub	sp, sp, #8
 2390              	.LCFI23:
 2391              		.cfi_def_cfa_offset 16
1606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2392              		.loc 1 1606 3 is_stmt 1 view .LVU745
1606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2393              		.loc 1 1606 17 is_stmt 0 view .LVU746
 2394 0004 0023     		movs	r3, #0
 2395 0006 0193     		str	r3, [sp, #4]
1609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 2396              		.loc 1 1609 3 is_stmt 1 view .LVU747
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 106


1610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2397              		.loc 1 1610 3 view .LVU748
1611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2398              		.loc 1 1611 3 view .LVU749
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2399              		.loc 1 1614 3 view .LVU750
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2400              		.loc 1 1614 3 view .LVU751
 2401 0008 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2402 000c 012B     		cmp	r3, #1
 2403 000e 00F0BB80 		beq	.L169
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2404              		.loc 1 1614 3 discriminator 2 view .LVU752
 2405 0012 0123     		movs	r3, #1
 2406 0014 80F83C30 		strb	r3, [r0, #60]
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2407              		.loc 1 1614 3 discriminator 2 view .LVU753
1617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2408              		.loc 1 1617 3 discriminator 2 view .LVU754
1617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2409              		.loc 1 1617 14 is_stmt 0 discriminator 2 view .LVU755
 2410 0018 0B68     		ldr	r3, [r1]
1617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2411              		.loc 1 1617 6 discriminator 2 view .LVU756
 2412 001a 092B     		cmp	r3, #9
 2413 001c 41D9     		bls	.L160
1620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2414              		.loc 1 1620 5 is_stmt 1 view .LVU757
1620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2415              		.loc 1 1620 9 is_stmt 0 view .LVU758
 2416 001e 0468     		ldr	r4, [r0]
1620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2417              		.loc 1 1620 27 view .LVU759
 2418 0020 E268     		ldr	r2, [r4, #12]
1620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2419              		.loc 1 1620 31 view .LVU760
 2420 0022 9BB2     		uxth	r3, r3
 2421 0024 03EB4303 		add	r3, r3, r3, lsl #1
 2422 0028 1E3B     		subs	r3, r3, #30
 2423 002a 4FF0070C 		mov	ip, #7
 2424 002e 0CFA03F3 		lsl	r3, ip, r3
1620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2425              		.loc 1 1620 27 view .LVU761
 2426 0032 22EA0303 		bic	r3, r2, r3
 2427 0036 E360     		str	r3, [r4, #12]
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2428              		.loc 1 1623 5 is_stmt 1 view .LVU762
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2429              		.loc 1 1623 9 is_stmt 0 view .LVU763
 2430 0038 0468     		ldr	r4, [r0]
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2431              		.loc 1 1623 27 view .LVU764
 2432 003a E268     		ldr	r2, [r4, #12]
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2433              		.loc 1 1623 30 view .LVU765
 2434 003c 0B88     		ldrh	r3, [r1]
 2435 003e 03EB4303 		add	r3, r3, r3, lsl #1
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 107


 2436 0042 1E3B     		subs	r3, r3, #30
 2437 0044 8D68     		ldr	r5, [r1, #8]
 2438 0046 05FA03F3 		lsl	r3, r5, r3
1623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2439              		.loc 1 1623 27 view .LVU766
 2440 004a 1343     		orrs	r3, r3, r2
 2441 004c E360     		str	r3, [r4, #12]
 2442              	.L161:
1635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2443              		.loc 1 1635 3 is_stmt 1 view .LVU767
1635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2444              		.loc 1 1635 14 is_stmt 0 view .LVU768
 2445 004e 4B68     		ldr	r3, [r1, #4]
1635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2446              		.loc 1 1635 6 view .LVU769
 2447 0050 062B     		cmp	r3, #6
 2448 0052 3DD8     		bhi	.L162
1638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2449              		.loc 1 1638 5 is_stmt 1 view .LVU770
1638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2450              		.loc 1 1638 9 is_stmt 0 view .LVU771
 2451 0054 0468     		ldr	r4, [r0]
1638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2452              		.loc 1 1638 26 view .LVU772
 2453 0056 626B     		ldr	r2, [r4, #52]
1638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2454              		.loc 1 1638 30 view .LVU773
 2455 0058 03EB8303 		add	r3, r3, r3, lsl #2
 2456 005c 053B     		subs	r3, r3, #5
 2457 005e 4FF01F0C 		mov	ip, #31
 2458 0062 0CFA03F3 		lsl	r3, ip, r3
1638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2459              		.loc 1 1638 26 view .LVU774
 2460 0066 22EA0303 		bic	r3, r2, r3
 2461 006a 6363     		str	r3, [r4, #52]
1641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2462              		.loc 1 1641 5 is_stmt 1 view .LVU775
1641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2463              		.loc 1 1641 9 is_stmt 0 view .LVU776
 2464 006c 0468     		ldr	r4, [r0]
1641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2465              		.loc 1 1641 26 view .LVU777
 2466 006e 626B     		ldr	r2, [r4, #52]
1641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2467              		.loc 1 1641 29 view .LVU778
 2468 0070 4B68     		ldr	r3, [r1, #4]
 2469 0072 03EB8303 		add	r3, r3, r3, lsl #2
 2470 0076 053B     		subs	r3, r3, #5
 2471 0078 B1F800C0 		ldrh	ip, [r1]
 2472 007c 0CFA03F3 		lsl	r3, ip, r3
1641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2473              		.loc 1 1641 26 view .LVU779
 2474 0080 1343     		orrs	r3, r3, r2
 2475 0082 6363     		str	r3, [r4, #52]
 2476              	.L163:
1663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2477              		.loc 1 1663 3 is_stmt 1 view .LVU780
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 108


1663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2478              		.loc 1 1663 12 is_stmt 0 view .LVU781
 2479 0084 0268     		ldr	r2, [r0]
1663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2480              		.loc 1 1663 6 view .LVU782
 2481 0086 414B     		ldr	r3, .L173
 2482 0088 9A42     		cmp	r2, r3
 2483 008a 51D0     		beq	.L171
 2484              	.L165:
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2485              		.loc 1 1670 3 is_stmt 1 view .LVU783
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2486              		.loc 1 1670 12 is_stmt 0 view .LVU784
 2487 008c 0268     		ldr	r2, [r0]
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2488              		.loc 1 1670 6 view .LVU785
 2489 008e 3F4B     		ldr	r3, .L173
 2490 0090 9A42     		cmp	r2, r3
 2491 0092 56D0     		beq	.L172
 2492              	.L166:
1688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2493              		.loc 1 1688 3 is_stmt 1 view .LVU786
1688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2494              		.loc 1 1688 3 view .LVU787
 2495 0094 0023     		movs	r3, #0
 2496 0096 80F83C30 		strb	r3, [r0, #60]
1688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2497              		.loc 1 1688 3 view .LVU788
1691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2498              		.loc 1 1691 3 view .LVU789
1691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2499              		.loc 1 1691 10 is_stmt 0 view .LVU790
 2500 009a 1846     		mov	r0, r3
 2501              	.LVL138:
 2502              	.L159:
1692:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2503              		.loc 1 1692 1 view .LVU791
 2504 009c 02B0     		add	sp, sp, #8
 2505              	.LCFI24:
 2506              		.cfi_remember_state
 2507              		.cfi_def_cfa_offset 8
 2508              		@ sp needed
 2509 009e 30BC     		pop	{r4, r5}
 2510              	.LCFI25:
 2511              		.cfi_restore 5
 2512              		.cfi_restore 4
 2513              		.cfi_def_cfa_offset 0
 2514 00a0 7047     		bx	lr
 2515              	.LVL139:
 2516              	.L160:
 2517              	.LCFI26:
 2518              		.cfi_restore_state
1628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2519              		.loc 1 1628 5 is_stmt 1 view .LVU792
1628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2520              		.loc 1 1628 9 is_stmt 0 view .LVU793
 2521 00a2 0468     		ldr	r4, [r0]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 109


1628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2522              		.loc 1 1628 27 view .LVU794
 2523 00a4 2269     		ldr	r2, [r4, #16]
1628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2524              		.loc 1 1628 31 view .LVU795
 2525 00a6 9BB2     		uxth	r3, r3
 2526 00a8 03EB4303 		add	r3, r3, r3, lsl #1
 2527 00ac 4FF0070C 		mov	ip, #7
 2528 00b0 0CFA03F3 		lsl	r3, ip, r3
1628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2529              		.loc 1 1628 27 view .LVU796
 2530 00b4 22EA0303 		bic	r3, r2, r3
 2531 00b8 2361     		str	r3, [r4, #16]
1631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2532              		.loc 1 1631 5 is_stmt 1 view .LVU797
1631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2533              		.loc 1 1631 9 is_stmt 0 view .LVU798
 2534 00ba 0468     		ldr	r4, [r0]
1631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2535              		.loc 1 1631 27 view .LVU799
 2536 00bc 2269     		ldr	r2, [r4, #16]
1631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2537              		.loc 1 1631 30 view .LVU800
 2538 00be 0B88     		ldrh	r3, [r1]
 2539 00c0 03EB4303 		add	r3, r3, r3, lsl #1
 2540 00c4 8D68     		ldr	r5, [r1, #8]
 2541 00c6 05FA03F3 		lsl	r3, r5, r3
1631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2542              		.loc 1 1631 27 view .LVU801
 2543 00ca 1343     		orrs	r3, r3, r2
 2544 00cc 2361     		str	r3, [r4, #16]
 2545 00ce BEE7     		b	.L161
 2546              	.L162:
1644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2547              		.loc 1 1644 8 is_stmt 1 view .LVU802
1644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2548              		.loc 1 1644 11 is_stmt 0 view .LVU803
 2549 00d0 0C2B     		cmp	r3, #12
 2550 00d2 16D8     		bhi	.L164
1647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2551              		.loc 1 1647 5 is_stmt 1 view .LVU804
1647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2552              		.loc 1 1647 9 is_stmt 0 view .LVU805
 2553 00d4 0568     		ldr	r5, [r0]
1647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2554              		.loc 1 1647 26 view .LVU806
 2555 00d6 2A6B     		ldr	r2, [r5, #48]
1647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2556              		.loc 1 1647 30 view .LVU807
 2557 00d8 03EB8303 		add	r3, r3, r3, lsl #2
 2558 00dc 233B     		subs	r3, r3, #35
 2559 00de 1F24     		movs	r4, #31
 2560 00e0 04FA03F3 		lsl	r3, r4, r3
1647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2561              		.loc 1 1647 26 view .LVU808
 2562 00e4 22EA0303 		bic	r3, r2, r3
 2563 00e8 2B63     		str	r3, [r5, #48]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 110


1650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2564              		.loc 1 1650 5 is_stmt 1 view .LVU809
1650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2565              		.loc 1 1650 9 is_stmt 0 view .LVU810
 2566 00ea 0568     		ldr	r5, [r0]
1650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2567              		.loc 1 1650 26 view .LVU811
 2568 00ec 2A6B     		ldr	r2, [r5, #48]
1650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2569              		.loc 1 1650 29 view .LVU812
 2570 00ee 4B68     		ldr	r3, [r1, #4]
 2571 00f0 03EB8303 		add	r3, r3, r3, lsl #2
 2572 00f4 233B     		subs	r3, r3, #35
 2573 00f6 0C88     		ldrh	r4, [r1]
 2574 00f8 04FA03F3 		lsl	r3, r4, r3
1650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2575              		.loc 1 1650 26 view .LVU813
 2576 00fc 1343     		orrs	r3, r3, r2
 2577 00fe 2B63     		str	r3, [r5, #48]
 2578 0100 C0E7     		b	.L163
 2579              	.L164:
1656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2580              		.loc 1 1656 5 is_stmt 1 view .LVU814
1656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2581              		.loc 1 1656 9 is_stmt 0 view .LVU815
 2582 0102 0568     		ldr	r5, [r0]
1656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2583              		.loc 1 1656 26 view .LVU816
 2584 0104 EA6A     		ldr	r2, [r5, #44]
1656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2585              		.loc 1 1656 30 view .LVU817
 2586 0106 03EB8303 		add	r3, r3, r3, lsl #2
 2587 010a 413B     		subs	r3, r3, #65
 2588 010c 1F24     		movs	r4, #31
 2589 010e 04FA03F3 		lsl	r3, r4, r3
1656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2590              		.loc 1 1656 26 view .LVU818
 2591 0112 22EA0303 		bic	r3, r2, r3
 2592 0116 EB62     		str	r3, [r5, #44]
1659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2593              		.loc 1 1659 5 is_stmt 1 view .LVU819
1659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2594              		.loc 1 1659 9 is_stmt 0 view .LVU820
 2595 0118 0568     		ldr	r5, [r0]
1659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2596              		.loc 1 1659 26 view .LVU821
 2597 011a EA6A     		ldr	r2, [r5, #44]
1659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2598              		.loc 1 1659 29 view .LVU822
 2599 011c 4B68     		ldr	r3, [r1, #4]
 2600 011e 03EB8303 		add	r3, r3, r3, lsl #2
 2601 0122 413B     		subs	r3, r3, #65
 2602 0124 0C88     		ldrh	r4, [r1]
 2603 0126 04FA03F3 		lsl	r3, r4, r3
1659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2604              		.loc 1 1659 26 view .LVU823
 2605 012a 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 111


 2606 012c EB62     		str	r3, [r5, #44]
 2607 012e A9E7     		b	.L163
 2608              	.L171:
1663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2609              		.loc 1 1663 43 discriminator 1 view .LVU824
 2610 0130 0B68     		ldr	r3, [r1]
1663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2611              		.loc 1 1663 32 discriminator 1 view .LVU825
 2612 0132 122B     		cmp	r3, #18
 2613 0134 AAD1     		bne	.L165
1666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2614              		.loc 1 1666 5 is_stmt 1 view .LVU826
1666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2615              		.loc 1 1666 14 is_stmt 0 view .LVU827
 2616 0136 164A     		ldr	r2, .L173+4
 2617 0138 5368     		ldr	r3, [r2, #4]
 2618 013a 43F48003 		orr	r3, r3, #4194304
 2619 013e 5360     		str	r3, [r2, #4]
 2620 0140 A4E7     		b	.L165
 2621              	.L172:
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2622              		.loc 1 1670 44 discriminator 1 view .LVU828
 2623 0142 0B68     		ldr	r3, [r1]
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2624              		.loc 1 1670 81 discriminator 1 view .LVU829
 2625 0144 103B     		subs	r3, r3, #16
1670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2626              		.loc 1 1670 32 discriminator 1 view .LVU830
 2627 0146 012B     		cmp	r3, #1
 2628 0148 A4D8     		bhi	.L166
1673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2629              		.loc 1 1673 5 is_stmt 1 view .LVU831
1673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2630              		.loc 1 1673 14 is_stmt 0 view .LVU832
 2631 014a 114A     		ldr	r2, .L173+4
 2632 014c 5368     		ldr	r3, [r2, #4]
 2633 014e 43F40003 		orr	r3, r3, #8388608
 2634 0152 5360     		str	r3, [r2, #4]
1675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2635              		.loc 1 1675 5 is_stmt 1 view .LVU833
1675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2636              		.loc 1 1675 15 is_stmt 0 view .LVU834
 2637 0154 0B68     		ldr	r3, [r1]
1675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     {
 2638              		.loc 1 1675 7 view .LVU835
 2639 0156 102B     		cmp	r3, #16
 2640 0158 9CD1     		bne	.L166
1679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       while(counter != 0U)
 2641              		.loc 1 1679 7 is_stmt 1 view .LVU836
1679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       while(counter != 0U)
 2642              		.loc 1 1679 61 is_stmt 0 view .LVU837
 2643 015a 0E4B     		ldr	r3, .L173+8
 2644 015c 1B68     		ldr	r3, [r3]
 2645 015e 02F14672 		add	r2, r2, #51904512
 2646 0162 02F52E32 		add	r2, r2, #178176
 2647 0166 02F28332 		addw	r2, r2, #899
 2648 016a A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 112


 2649 016e 9B0C     		lsrs	r3, r3, #18
1679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       while(counter != 0U)
 2650              		.loc 1 1679 42 view .LVU838
 2651 0170 03EB8303 		add	r3, r3, r3, lsl #2
 2652 0174 5B00     		lsls	r3, r3, #1
1679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       while(counter != 0U)
 2653              		.loc 1 1679 15 view .LVU839
 2654 0176 0193     		str	r3, [sp, #4]
1680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2655              		.loc 1 1680 7 is_stmt 1 view .LVU840
1680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2656              		.loc 1 1680 12 is_stmt 0 view .LVU841
 2657 0178 02E0     		b	.L167
 2658              	.L168:
1682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 2659              		.loc 1 1682 9 is_stmt 1 view .LVU842
1682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       }
 2660              		.loc 1 1682 16 is_stmt 0 view .LVU843
 2661 017a 019B     		ldr	r3, [sp, #4]
 2662 017c 013B     		subs	r3, r3, #1
 2663 017e 0193     		str	r3, [sp, #4]
 2664              	.L167:
1680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2665              		.loc 1 1680 12 is_stmt 1 view .LVU844
1680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2666              		.loc 1 1680 21 is_stmt 0 view .LVU845
 2667 0180 019B     		ldr	r3, [sp, #4]
1680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****       {
 2668              		.loc 1 1680 12 view .LVU846
 2669 0182 002B     		cmp	r3, #0
 2670 0184 F9D1     		bne	.L168
 2671 0186 85E7     		b	.L166
 2672              	.L169:
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2673              		.loc 1 1614 3 view .LVU847
 2674 0188 0220     		movs	r0, #2
 2675              	.LVL140:
1614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****     
 2676              		.loc 1 1614 3 view .LVU848
 2677 018a 87E7     		b	.L159
 2678              	.L174:
 2679              		.align	2
 2680              	.L173:
 2681 018c 00200140 		.word	1073815552
 2682 0190 00230140 		.word	1073816320
 2683 0194 00000000 		.word	SystemCoreClock
 2684              		.cfi_endproc
 2685              	.LFE90:
 2687              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2688              		.align	1
 2689              		.global	HAL_ADC_AnalogWDGConfig
 2690              		.syntax unified
 2691              		.thumb
 2692              		.thumb_func
 2694              	HAL_ADC_AnalogWDGConfig:
 2695              	.LVL141:
 2696              	.LFB91:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 113


1711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
 2697              		.loc 1 1711 1 is_stmt 1 view -0
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 0
 2700              		@ frame_needed = 0, uses_anonymous_args = 0
 2701              		@ link register save eliminated.
1717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
 2702              		.loc 1 1717 3 view .LVU850
1718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 2703              		.loc 1 1718 3 view .LVU851
1719:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2704              		.loc 1 1719 3 view .LVU852
1728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2705              		.loc 1 1728 3 view .LVU853
1728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2706              		.loc 1 1728 3 view .LVU854
 2707 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2708 0004 012B     		cmp	r3, #1
 2709 0006 33D0     		beq	.L179
1711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
 2710              		.loc 1 1711 1 is_stmt 0 discriminator 2 view .LVU855
 2711 0008 10B4     		push	{r4}
 2712              	.LCFI27:
 2713              		.cfi_def_cfa_offset 4
 2714              		.cfi_offset 4, -4
1728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2715              		.loc 1 1728 3 is_stmt 1 discriminator 2 view .LVU856
 2716 000a 0123     		movs	r3, #1
 2717 000c 80F83C30 		strb	r3, [r0, #60]
1728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2718              		.loc 1 1728 3 discriminator 2 view .LVU857
1730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2719              		.loc 1 1730 3 discriminator 2 view .LVU858
1730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2720              		.loc 1 1730 21 is_stmt 0 discriminator 2 view .LVU859
 2721 0010 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
1730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   {
 2722              		.loc 1 1730 5 discriminator 2 view .LVU860
 2723 0012 012B     		cmp	r3, #1
 2724 0014 26D0     		beq	.L184
1738:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2725              		.loc 1 1738 5 is_stmt 1 view .LVU861
 2726 0016 0268     		ldr	r2, [r0]
 2727 0018 5368     		ldr	r3, [r2, #4]
 2728 001a 23F04003 		bic	r3, r3, #64
 2729 001e 5360     		str	r3, [r2, #4]
 2730              	.L178:
1742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2731              		.loc 1 1742 3 view .LVU862
1742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2732              		.loc 1 1742 7 is_stmt 0 view .LVU863
 2733 0020 0268     		ldr	r2, [r0]
1742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2734              		.loc 1 1742 23 view .LVU864
 2735 0022 5368     		ldr	r3, [r2, #4]
 2736 0024 23F44003 		bic	r3, r3, #12582912
 2737 0028 23F40073 		bic	r3, r3, #512
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 114


 2738 002c 5360     		str	r3, [r2, #4]
1745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2739              		.loc 1 1745 3 is_stmt 1 view .LVU865
1745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2740              		.loc 1 1745 7 is_stmt 0 view .LVU866
 2741 002e 0268     		ldr	r2, [r0]
1745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2742              		.loc 1 1745 23 view .LVU867
 2743 0030 5368     		ldr	r3, [r2, #4]
1745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2744              		.loc 1 1745 41 view .LVU868
 2745 0032 0C68     		ldr	r4, [r1]
1745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2746              		.loc 1 1745 23 view .LVU869
 2747 0034 2343     		orrs	r3, r3, r4
 2748 0036 5360     		str	r3, [r2, #4]
1748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2749              		.loc 1 1748 3 is_stmt 1 view .LVU870
1748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2750              		.loc 1 1748 7 is_stmt 0 view .LVU871
 2751 0038 0368     		ldr	r3, [r0]
1748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2752              		.loc 1 1748 40 view .LVU872
 2753 003a 4A68     		ldr	r2, [r1, #4]
1748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2754              		.loc 1 1748 23 view .LVU873
 2755 003c 5A62     		str	r2, [r3, #36]
1751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2756              		.loc 1 1751 3 is_stmt 1 view .LVU874
1751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2757              		.loc 1 1751 7 is_stmt 0 view .LVU875
 2758 003e 0368     		ldr	r3, [r0]
1751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2759              		.loc 1 1751 40 view .LVU876
 2760 0040 8A68     		ldr	r2, [r1, #8]
1751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2761              		.loc 1 1751 23 view .LVU877
 2762 0042 9A62     		str	r2, [r3, #40]
1754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2763              		.loc 1 1754 3 is_stmt 1 view .LVU878
1754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2764              		.loc 1 1754 7 is_stmt 0 view .LVU879
 2765 0044 0268     		ldr	r2, [r0]
1754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2766              		.loc 1 1754 23 view .LVU880
 2767 0046 5368     		ldr	r3, [r2, #4]
 2768 0048 23F01F03 		bic	r3, r3, #31
 2769 004c 5360     		str	r3, [r2, #4]
1757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2770              		.loc 1 1757 3 is_stmt 1 view .LVU881
1757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2771              		.loc 1 1757 7 is_stmt 0 view .LVU882
 2772 004e 0268     		ldr	r2, [r0]
1757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2773              		.loc 1 1757 23 view .LVU883
 2774 0050 5468     		ldr	r4, [r2, #4]
 2775 0052 8B89     		ldrh	r3, [r1, #12]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 115


 2776 0054 2343     		orrs	r3, r3, r4
 2777 0056 5360     		str	r3, [r2, #4]
1760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2778              		.loc 1 1760 3 is_stmt 1 view .LVU884
1760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2779              		.loc 1 1760 3 view .LVU885
 2780 0058 0023     		movs	r3, #0
 2781 005a 80F83C30 		strb	r3, [r0, #60]
1760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2782              		.loc 1 1760 3 view .LVU886
1763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2783              		.loc 1 1763 3 view .LVU887
1763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2784              		.loc 1 1763 10 is_stmt 0 view .LVU888
 2785 005e 1846     		mov	r0, r3
 2786              	.LVL142:
1764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2787              		.loc 1 1764 1 view .LVU889
 2788 0060 10BC     		pop	{r4}
 2789              	.LCFI28:
 2790              		.cfi_remember_state
 2791              		.cfi_restore 4
 2792              		.cfi_def_cfa_offset 0
 2793 0062 7047     		bx	lr
 2794              	.LVL143:
 2795              	.L184:
 2796              	.LCFI29:
 2797              		.cfi_restore_state
1733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   }
 2798              		.loc 1 1733 5 is_stmt 1 view .LVU890
 2799 0064 0268     		ldr	r2, [r0]
 2800 0066 5368     		ldr	r3, [r2, #4]
 2801 0068 43F04003 		orr	r3, r3, #64
 2802 006c 5360     		str	r3, [r2, #4]
 2803 006e D7E7     		b	.L178
 2804              	.L179:
 2805              	.LCFI30:
 2806              		.cfi_def_cfa_offset 0
 2807              		.cfi_restore 4
1728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   
 2808              		.loc 1 1728 3 is_stmt 0 view .LVU891
 2809 0070 0220     		movs	r0, #2
 2810              	.LVL144:
1764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2811              		.loc 1 1764 1 view .LVU892
 2812 0072 7047     		bx	lr
 2813              		.cfi_endproc
 2814              	.LFE91:
 2816              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2817              		.align	1
 2818              		.global	HAL_ADC_GetState
 2819              		.syntax unified
 2820              		.thumb
 2821              		.thumb_func
 2823              	HAL_ADC_GetState:
 2824              	.LVL145:
 2825              	.LFB92:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 116


1793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   /* Return ADC state */
 2826              		.loc 1 1793 1 is_stmt 1 view -0
 2827              		.cfi_startproc
 2828              		@ args = 0, pretend = 0, frame = 0
 2829              		@ frame_needed = 0, uses_anonymous_args = 0
 2830              		@ link register save eliminated.
1795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2831              		.loc 1 1795 3 view .LVU894
1795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2832              		.loc 1 1795 14 is_stmt 0 view .LVU895
 2833 0000 006C     		ldr	r0, [r0, #64]
 2834              	.LVL146:
1796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2835              		.loc 1 1796 1 view .LVU896
 2836 0002 7047     		bx	lr
 2837              		.cfi_endproc
 2838              	.LFE92:
 2840              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2841              		.align	1
 2842              		.global	HAL_ADC_GetError
 2843              		.syntax unified
 2844              		.thumb
 2845              		.thumb_func
 2847              	HAL_ADC_GetError:
 2848              	.LVL147:
 2849              	.LFB93:
1805:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c ****   return hadc->ErrorCode;
 2850              		.loc 1 1805 1 is_stmt 1 view -0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 0
 2853              		@ frame_needed = 0, uses_anonymous_args = 0
 2854              		@ link register save eliminated.
1806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2855              		.loc 1 1806 3 view .LVU898
1806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** }
 2856              		.loc 1 1806 14 is_stmt 0 view .LVU899
 2857 0000 406C     		ldr	r0, [r0, #68]
 2858              	.LVL148:
1807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c **** 
 2859              		.loc 1 1807 1 view .LVU900
 2860 0002 7047     		bx	lr
 2861              		.cfi_endproc
 2862              	.LFE93:
 2864              		.text
 2865              	.Letext0:
 2866              		.file 3 "e:\\download\\gnu\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-20
 2867              		.file 4 "e:\\download\\gnu\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-20
 2868              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f205xx.h"
 2869              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"
 2870              		.file 7 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 2871              		.file 8 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_dma.h"
 2872              		.file 9 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_adc.h"
 2873              		.file 10 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 2874              		.file 11 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_adc_ex.h"
 2875              		.file 12 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 117


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_hal_adc.c
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:18     .text.ADC_Init:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:23     .text.ADC_Init:00000000 ADC_Init
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:293    .text.ADC_Init:00000138 $d
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:299    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:305    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:320    .text.HAL_ADC_Init:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:326    .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:429    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:435    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:450    .text.HAL_ADC_DeInit:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:456    .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:528    .text.HAL_ADC_Start:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:534    .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:753    .text.HAL_ADC_Start:000000f8 $d
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:761    .text.HAL_ADC_Stop:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:767    .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:826    .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:832    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:988    .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:994    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1100   .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1106   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1331   .text.HAL_ADC_Start_IT:00000108 $d
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1339   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1345   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1409   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1415   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1676   .text.HAL_ADC_Start_DMA:00000138 $d
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2260   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1867   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2220   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1687   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1693   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1794   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1800   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1820   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1826   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1841   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1847   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1862   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1894   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1900   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1915   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1921   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1936   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:1942   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2215   .text.ADC_DMAError:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2255   .text.ADC_DMAConvCplt:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2369   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2375   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2681   .text.HAL_ADC_ConfigChannel:0000018c $d
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2688   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2694   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2817   .text.HAL_ADC_GetState:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2823   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s 			page 118


C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2841   .text.HAL_ADC_GetError:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccpCc8uw.s:2847   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADCEx_InjectedConvCpltCallback
